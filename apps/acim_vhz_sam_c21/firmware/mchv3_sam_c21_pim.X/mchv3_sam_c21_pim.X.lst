
dist\mchv3_sam_c21_pim\production\mchv3_sam_c21_pim.X.production.elf:     file format elf32-littlearm


Disassembly of section .vectors:

00000000 <exception_table>:
   0:	f8 6f 00 20 51 2f 00 00 85 36 00 00 87 36 00 00     .o. Q/...6...6..
	...
  2c:	77 33 00 00 00 00 00 00 00 00 00 00 77 33 00 00     w3..........w3..
  3c:	77 33 00 00 77 33 00 00 77 33 00 00 77 33 00 00     w3..w3..w3..w3..
  4c:	81 31 00 00 77 33 00 00 77 33 00 00 77 33 00 00     .1..w3..w3..w3..
  5c:	77 33 00 00 77 33 00 00 77 33 00 00 77 33 00 00     w3..w3..w3..w3..
  6c:	77 33 00 00 77 33 00 00 77 33 00 00 77 33 00 00     w3..w3..w3..w3..
  7c:	77 33 00 00 77 33 00 00 77 33 00 00 77 33 00 00     w3..w3..w3..w3..
  8c:	77 33 00 00 77 33 00 00 77 33 00 00 77 33 00 00     w3..w3..w3..w3..
  9c:	77 33 00 00 77 33 00 00 77 33 00 00 41 34 00 00     w3..w3..w3..A4..
  ac:	77 33 00 00 77 33 00 00 77 33 00 00 77 33 00 00     w3..w3..w3..w3..

Disassembly of section .text:

000000bc <_init>:
  bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  be:	46c0      	nop			; (mov r8, r8)
  c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  c2:	bc08      	pop	{r3}
  c4:	469e      	mov	lr, r3
  c6:	4770      	bx	lr

000000c8 <__init_array_start>:
  c8:	000035d5 	.word	0x000035d5

000000cc <__frame_dummy_init_array_entry>:
  cc:	00002eb9                                ....

000000d0 <_fini>:
  d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  d2:	46c0      	nop			; (mov r8, r8)
  d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  d6:	bc08      	pop	{r3}
  d8:	469e      	mov	lr, r3
  da:	4770      	bx	lr

000000dc <__fini_array_start>:
  dc:	00002e91 	.word	0x00002e91

Disassembly of section .RAMFUNC$:

20007000 <motorcontrol>:
#ifdef RAM_EXECUTE
void  __ramfunc__ motorcontrol(void)
#else
void motorcontrol(void)
#endif
{
20007000:	b570      	push	{r4, r5, r6, lr}

20007002 <.LCFI2>:
  uint32_t	s32a;      
  
  if(speed_ref_pot <= 1898) // 1898 or 1848 
20007002:	4b95      	ldr	r3, [pc, #596]	; (20007258 <.LBE46+0x12>)
20007004:	881b      	ldrh	r3, [r3, #0]
20007006:	4a95      	ldr	r2, [pc, #596]	; (2000725c <.LBE46+0x16>)
20007008:	4293      	cmp	r3, r2
2000700a:	d834      	bhi.n	20007076 <.LCFI2+0x74>
  {
	  demand_dir = 0x00;
2000700c:	2100      	movs	r1, #0
2000700e:	4a94      	ldr	r2, [pc, #592]	; (20007260 <.LBE46+0x1a>)
20007010:	7011      	strb	r1, [r2, #0]
  else if(speed_ref_pot > 2198)  // 2198 or 2248
  {
	  demand_dir = 0x08;
  }
    
  if(speed_ref_pot <= 2048)
20007012:	2280      	movs	r2, #128	; 0x80
20007014:	0112      	lsls	r2, r2, #4
20007016:	4293      	cmp	r3, r2
20007018:	d834      	bhi.n	20007084 <.LCFI2+0x82>
  {
	  set_speed = ((2048 - speed_ref_pot)*MAX_MOTOR_SPEED)>>11;
2000701a:	1ad2      	subs	r2, r2, r3
2000701c:	23e1      	movs	r3, #225	; 0xe1
2000701e:	00db      	lsls	r3, r3, #3
20007020:	4353      	muls	r3, r2
20007022:	12db      	asrs	r3, r3, #11
20007024:	4a8f      	ldr	r2, [pc, #572]	; (20007264 <.LBE46+0x1e>)
20007026:	8013      	strh	r3, [r2, #0]
  else if(speed_ref_pot > 2048)
  {
      set_speed = ((speed_ref_pot - 2048)*MAX_MOTOR_SPEED)>>11;
  }
    
  if(set_speed > MAX_MOTOR_SPEED)
20007028:	23e1      	movs	r3, #225	; 0xe1
2000702a:	00db      	lsls	r3, r3, #3
2000702c:	4a8d      	ldr	r2, [pc, #564]	; (20007264 <.LBE46+0x1e>)
2000702e:	8812      	ldrh	r2, [r2, #0]
20007030:	429a      	cmp	r2, r3
20007032:	d902      	bls.n	2000703a <.LCFI2+0x38>
  {
	  set_speed = MAX_MOTOR_SPEED;
20007034:	001a      	movs	r2, r3
20007036:	4b8b      	ldr	r3, [pc, #556]	; (20007264 <.LBE46+0x1e>)
20007038:	801a      	strh	r2, [r3, #0]
  }
  
  if((demand_dir != direction) && (state_halt == 0U))
2000703a:	4b89      	ldr	r3, [pc, #548]	; (20007260 <.LBE46+0x1a>)
2000703c:	781c      	ldrb	r4, [r3, #0]
2000703e:	4b8a      	ldr	r3, [pc, #552]	; (20007268 <.LBE46+0x22>)
20007040:	781b      	ldrb	r3, [r3, #0]
20007042:	42a3      	cmp	r3, r4
20007044:	d028      	beq.n	20007098 <.LCFI2+0x96>
20007046:	4b89      	ldr	r3, [pc, #548]	; (2000726c <.LBE46+0x26>)
20007048:	781b      	ldrb	r3, [r3, #0]
2000704a:	2b00      	cmp	r3, #0
2000704c:	d124      	bne.n	20007098 <.LCFI2+0x96>
  {
  	 direction_changed = 1;
2000704e:	2201      	movs	r2, #1
20007050:	4b87      	ldr	r3, [pc, #540]	; (20007270 <.LBE46+0x2a>)
20007052:	701a      	strb	r2, [r3, #0]
  		   	   
	 if(ram_abs == 0U)
20007054:	4b87      	ldr	r3, [pc, #540]	; (20007274 <.LBE46+0x2e>)
20007056:	2200      	movs	r2, #0
20007058:	5e9b      	ldrsh	r3, [r3, r2]
2000705a:	2b00      	cmp	r3, #0
2000705c:	d000      	beq.n	20007060 <.LCFI2+0x5e>
2000705e:	e0f2      	b.n	20007246 <.LBE46>
	 {
		  direction_changed = 0;
20007060:	4a83      	ldr	r2, [pc, #524]	; (20007270 <.LBE46+0x2a>)
20007062:	7013      	strb	r3, [r2, #0]
		  direction = demand_dir;
20007064:	4a80      	ldr	r2, [pc, #512]	; (20007268 <.LBE46+0x22>)
20007066:	7014      	strb	r4, [r2, #0]
		  sysph.ang = 0;
20007068:	4a83      	ldr	r2, [pc, #524]	; (20007278 <.LBE46+0x32>)
2000706a:	8013      	strh	r3, [r2, #0]
	 }  
  }  
      
  /* performs motor control if needed */
  if (0U != state_run)
2000706c:	4b83      	ldr	r3, [pc, #524]	; (2000727c <.LBE46+0x36>)
2000706e:	781b      	ldrb	r3, [r3, #0]
20007070:	2b00      	cmp	r3, #0
20007072:	d11a      	bne.n	200070aa <.LCFI2+0xa8>
20007074:	e06e      	b.n	20007154 <.LBE28+0x36>
  else if(speed_ref_pot > 2198)  // 2198 or 2248
20007076:	4a82      	ldr	r2, [pc, #520]	; (20007280 <.LBE46+0x3a>)
20007078:	4293      	cmp	r3, r2
2000707a:	d9ca      	bls.n	20007012 <.LCFI2+0x10>
	  demand_dir = 0x08;
2000707c:	2108      	movs	r1, #8
2000707e:	4a78      	ldr	r2, [pc, #480]	; (20007260 <.LBE46+0x1a>)
20007080:	7011      	strb	r1, [r2, #0]
20007082:	e7c6      	b.n	20007012 <.LCFI2+0x10>
      set_speed = ((speed_ref_pot - 2048)*MAX_MOTOR_SPEED)>>11;
20007084:	4a7f      	ldr	r2, [pc, #508]	; (20007284 <.LBE46+0x3e>)
20007086:	4694      	mov	ip, r2
20007088:	4463      	add	r3, ip
2000708a:	22e1      	movs	r2, #225	; 0xe1
2000708c:	00d2      	lsls	r2, r2, #3
2000708e:	4353      	muls	r3, r2
20007090:	12db      	asrs	r3, r3, #11
20007092:	4a74      	ldr	r2, [pc, #464]	; (20007264 <.LBE46+0x1e>)
20007094:	8013      	strh	r3, [r2, #0]
20007096:	e7c7      	b.n	20007028 <.LCFI2+0x26>
  if (0U != state_run)
20007098:	4b78      	ldr	r3, [pc, #480]	; (2000727c <.LBE46+0x36>)
2000709a:	781b      	ldrb	r3, [r3, #0]
2000709c:	2b00      	cmp	r3, #0
2000709e:	d054      	beq.n	2000714a <.LBE28+0x2c>
  {
	  	if(direction_changed == 0U)
200070a0:	4b73      	ldr	r3, [pc, #460]	; (20007270 <.LBE46+0x2a>)
200070a2:	781b      	ldrb	r3, [r3, #0]
200070a4:	2b00      	cmp	r3, #0
200070a6:	d000      	beq.n	200070aa <.LCFI2+0xa8>
200070a8:	e0d2      	b.n	20007250 <.LBE46+0xa>
		{
			  ext_speed_ref_rpm = set_speed;
200070aa:	4b6e      	ldr	r3, [pc, #440]	; (20007264 <.LBE46+0x1e>)
200070ac:	2000      	movs	r0, #0
200070ae:	5e18      	ldrsh	r0, [r3, r0]
200070b0:	4b75      	ldr	r3, [pc, #468]	; (20007288 <.LBE46+0x42>)
200070b2:	8018      	strh	r0, [r3, #0]

200070b4 <.LVL15>:
			  s32a = ext_speed_ref_rpm * BASE_VALUE_INT;
200070b4:	0380      	lsls	r0, r0, #14

200070b6 <.LVL16>:
			  ref_abs =  (uint32_t) s32a / (uint32_t) MAX_MOTOR_SPEED;			  			  
200070b6:	21e1      	movs	r1, #225	; 0xe1
200070b8:	00c9      	lsls	r1, r1, #3
200070ba:	4b74      	ldr	r3, [pc, #464]	; (2000728c <.LBE46+0x46>)

200070bc <.LVL17>:
200070bc:	4798      	blx	r3

200070be <.LVL18>:
200070be:	4b74      	ldr	r3, [pc, #464]	; (20007290 <.LBE46+0x4a>)
200070c0:	8018      	strh	r0, [r3, #0]
	 {
		 state_halt = 1;
	 }
  }
  
	if(ref_abs > ram_abs)
200070c2:	4b73      	ldr	r3, [pc, #460]	; (20007290 <.LBE46+0x4a>)
200070c4:	881b      	ldrh	r3, [r3, #0]
200070c6:	0019      	movs	r1, r3
200070c8:	4a6a      	ldr	r2, [pc, #424]	; (20007274 <.LBE46+0x2e>)
200070ca:	2000      	movs	r0, #0
200070cc:	5e10      	ldrsh	r0, [r2, r0]
200070ce:	4283      	cmp	r3, r0
200070d0:	dd06      	ble.n	200070e0 <.LVL18+0x22>
	{			  
		if(acceleration_count == 1)   // For every 2 times of PWM Period, the ram_abs incremented by 1.  The max speed is mapped to 2^14.
200070d2:	4a70      	ldr	r2, [pc, #448]	; (20007294 <.LBE46+0x4e>)
200070d4:	7812      	ldrb	r2, [r2, #0]
200070d6:	2a01      	cmp	r2, #1
200070d8:	d045      	beq.n	20007166 <.LBE28+0x48>
					ram_abs = ref_abs;
				}			
		}
		else
		{
			acceleration_count++;
200070da:	3201      	adds	r2, #1
200070dc:	486d      	ldr	r0, [pc, #436]	; (20007294 <.LBE46+0x4e>)
200070de:	7002      	strb	r2, [r0, #0]
		}
	}
	
	if(ref_abs < ram_abs)
200070e0:	4a64      	ldr	r2, [pc, #400]	; (20007274 <.LBE46+0x2e>)
200070e2:	2000      	movs	r0, #0
200070e4:	5e12      	ldrsh	r2, [r2, r0]
200070e6:	428a      	cmp	r2, r1
200070e8:	dd06      	ble.n	200070f8 <.LVL18+0x3a>
	{
		if(deceleration_count == 1)   // For every 2 times of PWM Period, the ram_abs decremented by 1.  The max speed is mapped to 2^14.
200070ea:	486b      	ldr	r0, [pc, #428]	; (20007298 <.LBE46+0x52>)
200070ec:	7800      	ldrb	r0, [r0, #0]
200070ee:	2801      	cmp	r0, #1
200070f0:	d048      	beq.n	20007184 <.LBE28+0x66>
					ram_abs = ref_abs;
				}
		}
		else
		{
			deceleration_count++;
200070f2:	3001      	adds	r0, #1
200070f4:	4b68      	ldr	r3, [pc, #416]	; (20007298 <.LBE46+0x52>)
200070f6:	7018      	strb	r0, [r3, #0]
		}
	}
	
	if(0U == state_halt)
200070f8:	4b5c      	ldr	r3, [pc, #368]	; (2000726c <.LBE46+0x26>)
200070fa:	781b      	ldrb	r3, [r3, #0]
200070fc:	2b00      	cmp	r3, #0
200070fe:	d050      	beq.n	200071a2 <.LBE28+0x84>

20007100 <.LBB28>:
    outv3.u = 0;
20007100:	4a66      	ldr	r2, [pc, #408]	; (2000729c <.LBE46+0x56>)
20007102:	2300      	movs	r3, #0
20007104:	8013      	strh	r3, [r2, #0]
    outv3.v = 0;
20007106:	8053      	strh	r3, [r2, #2]
    outv3.w = 0;
20007108:	8093      	strh	r3, [r2, #4]
    dutycycle[0] = (int32_t)PWM_HPER_TICKS;
2000710a:	4965      	ldr	r1, [pc, #404]	; (200072a0 <.LBE46+0x5a>)
2000710c:	2296      	movs	r2, #150	; 0x96
2000710e:	00d2      	lsls	r2, r2, #3
20007110:	600a      	str	r2, [r1, #0]
    dutycycle[1] = (int32_t)PWM_HPER_TICKS;
20007112:	604a      	str	r2, [r1, #4]
    dutycycle[2] = (int32_t)PWM_HPER_TICKS;
20007114:	608a      	str	r2, [r1, #8]

20007116 <.LBB30>:

void TCC0_PWM24bitCounterSet(uint32_t count);

__STATIC_INLINE void TCC0_PWM24bitDutySet(TCC0_CHANNEL_NUM channel, uint32_t duty)
{
    TCC0_REGS->TCC_CCBUF[channel] = duty & 0xFFFFFF;
20007116:	4963      	ldr	r1, [pc, #396]	; (200072a4 <.LBE46+0x5e>)
20007118:	670a      	str	r2, [r1, #112]	; 0x70

2000711a <.LBB32>:
2000711a:	674a      	str	r2, [r1, #116]	; 0x74

2000711c <.LBB34>:
2000711c:	678a      	str	r2, [r1, #120]	; 0x78

2000711e <.LBE28>:
  }
  else
  {
        pwm_modulation_reset();

        sysph.ang = 0;
2000711e:	4a56      	ldr	r2, [pc, #344]	; (20007278 <.LBE46+0x32>)
20007120:	8013      	strh	r3, [r2, #0]
        sysph.sin = 0;
20007122:	8053      	strh	r3, [r2, #2]
        sysph.cos = (int16_t)BASE_VALUE_INT;
20007124:	2180      	movs	r1, #128	; 0x80
20007126:	01c9      	lsls	r1, r1, #7
20007128:	8091      	strh	r1, [r2, #4]

        outvdq.x = 0;
2000712a:	4a5f      	ldr	r2, [pc, #380]	; (200072a8 <.LBE46+0x62>)
2000712c:	8013      	strh	r3, [r2, #0]
        outvdq.y = 0;
2000712e:	8053      	strh	r3, [r2, #2]
        outvab.x = 0;
20007130:	4a5e      	ldr	r2, [pc, #376]	; (200072ac <.LBE46+0x66>)
20007132:	8013      	strh	r3, [r2, #0]
        outvab.y = 0;    
20007134:	8053      	strh	r3, [r2, #2]
     
		angle_incr = 0;
20007136:	4a5e      	ldr	r2, [pc, #376]	; (200072b0 <.LBE46+0x6a>)
20007138:	8013      	strh	r3, [r2, #0]
		ram_abs = 0;   
2000713a:	4a4e      	ldr	r2, [pc, #312]	; (20007274 <.LBE46+0x2e>)
2000713c:	8013      	strh	r3, [r2, #0]
		direction = demand_dir;
2000713e:	4b4a      	ldr	r3, [pc, #296]	; (20007268 <.LBE46+0x22>)
20007140:	701c      	strb	r4, [r3, #0]
		direction_changed = 0;
20007142:	4b4b      	ldr	r3, [pc, #300]	; (20007270 <.LBE46+0x2a>)
20007144:	2200      	movs	r2, #0
20007146:	701a      	strb	r2, [r3, #0]
    }
   
}
20007148:	bd70      	pop	{r4, r5, r6, pc}
	 if(ram_abs == 0)
2000714a:	4b4a      	ldr	r3, [pc, #296]	; (20007274 <.LBE46+0x2e>)
2000714c:	2200      	movs	r2, #0
2000714e:	5e9b      	ldrsh	r3, [r3, r2]
20007150:	2b00      	cmp	r3, #0
20007152:	d1b6      	bne.n	200070c2 <.LVL18+0x4>
		 state_halt = 1;
20007154:	2201      	movs	r2, #1
20007156:	4b45      	ldr	r3, [pc, #276]	; (2000726c <.LBE46+0x26>)
20007158:	701a      	strb	r2, [r3, #0]
	if(ref_abs > ram_abs)
2000715a:	4b4d      	ldr	r3, [pc, #308]	; (20007290 <.LBE46+0x4a>)
2000715c:	881b      	ldrh	r3, [r3, #0]
2000715e:	1e19      	subs	r1, r3, #0
20007160:	ddce      	ble.n	20007100 <.LBB28>
20007162:	2000      	movs	r0, #0
20007164:	e7b5      	b.n	200070d2 <.LVL18+0x14>
			acceleration_count = 0;
20007166:	2500      	movs	r5, #0
20007168:	4a4a      	ldr	r2, [pc, #296]	; (20007294 <.LBE46+0x4e>)
2000716a:	7015      	strb	r5, [r2, #0]
				ram_abs += acc_ramp; //acc_ramp;
2000716c:	4a51      	ldr	r2, [pc, #324]	; (200072b4 <.LBE46+0x6e>)
2000716e:	8812      	ldrh	r2, [r2, #0]
20007170:	1810      	adds	r0, r2, r0
20007172:	b200      	sxth	r0, r0
				if(ref_abs < ram_abs)
20007174:	4288      	cmp	r0, r1
20007176:	dc02      	bgt.n	2000717e <.LBE28+0x60>
				ram_abs += acc_ramp; //acc_ramp;
20007178:	4b3e      	ldr	r3, [pc, #248]	; (20007274 <.LBE46+0x2e>)
2000717a:	8018      	strh	r0, [r3, #0]
2000717c:	e7bc      	b.n	200070f8 <.LVL18+0x3a>
					ram_abs = ref_abs;
2000717e:	4a3d      	ldr	r2, [pc, #244]	; (20007274 <.LBE46+0x2e>)
20007180:	8013      	strh	r3, [r2, #0]
20007182:	e7ad      	b.n	200070e0 <.LVL18+0x22>
			deceleration_count = 0;
20007184:	2500      	movs	r5, #0
20007186:	4844      	ldr	r0, [pc, #272]	; (20007298 <.LBE46+0x52>)
20007188:	7005      	strb	r5, [r0, #0]
				ram_abs -= dec_ramp; //dec_ramp;
2000718a:	484b      	ldr	r0, [pc, #300]	; (200072b8 <.LBE46+0x72>)
2000718c:	8800      	ldrh	r0, [r0, #0]
2000718e:	1a12      	subs	r2, r2, r0
20007190:	b212      	sxth	r2, r2
				if(ref_abs > ram_abs)
20007192:	428a      	cmp	r2, r1
20007194:	db02      	blt.n	2000719c <.LBE28+0x7e>
				ram_abs -= dec_ramp; //dec_ramp;
20007196:	4b37      	ldr	r3, [pc, #220]	; (20007274 <.LBE46+0x2e>)
20007198:	801a      	strh	r2, [r3, #0]
2000719a:	e7ad      	b.n	200070f8 <.LVL18+0x3a>
					ram_abs = ref_abs;
2000719c:	4a35      	ldr	r2, [pc, #212]	; (20007274 <.LBE46+0x2e>)
2000719e:	8013      	strh	r3, [r2, #0]
200071a0:	e7aa      	b.n	200070f8 <.LVL18+0x3a>
		angle_incr = (uint32_t) ((uint32_t) (POLE_PAIRS * 4 * ram_abs * MAX_MOTOR_SPEED)/(uint32_t)(60000 * PWM_FREQUENCY));
200071a2:	4c34      	ldr	r4, [pc, #208]	; (20007274 <.LBE46+0x2e>)
200071a4:	2200      	movs	r2, #0
200071a6:	5ea3      	ldrsh	r3, [r4, r2]
200071a8:	20e1      	movs	r0, #225	; 0xe1
200071aa:	0180      	lsls	r0, r0, #6
200071ac:	4358      	muls	r0, r3
200071ae:	4943      	ldr	r1, [pc, #268]	; (200072bc <.LBE46+0x76>)
200071b0:	4b36      	ldr	r3, [pc, #216]	; (2000728c <.LBE46+0x46>)
200071b2:	4798      	blx	r3

200071b4 <.LVL23>:
200071b4:	b283      	uxth	r3, r0
200071b6:	4a3e      	ldr	r2, [pc, #248]	; (200072b0 <.LBE46+0x6a>)
200071b8:	8013      	strh	r3, [r2, #0]
		sysph.ang = sysph.ang + angle_incr;
200071ba:	482f      	ldr	r0, [pc, #188]	; (20007278 <.LBE46+0x32>)
200071bc:	8802      	ldrh	r2, [r0, #0]
200071be:	189b      	adds	r3, r3, r2
200071c0:	8003      	strh	r3, [r0, #0]
		library_sincos(&sysph);
200071c2:	4b3f      	ldr	r3, [pc, #252]	; (200072c0 <.LBE46+0x7a>)
200071c4:	4798      	blx	r3

200071c6 <.LVL24>:
		s32a = (ram_abs * VF_CONSTANT)>>12;
200071c6:	2300      	movs	r3, #0
200071c8:	5ee2      	ldrsh	r2, [r4, r3]
200071ca:	2396      	movs	r3, #150	; 0x96
200071cc:	005b      	lsls	r3, r3, #1
200071ce:	4353      	muls	r3, r2
200071d0:	131b      	asrs	r3, r3, #12

200071d2 <.LVL25>:
		if(s32a < VF_OFFSET)
200071d2:	2b67      	cmp	r3, #103	; 0x67
200071d4:	d823      	bhi.n	2000721e <.LBE40>
			outvdq.x = 0;
200071d6:	4b34      	ldr	r3, [pc, #208]	; (200072a8 <.LBE46+0x62>)

200071d8 <.LVL26>:
200071d8:	2200      	movs	r2, #0

200071da <.LVL27>:
200071da:	801a      	strh	r2, [r3, #0]
			outvdq.y = (int32_t) VF_OFFSET;
200071dc:	3268      	adds	r2, #104	; 0x68
200071de:	805a      	strh	r2, [r3, #2]
        library_dq_ab(&sysph, &outvdq, &outvab);
200071e0:	4c32      	ldr	r4, [pc, #200]	; (200072ac <.LBE46+0x66>)

200071e2 <.LVL28>:
200071e2:	0022      	movs	r2, r4
200071e4:	4930      	ldr	r1, [pc, #192]	; (200072a8 <.LBE46+0x62>)
200071e6:	4824      	ldr	r0, [pc, #144]	; (20007278 <.LBE46+0x32>)
200071e8:	4b36      	ldr	r3, [pc, #216]	; (200072c4 <.LBE46+0x7e>)
200071ea:	4798      	blx	r3

200071ec <.LVL29>:
		library_ab_uvw(&outvab, &outv3);
200071ec:	492b      	ldr	r1, [pc, #172]	; (2000729c <.LBE46+0x56>)
200071ee:	0020      	movs	r0, r4
200071f0:	4b35      	ldr	r3, [pc, #212]	; (200072c8 <.LBE46+0x82>)
200071f2:	4798      	blx	r3

200071f4 <.LVL30>:
        pwm_modulation();
200071f4:	4b35      	ldr	r3, [pc, #212]	; (200072cc <.LBE46+0x86>)
200071f6:	4798      	blx	r3

200071f8 <.LVL31>:
	   if(direction == 0x08U)
200071f8:	4b1b      	ldr	r3, [pc, #108]	; (20007268 <.LBE46+0x22>)
200071fa:	781b      	ldrb	r3, [r3, #0]
200071fc:	2b08      	cmp	r3, #8
200071fe:	d013      	beq.n	20007228 <.LVL36>

20007200 <.LVL32>:
        TCC0_PWM24bitDutySet(TCC0_CHANNEL0,(uint32_t)dutycycle[0]);
20007200:	4927      	ldr	r1, [pc, #156]	; (200072a0 <.LBE46+0x5a>)

20007202 <.LBB36>:
20007202:	680b      	ldr	r3, [r1, #0]
20007204:	021b      	lsls	r3, r3, #8
20007206:	0a1b      	lsrs	r3, r3, #8
20007208:	4a26      	ldr	r2, [pc, #152]	; (200072a4 <.LBE46+0x5e>)
2000720a:	6713      	str	r3, [r2, #112]	; 0x70

2000720c <.LBB38>:
2000720c:	688b      	ldr	r3, [r1, #8]
2000720e:	021b      	lsls	r3, r3, #8
20007210:	0a1b      	lsrs	r3, r3, #8
20007212:	6753      	str	r3, [r2, #116]	; 0x74

20007214 <.LBB40>:
20007214:	684b      	ldr	r3, [r1, #4]
20007216:	021b      	lsls	r3, r3, #8
20007218:	0a1b      	lsrs	r3, r3, #8
2000721a:	6793      	str	r3, [r2, #120]	; 0x78
2000721c:	e794      	b.n	20007148 <.LBE28+0x2a>

2000721e <.LBE40>:
			outvdq.x = 0;
2000721e:	4a22      	ldr	r2, [pc, #136]	; (200072a8 <.LBE46+0x62>)
20007220:	2100      	movs	r1, #0
20007222:	8011      	strh	r1, [r2, #0]
			outvdq.y = (int32_t) s32a;
20007224:	8053      	strh	r3, [r2, #2]
20007226:	e7db      	b.n	200071e0 <.LVL27+0x6>

20007228 <.LVL36>:
        TCC0_PWM24bitDutySet(TCC0_CHANNEL0,(uint32_t)dutycycle[0]);
20007228:	491d      	ldr	r1, [pc, #116]	; (200072a0 <.LBE46+0x5a>)

2000722a <.LBB42>:
2000722a:	680b      	ldr	r3, [r1, #0]
2000722c:	021b      	lsls	r3, r3, #8
2000722e:	0a1b      	lsrs	r3, r3, #8
20007230:	4a1c      	ldr	r2, [pc, #112]	; (200072a4 <.LBE46+0x5e>)
20007232:	6713      	str	r3, [r2, #112]	; 0x70

20007234 <.LBB44>:
20007234:	684b      	ldr	r3, [r1, #4]
20007236:	021b      	lsls	r3, r3, #8
20007238:	0a1b      	lsrs	r3, r3, #8
2000723a:	6753      	str	r3, [r2, #116]	; 0x74

2000723c <.LBB46>:
2000723c:	688b      	ldr	r3, [r1, #8]
2000723e:	021b      	lsls	r3, r3, #8
20007240:	0a1b      	lsrs	r3, r3, #8
20007242:	6793      	str	r3, [r2, #120]	; 0x78
20007244:	e780      	b.n	20007148 <.LBE28+0x2a>

20007246 <.LBE46>:
  if (0U != state_run)
20007246:	4b0d      	ldr	r3, [pc, #52]	; (2000727c <.LBE46+0x36>)
20007248:	781b      	ldrb	r3, [r3, #0]
2000724a:	2b00      	cmp	r3, #0
2000724c:	d100      	bne.n	20007250 <.LBE46+0xa>
2000724e:	e738      	b.n	200070c2 <.LVL18+0x4>
			  ref_abs = 0;
20007250:	2200      	movs	r2, #0
20007252:	4b0f      	ldr	r3, [pc, #60]	; (20007290 <.LBE46+0x4a>)
20007254:	801a      	strh	r2, [r3, #0]
20007256:	e734      	b.n	200070c2 <.LVL18+0x4>
20007258:	200000da 	.word	0x200000da
2000725c:	0000076a 	.word	0x0000076a
20007260:	200000c8 	.word	0x200000c8
20007264:	20007ffc 	.word	0x20007ffc
20007268:	20007eb2 	.word	0x20007eb2
2000726c:	200000d6 	.word	0x200000d6
20007270:	200000d0 	.word	0x200000d0
20007274:	200000d8 	.word	0x200000d8
20007278:	20007df0 	.word	0x20007df0
2000727c:	200000d1 	.word	0x200000d1
20007280:	00000896 	.word	0x00000896
20007284:	fffff800 	.word	0xfffff800
20007288:	200000d2 	.word	0x200000d2
2000728c:	00003341 	.word	0x00003341
20007290:	200000ce 	.word	0x200000ce
20007294:	20007fff 	.word	0x20007fff
20007298:	20007ffe 	.word	0x20007ffe
2000729c:	20007dfc 	.word	0x20007dfc
200072a0:	20007e14 	.word	0x20007e14
200072a4:	42002400 	.word	0x42002400
200072a8:	20007de0 	.word	0x20007de0
200072ac:	20007de8 	.word	0x20007de8
200072b0:	200000ca 	.word	0x200000ca
200072b4:	200000cc 	.word	0x200000cc
200072b8:	200000d4 	.word	0x200000d4
200072bc:	00124f80 	.word	0x00124f80
200072c0:	20007401 	.word	0x20007401
200072c4:	20007341 	.word	0x20007341
200072c8:	200073d9 	.word	0x200073d9
200072cc:	200072d1 	.word	0x200072d1

200072d0 <pwm_modulation>:
{
200072d0:	b530      	push	{r4, r5, lr}

200072d2 <.LCFI1>:
	if(outv3.u <= outv3.v)
200072d2:	4b19      	ldr	r3, [pc, #100]	; (20007338 <.LVL14+0x2>)
200072d4:	2200      	movs	r2, #0
200072d6:	5e99      	ldrsh	r1, [r3, r2]
200072d8:	2202      	movs	r2, #2
200072da:	5e9a      	ldrsh	r2, [r3, r2]
200072dc:	4291      	cmp	r1, r2
200072de:	dc22      	bgt.n	20007326 <.LVL11>

200072e0 <.LVL0>:
	if(outv3.w <= min_val)
200072e0:	4b15      	ldr	r3, [pc, #84]	; (20007338 <.LVL14+0x2>)
200072e2:	2004      	movs	r0, #4
200072e4:	5e1b      	ldrsh	r3, [r3, r0]
200072e6:	0008      	movs	r0, r1
200072e8:	4299      	cmp	r1, r3
200072ea:	dd00      	ble.n	200072ee <.LVL1>
200072ec:	0018      	movs	r0, r3

200072ee <.LVL1>:
		max_val = outv3.v;
200072ee:	0014      	movs	r4, r2
	if(outv3.u >= outv3.v)
200072f0:	4291      	cmp	r1, r2
200072f2:	da1f      	bge.n	20007334 <.LVL12+0x2>

200072f4 <.LVL2>:
	voltage_offset = (min_val + max_val)>>1;
200072f4:	429c      	cmp	r4, r3
200072f6:	da00      	bge.n	200072fa <.LVL3>
200072f8:	001c      	movs	r4, r3

200072fa <.LVL3>:
200072fa:	1824      	adds	r4, r4, r0
200072fc:	1064      	asrs	r4, r4, #1

200072fe <.LVL4>:
	dutycycle[0] = (uint16_t)((voltage_va3h>>1) + (PWM_HPER_TICKS>>1));	  
200072fe:	480f      	ldr	r0, [pc, #60]	; (2000733c <.LVL14+0x6>)

20007300 <.LVL5>:
	voltage_va3h = (outv3.u - voltage_offset);  
20007300:	1b09      	subs	r1, r1, r4

20007302 <.LVL6>:
	dutycycle[0] = (uint16_t)((voltage_va3h>>1) + (PWM_HPER_TICKS>>1));	  
20007302:	1049      	asrs	r1, r1, #1
20007304:	2596      	movs	r5, #150	; 0x96
20007306:	00ad      	lsls	r5, r5, #2
20007308:	46ac      	mov	ip, r5
2000730a:	4461      	add	r1, ip
2000730c:	b289      	uxth	r1, r1
2000730e:	6001      	str	r1, [r0, #0]
	voltage_vb3h = (outv3.v - voltage_offset);
20007310:	1b12      	subs	r2, r2, r4

20007312 <.LVL7>:
	dutycycle[1] = (uint16_t)((voltage_vb3h>>1) + (PWM_HPER_TICKS>>1));
20007312:	1052      	asrs	r2, r2, #1
20007314:	4462      	add	r2, ip
20007316:	b292      	uxth	r2, r2
20007318:	6042      	str	r2, [r0, #4]
	voltage_vc3h = (outv3.w - voltage_offset);
2000731a:	1b1b      	subs	r3, r3, r4

2000731c <.LVL8>:
	dutycycle[2] = (uint16_t)((voltage_vc3h>>1) + (PWM_HPER_TICKS>>1));	
2000731c:	105b      	asrs	r3, r3, #1

2000731e <.LVL9>:
2000731e:	4463      	add	r3, ip
20007320:	b29b      	uxth	r3, r3
20007322:	6083      	str	r3, [r0, #8]

20007324 <.LVL10>:
}  /* end of function pwm_modulation()*/
20007324:	bd30      	pop	{r4, r5, pc}

20007326 <.LVL11>:
	if(outv3.w <= min_val)
20007326:	4b04      	ldr	r3, [pc, #16]	; (20007338 <.LVL14+0x2>)
20007328:	2004      	movs	r0, #4
2000732a:	5e1b      	ldrsh	r3, [r3, r0]
2000732c:	0010      	movs	r0, r2
2000732e:	429a      	cmp	r2, r3
20007330:	dd00      	ble.n	20007334 <.LVL12+0x2>

20007332 <.LVL12>:
20007332:	0018      	movs	r0, r3
		max_val = outv3.u;
20007334:	000c      	movs	r4, r1

20007336 <.LVL14>:
20007336:	e7dd      	b.n	200072f4 <.LVL2>
20007338:	20007dfc 	.word	0x20007dfc
2000733c:	20007e14 	.word	0x20007e14

20007340 <library_dq_ab>:
#ifdef RAM_EXECUTE
void  __ramfunc__ library_dq_ab(const ang_sincos_t *t, const vec2_t *dq, vec2_t *ab)
#else
void library_dq_ab(const ang_sincos_t *t, const vec2_t *dq, vec2_t *ab)
#endif
{
20007340:	b570      	push	{r4, r5, r6, lr}

20007342 <.LCFI7>:
	int32_t s32a;
	/* alpha, direct component in the static reference frame */
	s32a = ((int32_t)(dq->x)) * ((int32_t)(t->cos));
20007342:	2300      	movs	r3, #0
20007344:	5ecc      	ldrsh	r4, [r1, r3]
20007346:	2504      	movs	r5, #4
20007348:	5f43      	ldrsh	r3, [r0, r5]
2000734a:	435c      	muls	r4, r3

2000734c <.LVL122>:
	s32a -= (((int32_t)(dq->y)) * ((int32_t)(t->sin)));
2000734c:	2302      	movs	r3, #2
2000734e:	5ecd      	ldrsh	r5, [r1, r3]
20007350:	2602      	movs	r6, #2
20007352:	5f83      	ldrsh	r3, [r0, r6]
20007354:	436b      	muls	r3, r5
20007356:	1ae3      	subs	r3, r4, r3
	(ab->x) = (int16_t)(s32a >> SH_BASE_VALUE);
20007358:	139b      	asrs	r3, r3, #14
2000735a:	8013      	strh	r3, [r2, #0]

2000735c <.LVL123>:

	/* beta, quadrature component in the static reference frame */
	s32a = ((int32_t)(dq->x)) * ((int32_t)(t->sin));
2000735c:	2300      	movs	r3, #0
2000735e:	5ecc      	ldrsh	r4, [r1, r3]
20007360:	2502      	movs	r5, #2
20007362:	5f43      	ldrsh	r3, [r0, r5]
20007364:	435c      	muls	r4, r3

20007366 <.LVL124>:
	s32a += (((int32_t)(dq->y)) * ((int32_t)(t->cos)));
20007366:	2302      	movs	r3, #2
20007368:	5ec9      	ldrsh	r1, [r1, r3]

2000736a <.LVL125>:
2000736a:	2304      	movs	r3, #4
2000736c:	5ec3      	ldrsh	r3, [r0, r3]

2000736e <.LVL126>:
2000736e:	434b      	muls	r3, r1
20007370:	191b      	adds	r3, r3, r4
	(ab->y) = (int16_t)(s32a >> SH_BASE_VALUE);
20007372:	139b      	asrs	r3, r3, #14
20007374:	8053      	strh	r3, [r2, #2]

20007376 <.LVL127>:
}
20007376:	bd70      	pop	{r4, r5, r6, pc}

20007378 <library_cos>:
	ang_temp = ang + PIHALVES;
20007378:	2380      	movs	r3, #128	; 0x80
2000737a:	01db      	lsls	r3, r3, #7
2000737c:	469c      	mov	ip, r3
2000737e:	4460      	add	r0, ip

20007380 <.LVL11>:
20007380:	b283      	uxth	r3, r0
        a = ang_temp  & SEL1Q;  /* select angle in the first quarter (<= PIHALVES) */
20007382:	049a      	lsls	r2, r3, #18
20007384:	0c92      	lsrs	r2, r2, #18

20007386 <.LVL13>:
	if((ISCOS & ang_temp) != 0U)
20007386:	0459      	lsls	r1, r3, #17
20007388:	d502      	bpl.n	20007390 <.LVL15>
		a = PIHALVES - a;
2000738a:	4661      	mov	r1, ip
2000738c:	1a8a      	subs	r2, r1, r2

2000738e <.LVL14>:
2000738e:	b292      	uxth	r2, r2

20007390 <.LVL15>:
	y = sin_table[a >> SH_SINTAB];
20007390:	0992      	lsrs	r2, r2, #6

20007392 <.LVL16>:
20007392:	0052      	lsls	r2, r2, #1
20007394:	4904      	ldr	r1, [pc, #16]	; (200073a8 <.LVL21+0x4>)
20007396:	5e50      	ldrsh	r0, [r2, r1]

20007398 <.LVL17>:
	return (((ISNEG & ang_temp) != 0U )? -y: y);
20007398:	b21b      	sxth	r3, r3
2000739a:	2b00      	cmp	r3, #0
2000739c:	db00      	blt.n	200073a0 <.LVL19>

2000739e <.LVL18>:
}
2000739e:	4770      	bx	lr

200073a0 <.LVL19>:
	return (((ISNEG & ang_temp) != 0U )? -y: y);
200073a0:	4240      	negs	r0, r0

200073a2 <.LVL20>:
200073a2:	b200      	sxth	r0, r0

200073a4 <.LVL21>:
200073a4:	e7fb      	b.n	2000739e <.LVL18>
200073a6:	46c0      	nop			; (mov r8, r8)
200073a8:	000021f8 	.word	0x000021f8

200073ac <library_sin>:
{
200073ac:	0002      	movs	r2, r0
	a = ang & SEL1Q; /* select angle in the first quarter (<= PIHALVES) */
200073ae:	0483      	lsls	r3, r0, #18
200073b0:	0c9b      	lsrs	r3, r3, #18

200073b2 <.LVL1>:
	if((ISCOS & ang) != 0U)
200073b2:	0441      	lsls	r1, r0, #17
200073b4:	d503      	bpl.n	200073be <.LVL3>
	  a = PIHALVES - a;
200073b6:	2180      	movs	r1, #128	; 0x80
200073b8:	01c9      	lsls	r1, r1, #7
200073ba:	1acb      	subs	r3, r1, r3

200073bc <.LVL2>:
200073bc:	b29b      	uxth	r3, r3

200073be <.LVL3>:
	y = sin_table[a >> SH_SINTAB];
200073be:	099b      	lsrs	r3, r3, #6

200073c0 <.LVL4>:
200073c0:	005b      	lsls	r3, r3, #1
200073c2:	4904      	ldr	r1, [pc, #16]	; (200073d4 <.LVL9+0x2>)
200073c4:	5e58      	ldrsh	r0, [r3, r1]

200073c6 <.LVL5>:
	return (((ISNEG & ang) != 0U)? -y: y);
200073c6:	b212      	sxth	r2, r2
200073c8:	2a00      	cmp	r2, #0
200073ca:	db00      	blt.n	200073ce <.LVL7>

200073cc <.LVL6>:
}
200073cc:	4770      	bx	lr

200073ce <.LVL7>:
	return (((ISNEG & ang) != 0U)? -y: y);
200073ce:	4240      	negs	r0, r0

200073d0 <.LVL8>:
200073d0:	b200      	sxth	r0, r0

200073d2 <.LVL9>:
200073d2:	e7fb      	b.n	200073cc <.LVL6>
200073d4:	000021f8 	.word	0x000021f8

200073d8 <library_ab_uvw>:
{
200073d8:	b510      	push	{r4, lr}

200073da <.LCFI5>:
	(uvw->u) = (ab->x);
200073da:	2300      	movs	r3, #0
200073dc:	5ec2      	ldrsh	r2, [r0, r3]
200073de:	800a      	strh	r2, [r1, #0]
	s32a = ((int32_t)(ab->y)) * SQRT3;
200073e0:	2302      	movs	r3, #2
200073e2:	5ec4      	ldrsh	r4, [r0, r3]
200073e4:	4b05      	ldr	r3, [pc, #20]	; (200073fc <.LVL113+0x8>)
200073e6:	4363      	muls	r3, r4

200073e8 <.LVL108>:
    s32a >>= SH_BASE_VALUE;
200073e8:	139b      	asrs	r3, r3, #14

200073ea <.LVL109>:
	s32a -= (ab->x);
200073ea:	2400      	movs	r4, #0
200073ec:	5f00      	ldrsh	r0, [r0, r4]

200073ee <.LVL110>:
200073ee:	1a1b      	subs	r3, r3, r0

200073f0 <.LVL111>:
    (uvw->v) = (int16_t)(s32a >> 1);
200073f0:	105b      	asrs	r3, r3, #1

200073f2 <.LVL112>:
200073f2:	804b      	strh	r3, [r1, #2]

200073f4 <.LVL113>:
	(uvw->w) = -(uvw->u) - (uvw->v);
200073f4:	18d3      	adds	r3, r2, r3
200073f6:	425b      	negs	r3, r3
200073f8:	808b      	strh	r3, [r1, #4]
}
200073fa:	bd10      	pop	{r4, pc}
200073fc:	00006eda 	.word	0x00006eda

20007400 <library_sincos>:
{
20007400:	b570      	push	{r4, r5, r6, lr}

20007402 <.LCFI0>:
20007402:	0004      	movs	r4, r0
	(t->sin) = library_sin(t->ang);
20007404:	8805      	ldrh	r5, [r0, #0]
20007406:	0028      	movs	r0, r5

20007408 <.LVL23>:
20007408:	4b03      	ldr	r3, [pc, #12]	; (20007418 <.LVL26+0x2>)
2000740a:	4798      	blx	r3

2000740c <.LVL24>:
2000740c:	8060      	strh	r0, [r4, #2]
	(t->cos) = library_cos(t->ang);
2000740e:	0028      	movs	r0, r5
20007410:	4b02      	ldr	r3, [pc, #8]	; (2000741c <.LVL26+0x6>)
20007412:	4798      	blx	r3

20007414 <.LVL25>:
20007414:	80a0      	strh	r0, [r4, #4]

20007416 <.LVL26>:
}
20007416:	bd70      	pop	{r4, r5, r6, pc}
20007418:	200073ad 	.word	0x200073ad
2000741c:	20007379 	.word	0x20007379

Disassembly of section .config_00804004%18:

00804004 <__config_00804004>:
  804004:	ffff0000                                ....

Disassembly of section .config_00804000%19:

00804000 <__config_00804000>:
  804000:	00000877                                w...

Disassembly of section .text%20:

000000e0 <isTriggerEvent>:
		s16t = (int16_t)((pi->imem) >> (pi->shp));

		/* result clamp and integral memory update */
		if(s16t < (pi->llim))		/* case possible only if limit is changed */
		{
			s16t = (pi->llim);
  e0:	b5f0      	push	{r4, r5, r6, r7, lr}
  e2:	b085      	.short	0xb085
  e4:	9202      	str	r2, [sp, #8]
  e6:	9303      	.short	0x9303
  e8:	234c      	movs	r3, #76	; 0x4c
  ea:	5cc2      	.short	0x5cc2
  ec:	3b3d      	subs	r3, #61	; 0x3d
  ee:	4013      	ands	r3, r2
  f0:	0651      	lsls	r1, r2, #25
  f2:	d400      	bmi.n	f6 <.LLST30+0x6>
  f4:	e067      	b.n	1c6 <.Ldebug_abbrev0+0x3>
  f6:	2b04      	cmp	r3, #4
  f8:	d004      	beq.n	104 <__MIN_STACK_SIZE+0x4>
  fa:	2b08      	cmp	r3, #8
  fc:	d02b      	beq.n	156 <.LLST22+0x8>
  fe:	2000      	movs	r0, #0
 100:	b005      	add	sp, #20
 102:	bdf0      	pop	{r4, r5, r6, r7, pc}
 104:	6c03      	ldr	r3, [r0, #64]	; 0x40
 106:	6b84      	ldr	r4, [r0, #56]	; 0x38
 108:	9d02      	ldr	r5, [sp, #8]
 10a:	2274      	movs	r2, #116	; 0x74
 10c:	5c82      	ldrb	r2, [r0, r2]
 10e:	2a01      	cmp	r2, #1
 110:	d010      	beq.n	134 <.LASF11+0x8>
 112:	1c21      	adds	r1, r4, #0
 114:	1c18      	adds	r0, r3, #0
 116:	f002 fdcf 	bl	2cb8 <__aeabi_fcmpgt>
 11a:	2800      	cmp	r0, #0
 11c:	d100      	bne.n	120 <.LASF18+0x1>
 11e:	e16e      	b.n	3fe <.LLST4+0x2>
 120:	2601      	movs	r6, #1
 122:	1c29      	adds	r1, r5, #0
 124:	1c20      	adds	r0, r4, #0
 126:	f002 fdd1 	bl	2ccc <__aeabi_fcmpge>
 12a:	2800      	cmp	r0, #0
 12c:	d100      	bne.n	130 <.LASF11+0x4>
 12e:	2600      	movs	r6, #0
 130:	b2f0      	uxtb	r0, r6
 132:	e7e5      	b.n	100 <__MIN_STACK_SIZE>
 134:	1c21      	adds	r1, r4, #0
 136:	1c18      	adds	r0, r3, #0
 138:	f002 fdaa 	bl	2c90 <__aeabi_fcmplt>
 13c:	2800      	cmp	r0, #0
 13e:	d100      	bne.n	142 <.LASF10+0x8>
 140:	e15b      	b.n	3fa <.LASF7+0xe>
 142:	2601      	movs	r6, #1
 144:	1c29      	adds	r1, r5, #0
 146:	1c20      	adds	r0, r4, #0
 148:	f002 fdac 	bl	2ca4 <__aeabi_fcmple>
 14c:	2800      	cmp	r0, #0
 14e:	d100      	bne.n	152 <.LLST22+0x4>
 150:	2600      	movs	r6, #0
 152:	b2f0      	uxtb	r0, r6
 154:	e7d4      	b.n	100 <__MIN_STACK_SIZE>
 156:	6c06      	ldr	r6, [r0, #64]	; 0x40
 158:	6c47      	ldr	r7, [r0, #68]	; 0x44
 15a:	6b84      	ldr	r4, [r0, #56]	; 0x38
 15c:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 15e:	9a02      	ldr	r2, [sp, #8]
 160:	9b03      	ldr	r3, [sp, #12]
 162:	9200      	str	r2, [sp, #0]
 164:	9301      	str	r3, [sp, #4]
 166:	2374      	movs	r3, #116	; 0x74
 168:	5cc3      	ldrb	r3, [r0, r3]
 16a:	2b01      	cmp	r3, #1
 16c:	d016      	beq.n	19c <.LASF0+0x6>
 16e:	0022      	movs	r2, r4
 170:	002b      	movs	r3, r5
 172:	0030      	movs	r0, r6
 174:	0039      	movs	r1, r7
 176:	f002 fd2b 	bl	2bd0 <__aeabi_dcmpgt>
 17a:	2800      	cmp	r0, #0
 17c:	d100      	bne.n	180 <.LASF2+0x3>
 17e:	e142      	b.n	406 <.LASF10+0x5>
 180:	2301      	movs	r3, #1
 182:	1c1e      	adds	r6, r3, #0
 184:	9a00      	ldr	r2, [sp, #0]
 186:	9b01      	ldr	r3, [sp, #4]
 188:	0020      	movs	r0, r4
 18a:	0029      	movs	r1, r5
 18c:	f002 fd2a 	bl	2be4 <__aeabi_dcmpge>
 190:	2800      	cmp	r0, #0
 192:	d101      	bne.n	198 <.LASF0+0x2>
 194:	2300      	movs	r3, #0
 196:	1c1e      	adds	r6, r3, #0
 198:	b2f0      	uxtb	r0, r6
 19a:	e7b1      	b.n	100 <__MIN_STACK_SIZE>
 19c:	0022      	movs	r2, r4
 19e:	002b      	movs	r3, r5
 1a0:	0030      	movs	r0, r6
 1a2:	0039      	movs	r1, r7
 1a4:	f002 fd00 	bl	2ba8 <__aeabi_dcmplt>
 1a8:	2800      	cmp	r0, #0
 1aa:	d100      	bne.n	1ae <.LLST25+0x1>
 1ac:	e129      	b.n	402 <.LASF10+0x1>
 1ae:	2601      	movs	r6, #1
 1b0:	9a00      	ldr	r2, [sp, #0]
 1b2:	9b01      	ldr	r3, [sp, #4]
 1b4:	0020      	movs	r0, r4
 1b6:	0029      	movs	r1, r5
 1b8:	f002 fd00 	bl	2bbc <__aeabi_dcmple>
 1bc:	2800      	cmp	r0, #0
 1be:	d100      	bne.n	1c2 <.LLST26+0x2>
 1c0:	2600      	movs	r6, #0
 1c2:	b2f0      	uxtb	r0, r6
 1c4:	e79c      	b.n	100 <__MIN_STACK_SIZE>
 1c6:	0692      	lsls	r2, r2, #26
 1c8:	d400      	bmi.n	1cc <.LASF6+0x2>
 1ca:	e096      	b.n	2fa <.LLST9+0x1>
 1cc:	2b02      	cmp	r3, #2
 1ce:	d040      	beq.n	252 <.LASF4+0xa>
 1d0:	d919      	bls.n	206 <.LASF7+0xc>
 1d2:	2b04      	cmp	r3, #4
 1d4:	d05e      	beq.n	294 <.LASF0+0x9>
 1d6:	2b08      	cmp	r3, #8
 1d8:	d000      	beq.n	1dc <.LASF1+0x3>
 1da:	e116      	b.n	40a <.LASF10+0x9>
 1dc:	6c06      	ldr	r6, [r0, #64]	; 0x40
 1de:	6c42      	ldr	r2, [r0, #68]	; 0x44
 1e0:	6b85      	ldr	r5, [r0, #56]	; 0x38
 1e2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 1e4:	9f02      	ldr	r7, [sp, #8]
 1e6:	9c03      	ldr	r4, [sp, #12]
 1e8:	2174      	movs	r1, #116	; 0x74
 1ea:	5c41      	ldrb	r1, [r0, r1]
 1ec:	2901      	cmp	r1, #1
 1ee:	d06c      	beq.n	2ca <.LASF2+0x2>
 1f0:	429a      	cmp	r2, r3
 1f2:	dd7b      	ble.n	2ec <.Ldebug_ranges0+0x4>
 1f4:	2001      	movs	r0, #1
 1f6:	429c      	cmp	r4, r3
 1f8:	dc02      	bgt.n	200 <.LASF7+0x6>
 1fa:	d102      	bne.n	202 <.LASF7+0x8>
 1fc:	42af      	cmp	r7, r5
 1fe:	d900      	bls.n	202 <.LASF7+0x8>
 200:	2000      	movs	r0, #0
 202:	b2c0      	uxtb	r0, r0
 204:	e77c      	b.n	100 <__MIN_STACK_SIZE>
 206:	2b01      	cmp	r3, #1
 208:	d000      	beq.n	20c <.LASF8+0x1>
 20a:	e0fe      	b.n	40a <.LASF10+0x9>
 20c:	2340      	movs	r3, #64	; 0x40
 20e:	18c3      	adds	r3, r0, r3
 210:	2100      	movs	r1, #0
 212:	5659      	ldrsb	r1, [r3, r1]
 214:	2338      	movs	r3, #56	; 0x38
 216:	18c3      	adds	r3, r0, r3
 218:	781b      	ldrb	r3, [r3, #0]
 21a:	b25b      	sxtb	r3, r3
 21c:	aa02      	add	r2, sp, #8
 21e:	7812      	ldrb	r2, [r2, #0]
 220:	b252      	sxtb	r2, r2
 222:	2474      	movs	r4, #116	; 0x74
 224:	5d00      	ldrb	r0, [r0, r4]
 226:	2801      	cmp	r0, #1
 228:	d009      	beq.n	23e <.LLST16+0xa>
 22a:	2000      	movs	r0, #0
 22c:	4299      	cmp	r1, r3
 22e:	dc00      	bgt.n	232 <.Ldebug_ranges0+0x2>
 230:	e766      	b.n	100 <__MIN_STACK_SIZE>
 232:	17d8      	asrs	r0, r3, #31
 234:	0fd1      	lsrs	r1, r2, #31
 236:	4293      	cmp	r3, r2
 238:	4148      	adcs	r0, r1
 23a:	b2c0      	uxtb	r0, r0
 23c:	e760      	b.n	100 <__MIN_STACK_SIZE>
 23e:	2000      	movs	r0, #0
 240:	4299      	cmp	r1, r3
 242:	db00      	blt.n	246 <.Ldebug_ranges0+0x6>
 244:	e75c      	b.n	100 <__MIN_STACK_SIZE>
 246:	0fd8      	lsrs	r0, r3, #31
 248:	17d1      	asrs	r1, r2, #31
 24a:	429a      	cmp	r2, r3
 24c:	4148      	adcs	r0, r1
 24e:	b2c0      	uxtb	r0, r0
 250:	e756      	b.n	100 <__MIN_STACK_SIZE>
 252:	2340      	movs	r3, #64	; 0x40
 254:	18c3      	adds	r3, r0, r3
 256:	2200      	movs	r2, #0
 258:	5e9a      	ldrsh	r2, [r3, r2]
 25a:	2338      	movs	r3, #56	; 0x38
 25c:	5ec1      	ldrsh	r1, [r0, r3]
 25e:	ab02      	add	r3, sp, #8
 260:	2400      	movs	r4, #0
 262:	5f1b      	ldrsh	r3, [r3, r4]
 264:	2474      	movs	r4, #116	; 0x74
 266:	5d00      	ldrb	r0, [r0, r4]
 268:	2801      	cmp	r0, #1
 26a:	d009      	beq.n	280 <.LLST18+0xe>
 26c:	2000      	movs	r0, #0
 26e:	428a      	cmp	r2, r1
 270:	dc00      	bgt.n	274 <.LLST18+0x2>
 272:	e745      	b.n	100 <__MIN_STACK_SIZE>
 274:	17c8      	asrs	r0, r1, #31
 276:	0fda      	lsrs	r2, r3, #31
 278:	4299      	cmp	r1, r3
 27a:	4150      	adcs	r0, r2
 27c:	b2c0      	uxtb	r0, r0
 27e:	e73f      	b.n	100 <__MIN_STACK_SIZE>
 280:	2000      	movs	r0, #0
 282:	428a      	cmp	r2, r1
 284:	db00      	blt.n	288 <.LASF1+0x2>
 286:	e73b      	b.n	100 <__MIN_STACK_SIZE>
 288:	0fc8      	lsrs	r0, r1, #31
 28a:	17da      	asrs	r2, r3, #31
 28c:	428b      	cmp	r3, r1
 28e:	4150      	adcs	r0, r2
 290:	b2c0      	uxtb	r0, r0
 292:	e735      	b.n	100 <__MIN_STACK_SIZE>
 294:	6c01      	ldr	r1, [r0, #64]	; 0x40
 296:	6b83      	ldr	r3, [r0, #56]	; 0x38
 298:	9a02      	ldr	r2, [sp, #8]
 29a:	2474      	movs	r4, #116	; 0x74
 29c:	5d00      	ldrb	r0, [r0, r4]
 29e:	2801      	cmp	r0, #1
 2a0:	d009      	beq.n	2b6 <.LASF1+0x2>
 2a2:	2000      	movs	r0, #0
 2a4:	4299      	cmp	r1, r3
 2a6:	dc00      	bgt.n	2aa <.LLST20+0x11>
 2a8:	e72a      	b.n	100 <__MIN_STACK_SIZE>
 2aa:	17d8      	asrs	r0, r3, #31
 2ac:	0fd1      	lsrs	r1, r2, #31
 2ae:	4293      	cmp	r3, r2
 2b0:	4148      	adcs	r0, r1
 2b2:	b2c0      	uxtb	r0, r0
 2b4:	e724      	b.n	100 <__MIN_STACK_SIZE>
 2b6:	2000      	movs	r0, #0
 2b8:	4299      	cmp	r1, r3
 2ba:	db00      	blt.n	2be <.LASF1+0xa>
 2bc:	e720      	b.n	100 <__MIN_STACK_SIZE>
 2be:	0fd8      	lsrs	r0, r3, #31
 2c0:	17d1      	asrs	r1, r2, #31
 2c2:	429a      	cmp	r2, r3
 2c4:	4148      	adcs	r0, r1
 2c6:	b2c0      	uxtb	r0, r0
 2c8:	e71a      	b.n	100 <__MIN_STACK_SIZE>
 2ca:	4293      	cmp	r3, r2
 2cc:	dd08      	ble.n	2e0 <L0>
 2ce:	2001      	movs	r0, #1
 2d0:	42a3      	cmp	r3, r4
 2d2:	dc02      	bgt.n	2da <.LLST8+0x2>
 2d4:	d102      	bne.n	2dc <.LASF3+0x1>
 2d6:	42bd      	cmp	r5, r7
 2d8:	d900      	bls.n	2dc <.LASF3+0x1>
 2da:	2000      	movs	r0, #0
 2dc:	b2c0      	uxtb	r0, r0
 2de:	e70f      	b.n	100 <__MIN_STACK_SIZE>
 2e0:	4293      	cmp	r3, r2
 2e2:	d101      	bne.n	2e8 <.Ldebug_ranges0>
 2e4:	42b5      	cmp	r5, r6
 2e6:	d8f2      	bhi.n	2ce <.LASF2+0x6>
 2e8:	2000      	movs	r0, #0
 2ea:	e709      	b.n	100 <__MIN_STACK_SIZE>
 2ec:	429a      	cmp	r2, r3
 2ee:	d102      	bne.n	2f6 <.LASF1+0x7>
 2f0:	42ae      	cmp	r6, r5
 2f2:	d900      	bls.n	2f6 <.LASF1+0x7>
 2f4:	e77e      	b.n	1f4 <L0>
 2f6:	2000      	movs	r0, #0
 2f8:	e702      	b.n	100 <__MIN_STACK_SIZE>
 2fa:	2b02      	cmp	r3, #2
 2fc:	d03b      	beq.n	376 <.LASF8+0x3>
 2fe:	d91c      	bls.n	33a <.LLST11+0x3>
 300:	2b04      	cmp	r3, #4
 302:	d052      	beq.n	3aa <.LASF3+0x5>
 304:	2b08      	cmp	r3, #8
 306:	d000      	beq.n	30a <.Ldebug_ranges0+0x2>
 308:	e081      	b.n	40e <.LASF10+0xd>
 30a:	6c06      	ldr	r6, [r0, #64]	; 0x40
 30c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 30e:	6b85      	ldr	r5, [r0, #56]	; 0x38
 310:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 312:	9f02      	ldr	r7, [sp, #8]
 314:	9c03      	ldr	r4, [sp, #12]
 316:	2174      	movs	r1, #116	; 0x74
 318:	5c41      	ldrb	r1, [r0, r1]
 31a:	2901      	cmp	r1, #1
 31c:	d05c      	beq.n	3d8 <.LASF6+0x2>
 31e:	429a      	cmp	r2, r3
 320:	d802      	bhi.n	328 <.LLST10+0x10>
 322:	d176      	bne.n	412 <.LLST5+0x3>
 324:	42ae      	cmp	r6, r5
 326:	d974      	bls.n	412 <.LLST5+0x3>
 328:	2001      	movs	r0, #1
 32a:	429c      	cmp	r4, r3
 32c:	d802      	bhi.n	334 <.Ldebug_ranges0+0x4>
 32e:	d102      	bne.n	336 <.Ldebug_ranges0+0x6>
 330:	42af      	cmp	r7, r5
 332:	d900      	bls.n	336 <.Ldebug_ranges0+0x6>
 334:	2000      	movs	r0, #0
 336:	b2c0      	uxtb	r0, r0
 338:	e6e2      	b.n	100 <__MIN_STACK_SIZE>
 33a:	2b01      	cmp	r3, #1
 33c:	d167      	bne.n	40e <.LASF10+0xd>
 33e:	2340      	movs	r3, #64	; 0x40
 340:	18c3      	adds	r3, r0, r3
 342:	781a      	ldrb	r2, [r3, #0]
 344:	2338      	movs	r3, #56	; 0x38
 346:	18c3      	adds	r3, r0, r3
 348:	781b      	ldrb	r3, [r3, #0]
 34a:	a902      	add	r1, sp, #8
 34c:	7809      	ldrb	r1, [r1, #0]
 34e:	2474      	movs	r4, #116	; 0x74
 350:	5d00      	ldrb	r0, [r0, r4]
 352:	2801      	cmp	r0, #1
 354:	d007      	beq.n	366 <.LASF5+0x2>
 356:	2000      	movs	r0, #0
 358:	429a      	cmp	r2, r3
 35a:	d800      	bhi.n	35e <.LLST13>
 35c:	e6d0      	b.n	100 <__MIN_STACK_SIZE>
 35e:	428b      	cmp	r3, r1
 360:	4140      	adcs	r0, r0
 362:	b2c0      	uxtb	r0, r0
 364:	e6cc      	b.n	100 <__MIN_STACK_SIZE>
 366:	2000      	movs	r0, #0
 368:	429a      	cmp	r2, r3
 36a:	d300      	bcc.n	36e <.LASF5+0xa>
 36c:	e6c8      	b.n	100 <__MIN_STACK_SIZE>
 36e:	4299      	cmp	r1, r3
 370:	4140      	adcs	r0, r0
 372:	b2c0      	uxtb	r0, r0
 374:	e6c4      	b.n	100 <__MIN_STACK_SIZE>
 376:	2340      	movs	r3, #64	; 0x40
 378:	18c3      	adds	r3, r0, r3
 37a:	881b      	ldrh	r3, [r3, #0]
 37c:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 37e:	aa02      	add	r2, sp, #8
 380:	8812      	ldrh	r2, [r2, #0]
 382:	2474      	movs	r4, #116	; 0x74
 384:	5d00      	ldrb	r0, [r0, r4]
 386:	2801      	cmp	r0, #1
 388:	d007      	beq.n	39a <.Ldebug_ranges0+0x2>
 38a:	2000      	movs	r0, #0
 38c:	428b      	cmp	r3, r1
 38e:	d800      	bhi.n	392 <.LASF11+0x8>
 390:	e6b6      	b.n	100 <__MIN_STACK_SIZE>
 392:	4291      	cmp	r1, r2
 394:	4140      	adcs	r0, r0
 396:	b2c0      	uxtb	r0, r0
 398:	e6b2      	b.n	100 <__MIN_STACK_SIZE>
 39a:	2000      	movs	r0, #0
 39c:	428b      	cmp	r3, r1
 39e:	d300      	bcc.n	3a2 <.LLST1+0x5>
 3a0:	e6ae      	b.n	100 <__MIN_STACK_SIZE>
 3a2:	428a      	cmp	r2, r1
 3a4:	4140      	adcs	r0, r0
 3a6:	b2c0      	uxtb	r0, r0
 3a8:	e6aa      	b.n	100 <__MIN_STACK_SIZE>
 3aa:	6c02      	ldr	r2, [r0, #64]	; 0x40
 3ac:	6b83      	ldr	r3, [r0, #56]	; 0x38
 3ae:	9c02      	ldr	r4, [sp, #8]
 3b0:	2174      	movs	r1, #116	; 0x74
 3b2:	5c41      	ldrb	r1, [r0, r1]
 3b4:	2901      	cmp	r1, #1
 3b6:	d007      	beq.n	3c8 <L0+0x4>
 3b8:	2000      	movs	r0, #0
 3ba:	429a      	cmp	r2, r3
 3bc:	d800      	bhi.n	3c0 <.LLST2+0x2>
 3be:	e69f      	b.n	100 <__MIN_STACK_SIZE>
 3c0:	42a3      	cmp	r3, r4
 3c2:	4140      	adcs	r0, r0
 3c4:	b2c0      	uxtb	r0, r0
 3c6:	e69b      	b.n	100 <__MIN_STACK_SIZE>
 3c8:	2000      	movs	r0, #0
 3ca:	429a      	cmp	r2, r3
 3cc:	d300      	bcc.n	3d0 <L0+0xc>
 3ce:	e697      	b.n	100 <__MIN_STACK_SIZE>
 3d0:	429c      	cmp	r4, r3
 3d2:	4140      	adcs	r0, r0
 3d4:	b2c0      	uxtb	r0, r0
 3d6:	e693      	b.n	100 <__MIN_STACK_SIZE>
 3d8:	4293      	cmp	r3, r2
 3da:	d908      	bls.n	3ee <.LASF7+0x2>
 3dc:	2001      	movs	r0, #1
 3de:	42a3      	cmp	r3, r4
 3e0:	d802      	bhi.n	3e8 <.LLST3+0xb>
 3e2:	d102      	bne.n	3ea <.LLST3+0xd>
 3e4:	42bd      	cmp	r5, r7
 3e6:	d900      	bls.n	3ea <.LLST3+0xd>
 3e8:	2000      	movs	r0, #0
 3ea:	b2c0      	uxtb	r0, r0
 3ec:	e688      	b.n	100 <__MIN_STACK_SIZE>
 3ee:	4293      	cmp	r3, r2
 3f0:	d101      	bne.n	3f6 <.LASF7+0xa>
 3f2:	42b5      	cmp	r5, r6
 3f4:	d8f2      	bhi.n	3dc <.LASF6+0x6>
 3f6:	2000      	movs	r0, #0
 3f8:	e682      	b.n	100 <__MIN_STACK_SIZE>
 3fa:	2000      	movs	r0, #0
 3fc:	e680      	b.n	100 <__MIN_STACK_SIZE>
 3fe:	2000      	movs	r0, #0
 400:	e67e      	b.n	100 <__MIN_STACK_SIZE>
 402:	2000      	movs	r0, #0
 404:	e67c      	b.n	100 <__MIN_STACK_SIZE>
 406:	2000      	movs	r0, #0
 408:	e67a      	b.n	100 <__MIN_STACK_SIZE>
 40a:	2000      	movs	r0, #0
 40c:	e678      	b.n	100 <__MIN_STACK_SIZE>
 40e:	2000      	movs	r0, #0
 410:	e676      	b.n	100 <__MIN_STACK_SIZE>
 412:	2000      	movs	r0, #0
 414:	e674      	b.n	100 <__MIN_STACK_SIZE>

00000416 <getTriggerValue>:
 416:	234c      	movs	r3, #76	; 0x4c
 418:	5cc2      	ldrb	r2, [r0, r3]
 41a:	3b3d      	subs	r3, #61	; 0x3d
 41c:	4013      	ands	r3, r2
 41e:	2b02      	cmp	r3, #2
 420:	d010      	beq.n	444 <.LASF15+0x4>
 422:	b2da      	uxtb	r2, r3
 424:	2a02      	cmp	r2, #2
 426:	d907      	bls.n	438 <.LLST3+0x2>
 428:	2b04      	cmp	r3, #4
 42a:	d00f      	beq.n	44c <.LASF0+0x3>
 42c:	2b08      	cmp	r3, #8
 42e:	d111      	bne.n	454 <.LASF3>
 430:	6c83      	ldr	r3, [r0, #72]	; 0x48
 432:	6818      	ldr	r0, [r3, #0]
 434:	6859      	ldr	r1, [r3, #4]
 436:	e004      	b.n	442 <.LASF15+0x2>
 438:	2b01      	cmp	r3, #1
 43a:	d10b      	bne.n	454 <.LASF3>
 43c:	6c83      	ldr	r3, [r0, #72]	; 0x48
 43e:	7818      	ldrb	r0, [r3, #0]
 440:	2100      	movs	r1, #0
 442:	4770      	bx	lr
 444:	6c83      	ldr	r3, [r0, #72]	; 0x48
 446:	8818      	ldrh	r0, [r3, #0]
 448:	2100      	movs	r1, #0
 44a:	e7fa      	b.n	442 <.LASF15+0x2>
 44c:	6c83      	ldr	r3, [r0, #72]	; 0x48
 44e:	6818      	ldr	r0, [r3, #0]
 450:	2100      	movs	r1, #0
 452:	e7f6      	b.n	442 <.LASF15+0x2>
 454:	2000      	movs	r0, #0
 456:	2100      	movs	r1, #0
 458:	e7f3      	b.n	442 <.LASF15+0x2>

0000045a <sampleData>:
 45a:	b5f0      	push	{r4, r5, r6, r7, lr}
 45c:	2700      	movs	r7, #0
 45e:	2355      	movs	r3, #85	; 0x55
 460:	469c      	mov	ip, r3
 462:	2300      	movs	r3, #0
 464:	00be      	lsls	r6, r7, #2
 466:	1986      	adds	r6, r0, r6
 468:	19c5      	adds	r5, r0, r7
 46a:	3524      	adds	r5, #36	; 0x24
 46c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 46e:	1c51      	adds	r1, r2, #1
 470:	6501      	str	r1, [r0, #80]	; 0x50
 472:	6871      	ldr	r1, [r6, #4]
 474:	56c9      	ldrsb	r1, [r1, r3]
 476:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 478:	54a1      	strb	r1, [r4, r2]
 47a:	3301      	adds	r3, #1
 47c:	b2db      	uxtb	r3, r3
 47e:	782a      	ldrb	r2, [r5, #0]
 480:	429a      	cmp	r2, r3
 482:	d8f3      	bhi.n	46c <.LLST4+0xa>
 484:	3701      	adds	r7, #1
 486:	b2ff      	uxtb	r7, r7
 488:	4663      	mov	r3, ip
 48a:	5cc3      	ldrb	r3, [r0, r3]
 48c:	42bb      	cmp	r3, r7
 48e:	d8e8      	bhi.n	462 <.LLST4>
 490:	bdf0      	pop	{r4, r5, r6, r7, pc}

00000492 <getBlockAddress>:
 492:	b510      	push	{r4, lr}
 494:	2800      	cmp	r0, #0
 496:	d016      	beq.n	4c6 <.LASF21+0x3>
 498:	8803      	ldrh	r3, [r0, #0]
 49a:	4299      	cmp	r1, r3
 49c:	d00d      	beq.n	4ba <.LASF18+0x8>
 49e:	2b00      	cmp	r3, #0
 4a0:	d013      	beq.n	4ca <.LASF21+0x7>
 4a2:	2300      	movs	r3, #0
 4a4:	3301      	adds	r3, #1
 4a6:	b29b      	uxth	r3, r3
 4a8:	00da      	lsls	r2, r3, #3
 4aa:	1882      	adds	r2, r0, r2
 4ac:	8814      	ldrh	r4, [r2, #0]
 4ae:	428c      	cmp	r4, r1
 4b0:	d004      	beq.n	4bc <L0>
 4b2:	2c00      	cmp	r4, #0
 4b4:	d1f6      	bne.n	4a4 <.LASF22+0x2>
 4b6:	2000      	movs	r0, #0
 4b8:	e004      	b.n	4c4 <.LASF21+0x1>
 4ba:	0002      	movs	r2, r0
 4bc:	2000      	movs	r0, #0
 4be:	2900      	cmp	r1, #0
 4c0:	d000      	beq.n	4c4 <.LASF21+0x1>
 4c2:	6850      	ldr	r0, [r2, #4]
 4c4:	bd10      	pop	{r4, pc}
 4c6:	2000      	movs	r0, #0
 4c8:	e7fc      	b.n	4c4 <.LASF21+0x1>
 4ca:	2000      	movs	r0, #0
 4cc:	e7fa      	b.n	4c4 <.LASF21+0x1>

000004ce <Scope_Main_Init>:
 4ce:	b510      	push	{r4, lr}
 4d0:	2301      	movs	r3, #1
 4d2:	425b      	negs	r3, r3
 4d4:	8003      	strh	r3, [r0, #0]
 4d6:	1d02      	adds	r2, r0, #4
 4d8:	0004      	movs	r4, r0
 4da:	3424      	adds	r4, #36	; 0x24
 4dc:	0023      	movs	r3, r4
 4de:	2100      	movs	r1, #0
 4e0:	c202      	stmia	r2!, {r1}
 4e2:	7019      	strb	r1, [r3, #0]
 4e4:	3301      	adds	r3, #1
 4e6:	42a2      	cmp	r2, r4
 4e8:	d1fa      	bne.n	4e0 <.LASF10>
 4ea:	4b16      	ldr	r3, [pc, #88]	; (544 <.LASF12+0x8>)
 4ec:	62c3      	str	r3, [r0, #44]	; 0x2c
 4ee:	2200      	movs	r2, #0
 4f0:	2300      	movs	r3, #0
 4f2:	6382      	str	r2, [r0, #56]	; 0x38
 4f4:	63c3      	str	r3, [r0, #60]	; 0x3c
 4f6:	6402      	str	r2, [r0, #64]	; 0x40
 4f8:	6443      	str	r3, [r0, #68]	; 0x44
 4fa:	2300      	movs	r3, #0
 4fc:	6483      	str	r3, [r0, #72]	; 0x48
 4fe:	324c      	adds	r2, #76	; 0x4c
 500:	5483      	strb	r3, [r0, r2]
 502:	3201      	adds	r2, #1
 504:	5483      	strb	r3, [r0, r2]
 506:	6503      	str	r3, [r0, #80]	; 0x50
 508:	3207      	adds	r2, #7
 50a:	5483      	strb	r3, [r0, r2]
 50c:	3201      	adds	r2, #1
 50e:	5483      	strb	r3, [r0, r2]
 510:	2200      	movs	r2, #0
 512:	2156      	movs	r1, #86	; 0x56
 514:	5243      	strh	r3, [r0, r1]
 516:	3102      	adds	r1, #2
 518:	5243      	strh	r3, [r0, r1]
 51a:	3102      	adds	r1, #2
 51c:	5243      	strh	r3, [r0, r1]
 51e:	3102      	adds	r1, #2
 520:	5442      	strb	r2, [r0, r1]
 522:	6603      	str	r3, [r0, #96]	; 0x60
 524:	6643      	str	r3, [r0, #100]	; 0x64
 526:	310c      	adds	r1, #12
 528:	5442      	strb	r2, [r0, r1]
 52a:	66c3      	str	r3, [r0, #108]	; 0x6c
 52c:	2380      	movs	r3, #128	; 0x80
 52e:	019b      	lsls	r3, r3, #6
 530:	6703      	str	r3, [r0, #112]	; 0x70
 532:	3967      	subs	r1, #103	; 0x67
 534:	2274      	movs	r2, #116	; 0x74
 536:	5481      	strb	r1, [r0, r2]
 538:	6303      	str	r3, [r0, #48]	; 0x30
 53a:	4b03      	ldr	r3, [pc, #12]	; (548 <.LASF19+0x1>)
 53c:	681b      	ldr	r3, [r3, #0]
 53e:	6298      	str	r0, [r3, #40]	; 0x28
 540:	bd10      	pop	{r4, pc}
 542:	46c0      	nop			; (mov r8, r8)
 544:	20000188 	.word	0x20000188
 548:	20007dd8 	.word	0x20007dd8

0000054c <Scope_Main_Update>:
 54c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 54e:	0004      	movs	r4, r0
 550:	234d      	movs	r3, #77	; 0x4d
 552:	5cc2      	ldrb	r2, [r0, r3]
 554:	2a08      	cmp	r2, #8
 556:	d80b      	bhi.n	570 <.LASF2>
 558:	0093      	lsls	r3, r2, #2
 55a:	4a7b      	ldr	r2, [pc, #492]	; (748 <.LASF1>)
 55c:	58d3      	ldr	r3, [r2, r3]
 55e:	469f      	mov	pc, r3
 560:	225a      	movs	r2, #90	; 0x5a
 562:	5a83      	ldrh	r3, [r0, r2]
 564:	3301      	adds	r3, #1
 566:	5283      	strh	r3, [r0, r2]
 568:	3a02      	subs	r2, #2
 56a:	5a83      	ldrh	r3, [r0, r2]
 56c:	3301      	adds	r3, #1
 56e:	5283      	strh	r3, [r0, r2]
 570:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 572:	2258      	movs	r2, #88	; 0x58
 574:	5a83      	ldrh	r3, [r0, r2]
 576:	1c59      	adds	r1, r3, #1
 578:	5281      	strh	r1, [r0, r2]
 57a:	3a02      	subs	r2, #2
 57c:	5a82      	ldrh	r2, [r0, r2]
 57e:	429a      	cmp	r2, r3
 580:	d904      	bls.n	58c <.LLST4+0x5>
 582:	225a      	movs	r2, #90	; 0x5a
 584:	5aa3      	ldrh	r3, [r4, r2]
 586:	3301      	adds	r3, #1
 588:	52a3      	strh	r3, [r4, r2]
 58a:	e7f1      	b.n	570 <.LASF2>
 58c:	2200      	movs	r2, #0
 58e:	2358      	movs	r3, #88	; 0x58
 590:	52c2      	strh	r2, [r0, r3]
 592:	f7ff ff62 	bl	45a <sampleData>

00000596 <.LVL162>:
 596:	2354      	movs	r3, #84	; 0x54
 598:	5ce3      	ldrb	r3, [r4, r3]
 59a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 59c:	4694      	mov	ip, r2
 59e:	4463      	add	r3, ip
 5a0:	2280      	movs	r2, #128	; 0x80
 5a2:	0192      	lsls	r2, r2, #6
 5a4:	4293      	cmp	r3, r2
 5a6:	d9ec      	bls.n	582 <.LASF16+0x6>
 5a8:	2200      	movs	r2, #0
 5aa:	234d      	movs	r3, #77	; 0x4d
 5ac:	54e2      	strb	r2, [r4, r3]
 5ae:	e7e8      	b.n	582 <.LASF16+0x6>
 5b0:	f7ff ff31 	bl	416 <getTriggerValue>

000005b4 <.LVL164>:
 5b4:	0006      	movs	r6, r0
 5b6:	000f      	movs	r7, r1
 5b8:	0002      	movs	r2, r0
 5ba:	000b      	movs	r3, r1
 5bc:	0020      	movs	r0, r4
 5be:	f7ff fd8f 	bl	e0 <isTriggerEvent>

000005c2 <.LVL166>:
 5c2:	2800      	cmp	r0, #0
 5c4:	d003      	beq.n	5ce <.LASF4+0x6>
 5c6:	2204      	movs	r2, #4
 5c8:	234d      	movs	r3, #77	; 0x4d
 5ca:	54e2      	strb	r2, [r4, r3]
 5cc:	e7d0      	b.n	570 <.LASF2>
 5ce:	6426      	str	r6, [r4, #64]	; 0x40
 5d0:	6467      	str	r7, [r4, #68]	; 0x44
 5d2:	e7cd      	b.n	570 <.LASF2>
 5d4:	2258      	movs	r2, #88	; 0x58
 5d6:	5a83      	ldrh	r3, [r0, r2]
 5d8:	1c59      	adds	r1, r3, #1
 5da:	5281      	strh	r1, [r0, r2]
 5dc:	3a02      	subs	r2, #2
 5de:	5a82      	ldrh	r2, [r0, r2]
 5e0:	429a      	cmp	r2, r3
 5e2:	d846      	bhi.n	672 <.LASF1+0x1>
 5e4:	2200      	movs	r2, #0
 5e6:	2358      	movs	r3, #88	; 0x58
 5e8:	52c2      	strh	r2, [r0, r3]
 5ea:	3b04      	subs	r3, #4
 5ec:	5cc3      	ldrb	r3, [r0, r3]
 5ee:	6d02      	ldr	r2, [r0, #80]	; 0x50
 5f0:	4694      	mov	ip, r2
 5f2:	4463      	add	r3, ip
 5f4:	2280      	movs	r2, #128	; 0x80
 5f6:	0192      	lsls	r2, r2, #6
 5f8:	4293      	cmp	r3, r2
 5fa:	d901      	bls.n	600 <.LASF7+0x2>
 5fc:	2300      	movs	r3, #0
 5fe:	6503      	str	r3, [r0, #80]	; 0x50
 600:	2700      	movs	r7, #0
 602:	2355      	movs	r3, #85	; 0x55
 604:	469c      	mov	ip, r3
 606:	2300      	movs	r3, #0
 608:	00be      	lsls	r6, r7, #2
 60a:	19a6      	adds	r6, r4, r6
 60c:	19e5      	adds	r5, r4, r7
 60e:	3524      	adds	r5, #36	; 0x24
 610:	6d22      	ldr	r2, [r4, #80]	; 0x50
 612:	1c51      	adds	r1, r2, #1
 614:	6521      	str	r1, [r4, #80]	; 0x50
 616:	6871      	ldr	r1, [r6, #4]
 618:	56c9      	ldrsb	r1, [r1, r3]
 61a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 61c:	5481      	strb	r1, [r0, r2]
 61e:	3301      	adds	r3, #1
 620:	b2db      	uxtb	r3, r3
 622:	782a      	ldrb	r2, [r5, #0]
 624:	429a      	cmp	r2, r3
 626:	d8f3      	bhi.n	610 <.LASF8+0x5>
 628:	3701      	adds	r7, #1
 62a:	b2ff      	uxtb	r7, r7
 62c:	4663      	mov	r3, ip
 62e:	5ce3      	ldrb	r3, [r4, r3]
 630:	42bb      	cmp	r3, r7
 632:	d8e8      	bhi.n	606 <.LASF7+0x8>
 634:	6d23      	ldr	r3, [r4, #80]	; 0x50
 636:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
 638:	4293      	cmp	r3, r2
 63a:	d31a      	bcc.n	672 <.LASF1+0x1>
 63c:	2201      	movs	r2, #1
 63e:	2368      	movs	r3, #104	; 0x68
 640:	54e2      	strb	r2, [r4, r3]
 642:	0020      	movs	r0, r4
 644:	f7ff fee7 	bl	416 <getTriggerValue>

00000648 <.LVL175>:
 648:	0006      	movs	r6, r0
 64a:	000f      	movs	r7, r1
 64c:	0002      	movs	r2, r0
 64e:	000b      	movs	r3, r1
 650:	0020      	movs	r0, r4
 652:	f7ff fd45 	bl	e0 <isTriggerEvent>

00000656 <.LVL177>:
 656:	2800      	cmp	r0, #0
 658:	d01b      	beq.n	692 <.LASF0+0xa>
 65a:	6e23      	ldr	r3, [r4, #96]	; 0x60
 65c:	2b00      	cmp	r3, #0
 65e:	db1b      	blt.n	698 <.LASF2+0x5>
 660:	6d23      	ldr	r3, [r4, #80]	; 0x50
 662:	2b00      	cmp	r3, #0
 664:	d024      	beq.n	6b0 <L0>
 666:	2258      	movs	r2, #88	; 0x58
 668:	5aa2      	ldrh	r2, [r4, r2]
 66a:	2a00      	cmp	r2, #0
 66c:	d01b      	beq.n	6a6 <.LASF3+0x7>
 66e:	6663      	str	r3, [r4, #100]	; 0x64
 670:	e023      	b.n	6ba <.LASF5>
 672:	0020      	movs	r0, r4
 674:	f7ff fecf 	bl	416 <getTriggerValue>

00000678 <.LVL179>:
 678:	0006      	movs	r6, r0
 67a:	000f      	movs	r7, r1
 67c:	0002      	movs	r2, r0
 67e:	000b      	movs	r3, r1
 680:	0020      	movs	r0, r4
 682:	f7ff fd2d 	bl	e0 <isTriggerEvent>

00000686 <.LVL181>:
 686:	2800      	cmp	r0, #0
 688:	d003      	beq.n	692 <.LASF0+0xa>
 68a:	2368      	movs	r3, #104	; 0x68
 68c:	5ce3      	ldrb	r3, [r4, r3]
 68e:	2b00      	cmp	r3, #0
 690:	d1e3      	bne.n	65a <.LVL177+0x4>
 692:	6426      	str	r6, [r4, #64]	; 0x40
 694:	6467      	str	r7, [r4, #68]	; 0x44
 696:	e76b      	b.n	570 <.LASF2>
 698:	6663      	str	r3, [r4, #100]	; 0x64
 69a:	2300      	movs	r3, #0
 69c:	6523      	str	r3, [r4, #80]	; 0x50
 69e:	2208      	movs	r2, #8
 6a0:	334d      	adds	r3, #77	; 0x4d
 6a2:	54e2      	strb	r2, [r4, r3]
 6a4:	e764      	b.n	570 <.LASF2>
 6a6:	2254      	movs	r2, #84	; 0x54
 6a8:	5ca2      	ldrb	r2, [r4, r2]
 6aa:	1a9b      	subs	r3, r3, r2
 6ac:	6663      	str	r3, [r4, #100]	; 0x64
 6ae:	e004      	b.n	6ba <.LASF5>
 6b0:	2354      	movs	r3, #84	; 0x54
 6b2:	5ce3      	ldrb	r3, [r4, r3]
 6b4:	6f22      	ldr	r2, [r4, #112]	; 0x70
 6b6:	1ad3      	subs	r3, r2, r3
 6b8:	6663      	str	r3, [r4, #100]	; 0x64
 6ba:	2207      	movs	r2, #7
 6bc:	234d      	movs	r3, #77	; 0x4d
 6be:	54e2      	strb	r2, [r4, r3]
 6c0:	e756      	b.n	570 <.LASF2>
 6c2:	2258      	movs	r2, #88	; 0x58
 6c4:	5a83      	ldrh	r3, [r0, r2]
 6c6:	1c59      	adds	r1, r3, #1
 6c8:	5281      	strh	r1, [r0, r2]
 6ca:	3a02      	subs	r2, #2
 6cc:	5a82      	ldrh	r2, [r0, r2]
 6ce:	429a      	cmp	r2, r3
 6d0:	d900      	bls.n	6d4 <.LASF0+0x3>
 6d2:	e74d      	b.n	570 <.LASF2>
 6d4:	2200      	movs	r2, #0
 6d6:	2358      	movs	r3, #88	; 0x58
 6d8:	52c2      	strh	r2, [r0, r3]
 6da:	3b04      	subs	r3, #4
 6dc:	5cc3      	ldrb	r3, [r0, r3]
 6de:	6e42      	ldr	r2, [r0, #100]	; 0x64
 6e0:	4694      	mov	ip, r2
 6e2:	4463      	add	r3, ip
 6e4:	6643      	str	r3, [r0, #100]	; 0x64
 6e6:	2b00      	cmp	r3, #0
 6e8:	da00      	bge.n	6ec <.LASF2+0xa>
 6ea:	e741      	b.n	570 <.LASF2>
 6ec:	2202      	movs	r2, #2
 6ee:	234d      	movs	r3, #77	; 0x4d
 6f0:	54c2      	strb	r2, [r0, r3]
 6f2:	e73d      	b.n	570 <.LASF2>
 6f4:	2258      	movs	r2, #88	; 0x58
 6f6:	5a83      	ldrh	r3, [r0, r2]
 6f8:	1c59      	adds	r1, r3, #1
 6fa:	5281      	strh	r1, [r0, r2]
 6fc:	3a02      	subs	r2, #2
 6fe:	5a82      	ldrh	r2, [r0, r2]
 700:	429a      	cmp	r2, r3
 702:	d900      	bls.n	706 <.LASF2+0x2>
 704:	e734      	b.n	570 <.LASF2>
 706:	2200      	movs	r2, #0
 708:	2358      	movs	r3, #88	; 0x58
 70a:	52c2      	strh	r2, [r0, r3]
 70c:	3b04      	subs	r3, #4
 70e:	5cc3      	ldrb	r3, [r0, r3]
 710:	6d02      	ldr	r2, [r0, #80]	; 0x50
 712:	4694      	mov	ip, r2
 714:	4463      	add	r3, ip
 716:	2280      	movs	r2, #128	; 0x80
 718:	0192      	lsls	r2, r2, #6
 71a:	4293      	cmp	r3, r2
 71c:	d901      	bls.n	722 <L0+0x2>
 71e:	2300      	movs	r3, #0
 720:	6503      	str	r3, [r0, #80]	; 0x50
 722:	0020      	movs	r0, r4
 724:	f7ff fe99 	bl	45a <sampleData>

00000728 <.LVL184>:
 728:	6e63      	ldr	r3, [r4, #100]	; 0x64
 72a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 72c:	1a9b      	subs	r3, r3, r2
 72e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 730:	4293      	cmp	r3, r2
 732:	d905      	bls.n	740 <.LASF1+0x8>
 734:	6f21      	ldr	r1, [r4, #112]	; 0x70
 736:	468c      	mov	ip, r1
 738:	4463      	add	r3, ip
 73a:	429a      	cmp	r2, r3
 73c:	d200      	bcs.n	740 <.LASF1+0x8>
 73e:	e717      	b.n	570 <.LASF2>
 740:	2200      	movs	r2, #0
 742:	234d      	movs	r3, #77	; 0x4d
 744:	54e2      	strb	r2, [r4, r3]
 746:	e713      	b.n	570 <.LASF2>
 748:	00003508 	.word	0x00003508

0000074c <Scope_Main_Load>:
 74c:	234d      	movs	r3, #77	; 0x4d
 74e:	5cc3      	ldrb	r3, [r0, r3]
 750:	700b      	strb	r3, [r1, #0]
 752:	2355      	movs	r3, #85	; 0x55
 754:	5cc3      	ldrb	r3, [r0, r3]
 756:	704b      	strb	r3, [r1, #1]
 758:	2356      	movs	r3, #86	; 0x56
 75a:	5ac2      	ldrh	r2, [r0, r3]
 75c:	708a      	strb	r2, [r1, #2]
 75e:	5ac3      	ldrh	r3, [r0, r3]
 760:	0a1b      	lsrs	r3, r3, #8
 762:	70cb      	strb	r3, [r1, #3]
 764:	2350      	movs	r3, #80	; 0x50
 766:	18c3      	adds	r3, r0, r3
 768:	781b      	ldrb	r3, [r3, #0]
 76a:	710b      	strb	r3, [r1, #4]
 76c:	6d03      	ldr	r3, [r0, #80]	; 0x50
 76e:	0a1b      	lsrs	r3, r3, #8
 770:	714b      	strb	r3, [r1, #5]
 772:	6d03      	ldr	r3, [r0, #80]	; 0x50
 774:	0c1b      	lsrs	r3, r3, #16
 776:	718b      	strb	r3, [r1, #6]
 778:	6d03      	ldr	r3, [r0, #80]	; 0x50
 77a:	0e1b      	lsrs	r3, r3, #24
 77c:	71cb      	strb	r3, [r1, #7]
 77e:	232c      	movs	r3, #44	; 0x2c
 780:	18c3      	adds	r3, r0, r3
 782:	781b      	ldrb	r3, [r3, #0]
 784:	720b      	strb	r3, [r1, #8]
 786:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 788:	0a1b      	lsrs	r3, r3, #8
 78a:	724b      	strb	r3, [r1, #9]
 78c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 78e:	728b      	strb	r3, [r1, #10]
 790:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 792:	0e1b      	lsrs	r3, r3, #24
 794:	72cb      	strb	r3, [r1, #11]
 796:	2360      	movs	r3, #96	; 0x60
 798:	18c3      	adds	r3, r0, r3
 79a:	781b      	ldrb	r3, [r3, #0]
 79c:	730b      	strb	r3, [r1, #12]
 79e:	6e03      	ldr	r3, [r0, #96]	; 0x60
 7a0:	121b      	asrs	r3, r3, #8
 7a2:	734b      	strb	r3, [r1, #13]
 7a4:	6e03      	ldr	r3, [r0, #96]	; 0x60
 7a6:	141b      	asrs	r3, r3, #16
 7a8:	738b      	strb	r3, [r1, #14]
 7aa:	6e03      	ldr	r3, [r0, #96]	; 0x60
 7ac:	161b      	asrs	r3, r3, #24
 7ae:	73cb      	strb	r3, [r1, #15]
 7b0:	2364      	movs	r3, #100	; 0x64
 7b2:	18c3      	adds	r3, r0, r3
 7b4:	781b      	ldrb	r3, [r3, #0]
 7b6:	740b      	strb	r3, [r1, #16]
 7b8:	6e43      	ldr	r3, [r0, #100]	; 0x64
 7ba:	121b      	asrs	r3, r3, #8
 7bc:	744b      	strb	r3, [r1, #17]
 7be:	6e43      	ldr	r3, [r0, #100]	; 0x64
 7c0:	141b      	asrs	r3, r3, #16
 7c2:	748b      	strb	r3, [r1, #18]
 7c4:	6e43      	ldr	r3, [r0, #100]	; 0x64
 7c6:	161b      	asrs	r3, r3, #24
 7c8:	74cb      	strb	r3, [r1, #19]
 7ca:	2370      	movs	r3, #112	; 0x70
 7cc:	18c3      	adds	r3, r0, r3
 7ce:	781b      	ldrb	r3, [r3, #0]
 7d0:	750b      	strb	r3, [r1, #20]
 7d2:	6f03      	ldr	r3, [r0, #112]	; 0x70
 7d4:	0a1b      	lsrs	r3, r3, #8
 7d6:	754b      	strb	r3, [r1, #21]
 7d8:	6f03      	ldr	r3, [r0, #112]	; 0x70
 7da:	0c1b      	lsrs	r3, r3, #16
 7dc:	758b      	strb	r3, [r1, #22]
 7de:	6f03      	ldr	r3, [r0, #112]	; 0x70
 7e0:	0e1b      	lsrs	r3, r3, #24
 7e2:	75cb      	strb	r3, [r1, #23]
 7e4:	2330      	movs	r3, #48	; 0x30
 7e6:	18c3      	adds	r3, r0, r3
 7e8:	781b      	ldrb	r3, [r3, #0]
 7ea:	760b      	strb	r3, [r1, #24]
 7ec:	6b03      	ldr	r3, [r0, #48]	; 0x30
 7ee:	0a1b      	lsrs	r3, r3, #8
 7f0:	764b      	strb	r3, [r1, #25]
 7f2:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 7f4:	768b      	strb	r3, [r1, #26]
 7f6:	6b03      	ldr	r3, [r0, #48]	; 0x30
 7f8:	0e1b      	lsrs	r3, r3, #24
 7fa:	76cb      	strb	r3, [r1, #27]
 7fc:	2382      	movs	r3, #130	; 0x82
 7fe:	770b      	strb	r3, [r1, #28]
 800:	201d      	movs	r0, #29
 802:	4770      	bx	lr

00000804 <Scope_Main_Save>:
 804:	b5f0      	push	{r4, r5, r6, r7, lr}
 806:	46de      	mov	lr, fp
 808:	4657      	mov	r7, sl
 80a:	464e      	mov	r6, r9
 80c:	4645      	mov	r5, r8
 80e:	b5e0      	push	{r5, r6, r7, lr}
 810:	b083      	sub	sp, #12
 812:	0004      	movs	r4, r0
 814:	000d      	movs	r5, r1
 816:	4692      	mov	sl, r2
 818:	2701      	movs	r7, #1
 81a:	2a03      	cmp	r2, #3
 81c:	d800      	bhi.n	820 <.LASF1>
 81e:	e0d8      	b.n	9d2 <_dinit_size+0x2>
 820:	784b      	ldrb	r3, [r1, #1]
 822:	3b01      	subs	r3, #1
 824:	2b07      	cmp	r3, #7
 826:	d900      	bls.n	82a <.LASF1+0xa>
 828:	e0d3      	b.n	9d2 <_dinit_size+0x2>
 82a:	2200      	movs	r2, #0
 82c:	234d      	movs	r3, #77	; 0x4d
 82e:	54c2      	strb	r2, [r0, r3]
 830:	3308      	adds	r3, #8
 832:	54c2      	strb	r2, [r0, r3]
 834:	3305      	adds	r3, #5
 836:	52c2      	strh	r2, [r0, r3]
 838:	6502      	str	r2, [r0, #80]	; 0x50
 83a:	78c9      	ldrb	r1, [r1, #3]
 83c:	0209      	lsls	r1, r1, #8
 83e:	78ab      	ldrb	r3, [r5, #2]
 840:	185b      	adds	r3, r3, r1
 842:	b29b      	uxth	r3, r3
 844:	2156      	movs	r1, #86	; 0x56
 846:	5243      	strh	r3, [r0, r1]
 848:	3102      	adds	r1, #2
 84a:	5243      	strh	r3, [r0, r1]
 84c:	2000      	movs	r0, #0
 84e:	2100      	movs	r1, #0
 850:	6420      	str	r0, [r4, #64]	; 0x40
 852:	6461      	str	r1, [r4, #68]	; 0x44
 854:	2354      	movs	r3, #84	; 0x54
 856:	2100      	movs	r1, #0
 858:	54e1      	strb	r1, [r4, r3]
 85a:	2102      	movs	r1, #2
 85c:	3308      	adds	r3, #8
 85e:	54e1      	strb	r1, [r4, r3]
 860:	330c      	adds	r3, #12
 862:	2100      	movs	r1, #0
 864:	54e1      	strb	r1, [r4, r3]
 866:	6662      	str	r2, [r4, #100]	; 0x64
 868:	786b      	ldrb	r3, [r5, #1]
 86a:	2b00      	cmp	r3, #0
 86c:	d100      	bne.n	870 <.Ldebug_ranges0>
 86e:	e0cd      	b.n	a0c <L0+0x2c>
 870:	2604      	movs	r6, #4
 872:	2300      	movs	r3, #0
 874:	4699      	mov	r9, r3
 876:	002b      	movs	r3, r5
 878:	0025      	movs	r5, r4
 87a:	464c      	mov	r4, r9
 87c:	4699      	mov	r9, r3
 87e:	e099      	b.n	9b4 <.LLST10+0x3e>
 880:	464b      	mov	r3, r9
 882:	19da      	adds	r2, r3, r7
 884:	7851      	ldrb	r1, [r2, #1]
 886:	0209      	lsls	r1, r1, #8
 888:	5ddb      	ldrb	r3, [r3, r7]
 88a:	185b      	adds	r3, r3, r1
 88c:	b29b      	uxth	r3, r3
 88e:	9300      	str	r3, [sp, #0]
 890:	4bcc      	ldr	r3, [pc, #816]	; (bc4 <L0>)
 892:	681b      	ldr	r3, [r3, #0]
 894:	469b      	mov	fp, r3
 896:	6818      	ldr	r0, [r3, #0]
 898:	78d3      	ldrb	r3, [r2, #3]
 89a:	021b      	lsls	r3, r3, #8
 89c:	7891      	ldrb	r1, [r2, #2]
 89e:	18c9      	adds	r1, r1, r3
 8a0:	b289      	uxth	r1, r1
 8a2:	f7ff fdf6 	bl	492 <getBlockAddress>

000008a6 <.LVL197>:
 8a6:	4684      	mov	ip, r0
 8a8:	2800      	cmp	r0, #0
 8aa:	d100      	bne.n	8ae <.LLST6+0x2>
 8ac:	e1fa      	b.n	ca4 <.LLST0+0x2>
 8ae:	8800      	ldrh	r0, [r0, #0]
 8b0:	465b      	mov	r3, fp
 8b2:	685b      	ldr	r3, [r3, #4]
 8b4:	469b      	mov	fp, r3

000008b6 <.LBB76>:
 8b6:	881b      	ldrh	r3, [r3, #0]
 8b8:	4298      	cmp	r0, r3
 8ba:	d012      	beq.n	8e2 <.LASF1+0xe>
 8bc:	2b00      	cmp	r3, #0
 8be:	d100      	bne.n	8c2 <.LASF0+0xa>
 8c0:	e1f2      	b.n	ca8 <.LLST0+0x6>
 8c2:	2200      	movs	r2, #0
 8c4:	4659      	mov	r1, fp
 8c6:	46a3      	mov	fp, r4
 8c8:	3201      	adds	r2, #1
 8ca:	b292      	uxth	r2, r2
 8cc:	0053      	lsls	r3, r2, #1
 8ce:	189b      	adds	r3, r3, r2
 8d0:	00db      	lsls	r3, r3, #3
 8d2:	18cb      	adds	r3, r1, r3
 8d4:	881c      	ldrh	r4, [r3, #0]
 8d6:	42a0      	cmp	r0, r4
 8d8:	d006      	beq.n	8e8 <.LASF0>
 8da:	2c00      	cmp	r4, #0
 8dc:	d1f4      	bne.n	8c8 <.LASF0+0x2>
 8de:	4647      	mov	r7, r8
 8e0:	e077      	b.n	9d2 <_dinit_size+0x2>
 8e2:	0018      	movs	r0, r3
 8e4:	465b      	mov	r3, fp
 8e6:	e000      	b.n	8ea <.LASF0+0x2>
 8e8:	465c      	mov	r4, fp
 8ea:	2800      	cmp	r0, #0
 8ec:	d100      	bne.n	8f0 <.LBE76>
 8ee:	e1dd      	b.n	cac <.LLST0+0xa>

000008f0 <.LBE76>:
 8f0:	2b00      	cmp	r3, #0
 8f2:	d100      	bne.n	8f6 <.LASF0>
 8f4:	e1dc      	b.n	cb0 <.LLST0+0xe>
 8f6:	695b      	ldr	r3, [r3, #20]
 8f8:	9900      	ldr	r1, [sp, #0]
 8fa:	4660      	mov	r0, ip
 8fc:	4798      	blx	r3

000008fe <.LVL211>:
 8fe:	00a3      	lsls	r3, r4, #2
 900:	18eb      	adds	r3, r5, r3
 902:	6058      	str	r0, [r3, #4]
 904:	2800      	cmp	r0, #0
 906:	d138      	bne.n	97a <.LLST10+0x4>
 908:	4647      	mov	r7, r8
 90a:	e062      	b.n	9d2 <_dinit_size+0x2>
 90c:	4bad      	ldr	r3, [pc, #692]	; (bc4 <L0>)
 90e:	681b      	ldr	r3, [r3, #0]
 910:	6818      	ldr	r0, [r3, #0]
 912:	464b      	mov	r3, r9
 914:	19da      	adds	r2, r3, r7
 916:	78d3      	ldrb	r3, [r2, #3]
 918:	021b      	lsls	r3, r3, #8
 91a:	7891      	ldrb	r1, [r2, #2]
 91c:	18c9      	adds	r1, r1, r3
 91e:	b289      	uxth	r1, r1
 920:	f7ff fdb7 	bl	492 <getBlockAddress>

00000924 <.LVL216>:
 924:	2800      	cmp	r0, #0
 926:	d100      	bne.n	92a <.LVL216+0x6>
 928:	e1b2      	b.n	c90 <.Ldebug_abbrev0+0x5>
 92a:	00a3      	lsls	r3, r4, #2
 92c:	18eb      	adds	r3, r5, r3
 92e:	6058      	str	r0, [r3, #4]
 930:	e023      	b.n	97a <.LLST10+0x4>
 932:	4ba4      	ldr	r3, [pc, #656]	; (bc4 <L0>)
 934:	681b      	ldr	r3, [r3, #0]
 936:	6818      	ldr	r0, [r3, #0]
 938:	464b      	mov	r3, r9
 93a:	19da      	adds	r2, r3, r7
 93c:	78d3      	ldrb	r3, [r2, #3]
 93e:	021b      	lsls	r3, r3, #8
 940:	7891      	ldrb	r1, [r2, #2]
 942:	18c9      	adds	r1, r1, r3
 944:	b289      	uxth	r1, r1
 946:	f7ff fda4 	bl	492 <getBlockAddress>

0000094a <.LVL220>:
 94a:	2800      	cmp	r0, #0
 94c:	d100      	bne.n	950 <.LLST9+0x5>
 94e:	e1a1      	b.n	c94 <.Ldebug_abbrev0+0x9>
 950:	6802      	ldr	r2, [r0, #0]
 952:	00a3      	lsls	r3, r4, #2
 954:	18eb      	adds	r3, r5, r3
 956:	605a      	str	r2, [r3, #4]
 958:	e00f      	b.n	97a <.LLST10+0x4>
 95a:	00a2      	lsls	r2, r4, #2
 95c:	18aa      	adds	r2, r5, r2
 95e:	464b      	mov	r3, r9
 960:	19d9      	adds	r1, r3, r7
 962:	784b      	ldrb	r3, [r1, #1]
 964:	021b      	lsls	r3, r3, #8
 966:	7888      	ldrb	r0, [r1, #2]
 968:	0400      	lsls	r0, r0, #16
 96a:	181b      	adds	r3, r3, r0
 96c:	4648      	mov	r0, r9
 96e:	5dc0      	ldrb	r0, [r0, r7]
 970:	181b      	adds	r3, r3, r0
 972:	78c9      	ldrb	r1, [r1, #3]
 974:	0609      	lsls	r1, r1, #24
 976:	185b      	adds	r3, r3, r1
 978:	6053      	str	r3, [r2, #4]
 97a:	444f      	add	r7, r9
 97c:	793b      	ldrb	r3, [r7, #4]
 97e:	192a      	adds	r2, r5, r4
 980:	3224      	adds	r2, #36	; 0x24
 982:	7013      	strb	r3, [r2, #0]
 984:	2254      	movs	r2, #84	; 0x54
 986:	5ca9      	ldrb	r1, [r5, r2]
 988:	1859      	adds	r1, r3, r1
 98a:	b2c9      	uxtb	r1, r1
 98c:	54a9      	strb	r1, [r5, r2]
 98e:	3208      	adds	r2, #8
 990:	5ca8      	ldrb	r0, [r5, r2]
 992:	181b      	adds	r3, r3, r0
 994:	54ab      	strb	r3, [r5, r2]
 996:	2780      	movs	r7, #128	; 0x80
 998:	01bf      	lsls	r7, r7, #6
 99a:	0038      	movs	r0, r7
 99c:	f002 fc78 	bl	3290 <__aeabi_idivmod>
 9a0:	1a7f      	subs	r7, r7, r1
 9a2:	672f      	str	r7, [r5, #112]	; 0x70
 9a4:	3606      	adds	r6, #6
 9a6:	b2f6      	uxtb	r6, r6
 9a8:	3401      	adds	r4, #1
 9aa:	b2e4      	uxtb	r4, r4
 9ac:	464b      	mov	r3, r9
 9ae:	785b      	ldrb	r3, [r3, #1]
 9b0:	42a3      	cmp	r3, r4
 9b2:	d916      	bls.n	9e2 <L0+0x2>
 9b4:	464b      	mov	r3, r9
 9b6:	5d9b      	ldrb	r3, [r3, r6]
 9b8:	4698      	mov	r8, r3
 9ba:	1c77      	adds	r7, r6, #1
 9bc:	b2ff      	uxtb	r7, r7
 9be:	2b01      	cmp	r3, #1
 9c0:	d100      	bne.n	9c4 <.LLST10+0x4e>
 9c2:	e75d      	b.n	880 <.LASF0+0x3>
 9c4:	2b00      	cmp	r3, #0
 9c6:	d0c8      	beq.n	95a <.Ldebug_line0+0x5>
 9c8:	2b02      	cmp	r3, #2
 9ca:	d09f      	beq.n	90c <.LVL211+0xe>
 9cc:	2b03      	cmp	r3, #3
 9ce:	d0b0      	beq.n	932 <.LVL216+0xe>
 9d0:	2701      	movs	r7, #1
 9d2:	0038      	movs	r0, r7
 9d4:	b003      	add	sp, #12
 9d6:	bc3c      	pop	{r2, r3, r4, r5}
 9d8:	4690      	mov	r8, r2
 9da:	4699      	mov	r9, r3
 9dc:	46a2      	mov	sl, r4
 9de:	46ab      	mov	fp, r5
 9e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 9e2:	002c      	movs	r4, r5
 9e4:	464d      	mov	r5, r9
 9e6:	5daa      	ldrb	r2, [r5, r6]
 9e8:	234c      	movs	r3, #76	; 0x4c
 9ea:	54e2      	strb	r2, [r4, r3]
 9ec:	1c73      	adds	r3, r6, #1
 9ee:	b2db      	uxtb	r3, r3
 9f0:	5cef      	ldrb	r7, [r5, r3]
 9f2:	1cb3      	adds	r3, r6, #2
 9f4:	b2db      	uxtb	r3, r3
 9f6:	4698      	mov	r8, r3
 9f8:	2f01      	cmp	r7, #1
 9fa:	d009      	beq.n	a10 <L0+0x30>
 9fc:	2f00      	cmp	r7, #0
 9fe:	d069      	beq.n	ad4 <.LVL266+0xc>
 a00:	2f02      	cmp	r7, #2
 a02:	d044      	beq.n	a8e <L0+0x1e>
 a04:	2f03      	cmp	r7, #3
 a06:	d053      	beq.n	ab0 <.LVL262+0xa>
 a08:	2701      	movs	r7, #1
 a0a:	e7e2      	b.n	9d2 <_dinit_size+0x2>
 a0c:	2604      	movs	r6, #4
 a0e:	e7ea      	b.n	9e6 <L0+0x6>
 a10:	4b6c      	ldr	r3, [pc, #432]	; (bc4 <L0>)
 a12:	681b      	ldr	r3, [r3, #0]
 a14:	4699      	mov	r9, r3
 a16:	6818      	ldr	r0, [r3, #0]
 a18:	4643      	mov	r3, r8
 a1a:	18ea      	adds	r2, r5, r3
 a1c:	78d3      	ldrb	r3, [r2, #3]
 a1e:	021b      	lsls	r3, r3, #8
 a20:	7891      	ldrb	r1, [r2, #2]
 a22:	18c9      	adds	r1, r1, r3
 a24:	b289      	uxth	r1, r1
 a26:	f7ff fd34 	bl	492 <getBlockAddress>

00000a2a <.LVL244>:
 a2a:	4684      	mov	ip, r0
 a2c:	2800      	cmp	r0, #0
 a2e:	d0d0      	beq.n	9d2 <_dinit_size+0x2>
 a30:	8801      	ldrh	r1, [r0, #0]
 a32:	464b      	mov	r3, r9
 a34:	685b      	ldr	r3, [r3, #4]
 a36:	4699      	mov	r9, r3

00000a38 <.LBB78>:
 a38:	881b      	ldrh	r3, [r3, #0]
 a3a:	4299      	cmp	r1, r3
 a3c:	d010      	beq.n	a60 <.LLST0+0x1a>
 a3e:	2b00      	cmp	r3, #0
 a40:	d0c7      	beq.n	9d2 <_dinit_size+0x2>
 a42:	2200      	movs	r2, #0
 a44:	4648      	mov	r0, r9
 a46:	46a1      	mov	r9, r4
 a48:	3201      	adds	r2, #1
 a4a:	b292      	uxth	r2, r2
 a4c:	0053      	lsls	r3, r2, #1
 a4e:	189b      	adds	r3, r3, r2
 a50:	00db      	lsls	r3, r3, #3
 a52:	18c3      	adds	r3, r0, r3
 a54:	881c      	ldrh	r4, [r3, #0]
 a56:	42a1      	cmp	r1, r4
 a58:	d005      	beq.n	a66 <.LLST1>
 a5a:	2c00      	cmp	r4, #0
 a5c:	d1f4      	bne.n	a48 <.LLST0+0x2>
 a5e:	e7b8      	b.n	9d2 <_dinit_size+0x2>
 a60:	0019      	movs	r1, r3
 a62:	464b      	mov	r3, r9
 a64:	e000      	b.n	a68 <.LLST1+0x2>
 a66:	464c      	mov	r4, r9
 a68:	2900      	cmp	r1, #0
 a6a:	d0b2      	beq.n	9d2 <_dinit_size+0x2>

00000a6c <.LBE78>:
 a6c:	2b00      	cmp	r3, #0
 a6e:	d0b0      	beq.n	9d2 <_dinit_size+0x2>
 a70:	4642      	mov	r2, r8
 a72:	18aa      	adds	r2, r5, r2
 a74:	7852      	ldrb	r2, [r2, #1]
 a76:	0212      	lsls	r2, r2, #8
 a78:	4641      	mov	r1, r8
 a7a:	5c69      	ldrb	r1, [r5, r1]
 a7c:	1889      	adds	r1, r1, r2
 a7e:	b289      	uxth	r1, r1
 a80:	695b      	ldr	r3, [r3, #20]
 a82:	4660      	mov	r0, ip
 a84:	4798      	blx	r3
 a86:	64a0      	str	r0, [r4, #72]	; 0x48
 a88:	2800      	cmp	r0, #0
 a8a:	d130      	bne.n	aee <.LVL266+0x26>
 a8c:	e7a1      	b.n	9d2 <_dinit_size+0x2>
 a8e:	4b4d      	ldr	r3, [pc, #308]	; (bc4 <L0>)
 a90:	681b      	ldr	r3, [r3, #0]
 a92:	6818      	ldr	r0, [r3, #0]
 a94:	4643      	mov	r3, r8
 a96:	18ea      	adds	r2, r5, r3
 a98:	78d3      	ldrb	r3, [r2, #3]
 a9a:	021b      	lsls	r3, r3, #8
 a9c:	7891      	ldrb	r1, [r2, #2]
 a9e:	18c9      	adds	r1, r1, r3
 aa0:	b289      	uxth	r1, r1
 aa2:	f7ff fcf6 	bl	492 <getBlockAddress>

00000aa6 <.LVL262>:
 aa6:	2800      	cmp	r0, #0
 aa8:	d100      	bne.n	aac <.LVL262+0x6>
 aaa:	e0f5      	b.n	c98 <.Ldebug_abbrev0+0xd>
 aac:	64a0      	str	r0, [r4, #72]	; 0x48
 aae:	e01e      	b.n	aee <.LVL266+0x26>
 ab0:	4b44      	ldr	r3, [pc, #272]	; (bc4 <L0>)
 ab2:	681b      	ldr	r3, [r3, #0]
 ab4:	6818      	ldr	r0, [r3, #0]
 ab6:	4643      	mov	r3, r8
 ab8:	18ea      	adds	r2, r5, r3
 aba:	78d3      	ldrb	r3, [r2, #3]
 abc:	021b      	lsls	r3, r3, #8
 abe:	7891      	ldrb	r1, [r2, #2]
 ac0:	18c9      	adds	r1, r1, r3
 ac2:	b289      	uxth	r1, r1
 ac4:	f7ff fce5 	bl	492 <getBlockAddress>

00000ac8 <.LVL266>:
 ac8:	2800      	cmp	r0, #0
 aca:	d100      	bne.n	ace <.LVL266+0x6>
 acc:	e0e6      	b.n	c9c <.Ldebug_abbrev0+0x11>
 ace:	6803      	ldr	r3, [r0, #0]
 ad0:	64a3      	str	r3, [r4, #72]	; 0x48
 ad2:	e00c      	b.n	aee <.LVL266+0x26>
 ad4:	18ea      	adds	r2, r5, r3
 ad6:	7853      	ldrb	r3, [r2, #1]
 ad8:	021b      	lsls	r3, r3, #8
 ada:	7891      	ldrb	r1, [r2, #2]
 adc:	0409      	lsls	r1, r1, #16
 ade:	185b      	adds	r3, r3, r1
 ae0:	4641      	mov	r1, r8
 ae2:	5c69      	ldrb	r1, [r5, r1]
 ae4:	185b      	adds	r3, r3, r1
 ae6:	78d2      	ldrb	r2, [r2, #3]
 ae8:	0612      	lsls	r2, r2, #24
 aea:	189b      	adds	r3, r3, r2
 aec:	64a3      	str	r3, [r4, #72]	; 0x48
 aee:	1db7      	adds	r7, r6, #6
 af0:	b2fb      	uxtb	r3, r7
 af2:	4698      	mov	r8, r3
 af4:	234c      	movs	r3, #76	; 0x4c
 af6:	5ce3      	ldrb	r3, [r4, r3]
 af8:	469c      	mov	ip, r3
 afa:	270f      	movs	r7, #15
 afc:	401f      	ands	r7, r3
 afe:	2f02      	cmp	r7, #2
 b00:	d100      	bne.n	b04 <.LLST3+0x7>
 b02:	e098      	b.n	c36 <.LVL277+0x6>
 b04:	d960      	bls.n	bc8 <L0+0x4>
 b06:	2f04      	cmp	r7, #4
 b08:	d100      	bne.n	b0c <.LLST3+0xf>
 b0a:	e09f      	b.n	c4c <.LLST4+0xd>
 b0c:	2f08      	cmp	r7, #8
 b0e:	d000      	beq.n	b12 <.Ldebug_abbrev0+0x4>
 b10:	e0c6      	b.n	ca0 <.Ldebug_abbrev0+0x15>
 b12:	46a9      	mov	r9, r5
 b14:	44c1      	add	r9, r8
 b16:	464b      	mov	r3, r9
 b18:	785b      	ldrb	r3, [r3, #1]
 b1a:	2100      	movs	r1, #0
 b1c:	2200      	movs	r2, #0
 b1e:	9100      	str	r1, [sp, #0]
 b20:	9201      	str	r2, [sp, #4]
 b22:	021b      	lsls	r3, r3, #8
 b24:	9300      	str	r3, [sp, #0]
 b26:	464b      	mov	r3, r9
 b28:	789b      	ldrb	r3, [r3, #2]
 b2a:	469b      	mov	fp, r3
 b2c:	2300      	movs	r3, #0
 b2e:	4659      	mov	r1, fp
 b30:	040a      	lsls	r2, r1, #16
 b32:	9800      	ldr	r0, [sp, #0]
 b34:	9901      	ldr	r1, [sp, #4]
 b36:	1880      	adds	r0, r0, r2
 b38:	4159      	adcs	r1, r3
 b3a:	9000      	str	r0, [sp, #0]
 b3c:	9101      	str	r1, [sp, #4]
 b3e:	4641      	mov	r1, r8
 b40:	5c6a      	ldrb	r2, [r5, r1]
 b42:	2300      	movs	r3, #0
 b44:	9800      	ldr	r0, [sp, #0]
 b46:	9901      	ldr	r1, [sp, #4]
 b48:	1880      	adds	r0, r0, r2
 b4a:	4159      	adcs	r1, r3
 b4c:	9000      	str	r0, [sp, #0]
 b4e:	9101      	str	r1, [sp, #4]
 b50:	4649      	mov	r1, r9
 b52:	78c9      	ldrb	r1, [r1, #3]
 b54:	468b      	mov	fp, r1
 b56:	2100      	movs	r1, #0
 b58:	465b      	mov	r3, fp
 b5a:	0618      	lsls	r0, r3, #24
 b5c:	9a00      	ldr	r2, [sp, #0]
 b5e:	9b01      	ldr	r3, [sp, #4]
 b60:	1812      	adds	r2, r2, r0
 b62:	414b      	adcs	r3, r1
 b64:	9200      	str	r2, [sp, #0]
 b66:	9301      	str	r3, [sp, #4]
 b68:	2200      	movs	r2, #0
 b6a:	4649      	mov	r1, r9
 b6c:	790b      	ldrb	r3, [r1, #4]
 b6e:	9800      	ldr	r0, [sp, #0]
 b70:	9901      	ldr	r1, [sp, #4]
 b72:	1880      	adds	r0, r0, r2
 b74:	4159      	adcs	r1, r3
 b76:	9000      	str	r0, [sp, #0]
 b78:	9101      	str	r1, [sp, #4]
 b7a:	464b      	mov	r3, r9
 b7c:	795b      	ldrb	r3, [r3, #5]
 b7e:	469b      	mov	fp, r3
 b80:	2200      	movs	r2, #0
 b82:	4659      	mov	r1, fp
 b84:	020b      	lsls	r3, r1, #8
 b86:	9800      	ldr	r0, [sp, #0]
 b88:	9901      	ldr	r1, [sp, #4]
 b8a:	1880      	adds	r0, r0, r2
 b8c:	4159      	adcs	r1, r3
 b8e:	9000      	str	r0, [sp, #0]
 b90:	9101      	str	r1, [sp, #4]
 b92:	4649      	mov	r1, r9
 b94:	7989      	ldrb	r1, [r1, #6]
 b96:	468b      	mov	fp, r1
 b98:	2000      	movs	r0, #0
 b9a:	465b      	mov	r3, fp
 b9c:	0419      	lsls	r1, r3, #16
 b9e:	9a00      	ldr	r2, [sp, #0]
 ba0:	9b01      	ldr	r3, [sp, #4]
 ba2:	1812      	adds	r2, r2, r0
 ba4:	414b      	adcs	r3, r1
 ba6:	9200      	str	r2, [sp, #0]
 ba8:	9301      	str	r3, [sp, #4]
 baa:	464b      	mov	r3, r9
 bac:	79db      	ldrb	r3, [r3, #7]
 bae:	4699      	mov	r9, r3
 bb0:	2200      	movs	r2, #0
 bb2:	4649      	mov	r1, r9
 bb4:	060b      	lsls	r3, r1, #24
 bb6:	9800      	ldr	r0, [sp, #0]
 bb8:	9901      	ldr	r1, [sp, #4]
 bba:	1812      	adds	r2, r2, r0
 bbc:	414b      	adcs	r3, r1
 bbe:	63a2      	str	r2, [r4, #56]	; 0x38
 bc0:	63e3      	str	r3, [r4, #60]	; 0x3c
 bc2:	e008      	b.n	bd6 <L0+0x12>
 bc4:	20007dd8 	.word	0x20007dd8
 bc8:	2f01      	cmp	r7, #1
 bca:	d169      	bne.n	ca0 <.Ldebug_abbrev0+0x15>
 bcc:	4643      	mov	r3, r8
 bce:	5ceb      	ldrb	r3, [r5, r3]
 bd0:	63a3      	str	r3, [r4, #56]	; 0x38
 bd2:	2300      	movs	r3, #0
 bd4:	63e3      	str	r3, [r4, #60]	; 0x3c
 bd6:	4663      	mov	r3, ip
 bd8:	466a      	mov	r2, sp
 bda:	7013      	strb	r3, [r2, #0]
 bdc:	7813      	ldrb	r3, [r2, #0]
 bde:	b25b      	sxtb	r3, r3
 be0:	2b00      	cmp	r3, #0
 be2:	db44      	blt.n	c6e <.LLST1+0xe>
 be4:	2320      	movs	r3, #32
 be6:	4662      	mov	r2, ip
 be8:	431a      	orrs	r2, r3
 bea:	0013      	movs	r3, r2
 bec:	224c      	movs	r2, #76	; 0x4c
 bee:	54a3      	strb	r3, [r4, r2]
 bf0:	360a      	adds	r6, #10
 bf2:	b2f6      	uxtb	r6, r6
 bf4:	19ab      	adds	r3, r5, r6
 bf6:	7858      	ldrb	r0, [r3, #1]
 bf8:	0200      	lsls	r0, r0, #8
 bfa:	5daa      	ldrb	r2, [r5, r6]
 bfc:	1880      	adds	r0, r0, r2
 bfe:	789a      	ldrb	r2, [r3, #2]
 c00:	0412      	lsls	r2, r2, #16
 c02:	1880      	adds	r0, r0, r2
 c04:	78db      	ldrb	r3, [r3, #3]
 c06:	061b      	lsls	r3, r3, #24
 c08:	18c0      	adds	r0, r0, r3
 c0a:	6620      	str	r0, [r4, #96]	; 0x60
 c0c:	f001 fd30 	bl	2670 <getAbsValI32>

00000c10 <.LVL273>:
 c10:	66e0      	str	r0, [r4, #108]	; 0x6c
 c12:	1d33      	adds	r3, r6, #4
 c14:	b2db      	uxtb	r3, r3
 c16:	5cea      	ldrb	r2, [r5, r3]
 c18:	2374      	movs	r3, #116	; 0x74
 c1a:	54e2      	strb	r2, [r4, r3]
 c1c:	3605      	adds	r6, #5
 c1e:	b2f6      	uxtb	r6, r6
 c20:	45b2      	cmp	sl, r6
 c22:	d928      	bls.n	c76 <.LLST1+0x16>
 c24:	5dab      	ldrb	r3, [r5, r6]
 c26:	2b01      	cmp	r3, #1
 c28:	d12a      	bne.n	c80 <.LVL281+0x4>
 c2a:	0020      	movs	r0, r4
 c2c:	f7ff fbf3 	bl	416 <getTriggerValue>

00000c30 <.LVL277>:
 c30:	6420      	str	r0, [r4, #64]	; 0x40
 c32:	6461      	str	r1, [r4, #68]	; 0x44
 c34:	e024      	b.n	c80 <.LVL281+0x4>
 c36:	4643      	mov	r3, r8
 c38:	18eb      	adds	r3, r5, r3
 c3a:	785b      	ldrb	r3, [r3, #1]
 c3c:	021b      	lsls	r3, r3, #8
 c3e:	4642      	mov	r2, r8
 c40:	5caa      	ldrb	r2, [r5, r2]
 c42:	189b      	adds	r3, r3, r2
 c44:	63a3      	str	r3, [r4, #56]	; 0x38
 c46:	17db      	asrs	r3, r3, #31
 c48:	63e3      	str	r3, [r4, #60]	; 0x3c
 c4a:	e7c4      	b.n	bd6 <L0+0x12>
 c4c:	4643      	mov	r3, r8
 c4e:	18ea      	adds	r2, r5, r3
 c50:	7853      	ldrb	r3, [r2, #1]
 c52:	021b      	lsls	r3, r3, #8
 c54:	7891      	ldrb	r1, [r2, #2]
 c56:	0409      	lsls	r1, r1, #16
 c58:	185b      	adds	r3, r3, r1
 c5a:	4641      	mov	r1, r8
 c5c:	5c69      	ldrb	r1, [r5, r1]
 c5e:	185b      	adds	r3, r3, r1
 c60:	78d2      	ldrb	r2, [r2, #3]
 c62:	0612      	lsls	r2, r2, #24
 c64:	189b      	adds	r3, r3, r2
 c66:	63a3      	str	r3, [r4, #56]	; 0x38
 c68:	2300      	movs	r3, #0
 c6a:	63e3      	str	r3, [r4, #60]	; 0x3c
 c6c:	e7b3      	b.n	bd6 <L0+0x12>
 c6e:	003e      	movs	r6, r7
 c70:	4446      	add	r6, r8
 c72:	b2f6      	uxtb	r6, r6
 c74:	e7be      	b.n	bf4 <L0+0x30>
 c76:	0020      	movs	r0, r4
 c78:	f7ff fbcd 	bl	416 <getTriggerValue>

00000c7c <.LVL281>:
 c7c:	6420      	str	r0, [r4, #64]	; 0x40
 c7e:	6461      	str	r1, [r4, #68]	; 0x44
 c80:	786a      	ldrb	r2, [r5, #1]
 c82:	2355      	movs	r3, #85	; 0x55
 c84:	54e2      	strb	r2, [r4, r3]
 c86:	782a      	ldrb	r2, [r5, #0]
 c88:	3b08      	subs	r3, #8
 c8a:	54e2      	strb	r2, [r4, r3]
 c8c:	2700      	movs	r7, #0
 c8e:	e6a0      	b.n	9d2 <_dinit_size+0x2>
 c90:	2701      	movs	r7, #1
 c92:	e69e      	b.n	9d2 <_dinit_size+0x2>
 c94:	2701      	movs	r7, #1
 c96:	e69c      	b.n	9d2 <_dinit_size+0x2>
 c98:	2701      	movs	r7, #1
 c9a:	e69a      	b.n	9d2 <_dinit_size+0x2>
 c9c:	2701      	movs	r7, #1
 c9e:	e698      	b.n	9d2 <_dinit_size+0x2>
 ca0:	2701      	movs	r7, #1
 ca2:	e696      	b.n	9d2 <_dinit_size+0x2>
 ca4:	4647      	mov	r7, r8
 ca6:	e694      	b.n	9d2 <_dinit_size+0x2>
 ca8:	4647      	mov	r7, r8
 caa:	e692      	b.n	9d2 <_dinit_size+0x2>
 cac:	4647      	mov	r7, r8
 cae:	e690      	b.n	9d2 <_dinit_size+0x2>
 cb0:	4647      	mov	r7, r8
 cb2:	e68e      	b.n	9d2 <_dinit_size+0x2>

00000cb4 <Scope_Main_GetAddress>:
 cb4:	2000      	movs	r0, #0
 cb6:	4770      	bx	lr

Disassembly of section .dinit%21:

00000cb8 <.dinit>:
     cb8:	20007e24 	.word	0x20007e24
     cbc:	0000001c 	.word	0x0000001c
     cc0:	00000000 	.word	0x00000000
     cc4:	20000000 	.word	0x20000000
     cc8:	00000008 	.word	0x00000008
     ccc:	00000000 	.word	0x00000000
     cd0:	20000008 	.word	0x20000008
     cd4:	000000c0 	.word	0x000000c0
     cd8:	00000000 	.word	0x00000000
     cdc:	200073ac 	.word	0x200073ac
     ce0:	0000002c 	.word	0x0000002c
     ce4:	00000001 	.word	0x00000001
     ce8:	04830002 	.word	0x04830002
     cec:	04410c9b 	.word	0x04410c9b
     cf0:	2180d503 	.word	0x2180d503
     cf4:	1acb01c9 	.word	0x1acb01c9
     cf8:	099bb29b 	.word	0x099bb29b
     cfc:	4904005b 	.word	0x4904005b
     d00:	b2125e58 	.word	0xb2125e58
     d04:	db002a00 	.word	0xdb002a00
     d08:	42404770 	.word	0x42404770
     d0c:	e7fbb200 	.word	0xe7fbb200
     d10:	000021f8 	.word	0x000021f8
     d14:	20007378 	.word	0x20007378
     d18:	00000034 	.word	0x00000034
     d1c:	00000001 	.word	0x00000001
     d20:	01db2380 	.word	0x01db2380
     d24:	4460469c 	.word	0x4460469c
     d28:	049ab283 	.word	0x049ab283
     d2c:	04590c92 	.word	0x04590c92
     d30:	4661d502 	.word	0x4661d502
     d34:	b2921a8a 	.word	0xb2921a8a
     d38:	00520992 	.word	0x00520992
     d3c:	5e504904 	.word	0x5e504904
     d40:	2b00b21b 	.word	0x2b00b21b
     d44:	4770db00 	.word	0x4770db00
     d48:	b2004240 	.word	0xb2004240
     d4c:	46c0e7fb 	.word	0x46c0e7fb
     d50:	000021f8 	.word	0x000021f8
     d54:	20007400 	.word	0x20007400
     d58:	00000020 	.word	0x00000020
     d5c:	00000001 	.word	0x00000001
     d60:	0004b570 	.word	0x0004b570
     d64:	00288805 	.word	0x00288805
     d68:	47984b03 	.word	0x47984b03
     d6c:	00288060 	.word	0x00288060
     d70:	47984b02 	.word	0x47984b02
     d74:	bd7080a0 	.word	0xbd7080a0
     d78:	200073ad 	.word	0x200073ad
     d7c:	20007379 	.word	0x20007379
     d80:	200073d8 	.word	0x200073d8
     d84:	00000028 	.word	0x00000028
     d88:	00000001 	.word	0x00000001
     d8c:	2300b510 	.word	0x2300b510
     d90:	800a5ec2 	.word	0x800a5ec2
     d94:	5ec42302 	.word	0x5ec42302
     d98:	43634b05 	.word	0x43634b05
     d9c:	2400139b 	.word	0x2400139b
     da0:	1a1b5f00 	.word	0x1a1b5f00
     da4:	804b105b 	.word	0x804b105b
     da8:	425b18d3 	.word	0x425b18d3
     dac:	bd10808b 	.word	0xbd10808b
     db0:	00006eda 	.word	0x00006eda
     db4:	20007340 	.word	0x20007340
     db8:	00000038 	.word	0x00000038
     dbc:	00000001 	.word	0x00000001
     dc0:	2300b570 	.word	0x2300b570
     dc4:	25045ecc 	.word	0x25045ecc
     dc8:	435c5f43 	.word	0x435c5f43
     dcc:	5ecd2302 	.word	0x5ecd2302
     dd0:	5f832602 	.word	0x5f832602
     dd4:	1ae3436b 	.word	0x1ae3436b
     dd8:	8013139b 	.word	0x8013139b
     ddc:	5ecc2300 	.word	0x5ecc2300
     de0:	5f432502 	.word	0x5f432502
     de4:	2302435c 	.word	0x2302435c
     de8:	23045ec9 	.word	0x23045ec9
     dec:	434b5ec3 	.word	0x434b5ec3
     df0:	139b191b 	.word	0x139b191b
     df4:	bd708053 	.word	0xbd708053
     df8:	200072d0 	.word	0x200072d0
     dfc:	00000070 	.word	0x00000070
     e00:	00000001 	.word	0x00000001
     e04:	4b19b530 	.word	0x4b19b530
     e08:	5e992200 	.word	0x5e992200
     e0c:	5e9a2202 	.word	0x5e9a2202
     e10:	dc224291 	.word	0xdc224291
     e14:	20044b15 	.word	0x20044b15
     e18:	00085e1b 	.word	0x00085e1b
     e1c:	dd004299 	.word	0xdd004299
     e20:	00140018 	.word	0x00140018
     e24:	da1f4291 	.word	0xda1f4291
     e28:	da00429c 	.word	0xda00429c
     e2c:	1824001c 	.word	0x1824001c
     e30:	480f1064 	.word	0x480f1064
     e34:	10491b09 	.word	0x10491b09
     e38:	00ad2596 	.word	0x00ad2596
     e3c:	446146ac 	.word	0x446146ac
     e40:	6001b289 	.word	0x6001b289
     e44:	10521b12 	.word	0x10521b12
     e48:	b2924462 	.word	0xb2924462
     e4c:	1b1b6042 	.word	0x1b1b6042
     e50:	4463105b 	.word	0x4463105b
     e54:	6083b29b 	.word	0x6083b29b
     e58:	4b04bd30 	.word	0x4b04bd30
     e5c:	5e1b2004 	.word	0x5e1b2004
     e60:	429a0010 	.word	0x429a0010
     e64:	0018dd00 	.word	0x0018dd00
     e68:	e7dd000c 	.word	0xe7dd000c
     e6c:	20007dfc 	.word	0x20007dfc
     e70:	20007e14 	.word	0x20007e14
     e74:	20007000 	.word	0x20007000
     e78:	000002d0 	.word	0x000002d0
     e7c:	00000001 	.word	0x00000001
     e80:	4b95b570 	.word	0x4b95b570
     e84:	4a95881b 	.word	0x4a95881b
     e88:	d8344293 	.word	0xd8344293
     e8c:	4a942100 	.word	0x4a942100
     e90:	22807011 	.word	0x22807011
     e94:	42930112 	.word	0x42930112
     e98:	1ad2d834 	.word	0x1ad2d834
     e9c:	00db23e1 	.word	0x00db23e1
     ea0:	12db4353 	.word	0x12db4353
     ea4:	80134a8f 	.word	0x80134a8f
     ea8:	00db23e1 	.word	0x00db23e1
     eac:	88124a8d 	.word	0x88124a8d
     eb0:	d902429a 	.word	0xd902429a
     eb4:	4b8b001a 	.word	0x4b8b001a
     eb8:	4b89801a 	.word	0x4b89801a
     ebc:	4b8a781c 	.word	0x4b8a781c
     ec0:	42a3781b 	.word	0x42a3781b
     ec4:	4b89d028 	.word	0x4b89d028
     ec8:	2b00781b 	.word	0x2b00781b
     ecc:	2201d124 	.word	0x2201d124
     ed0:	701a4b87 	.word	0x701a4b87
     ed4:	22004b87 	.word	0x22004b87
     ed8:	2b005e9b 	.word	0x2b005e9b
     edc:	e0f2d000 	.word	0xe0f2d000
     ee0:	70134a83 	.word	0x70134a83
     ee4:	70144a80 	.word	0x70144a80
     ee8:	80134a83 	.word	0x80134a83
     eec:	781b4b83 	.word	0x781b4b83
     ef0:	d11a2b00 	.word	0xd11a2b00
     ef4:	4a82e06e 	.word	0x4a82e06e
     ef8:	d9ca4293 	.word	0xd9ca4293
     efc:	4a782108 	.word	0x4a782108
     f00:	e7c67011 	.word	0xe7c67011
     f04:	46944a7f 	.word	0x46944a7f
     f08:	22e14463 	.word	0x22e14463
     f0c:	435300d2 	.word	0x435300d2
     f10:	4a7412db 	.word	0x4a7412db
     f14:	e7c78013 	.word	0xe7c78013
     f18:	781b4b78 	.word	0x781b4b78
     f1c:	d0542b00 	.word	0xd0542b00
     f20:	781b4b73 	.word	0x781b4b73
     f24:	d0002b00 	.word	0xd0002b00
     f28:	4b6ee0d2 	.word	0x4b6ee0d2
     f2c:	5e182000 	.word	0x5e182000
     f30:	80184b75 	.word	0x80184b75
     f34:	21e10380 	.word	0x21e10380
     f38:	4b7400c9 	.word	0x4b7400c9
     f3c:	4b744798 	.word	0x4b744798
     f40:	4b738018 	.word	0x4b738018
     f44:	0019881b 	.word	0x0019881b
     f48:	20004a6a 	.word	0x20004a6a
     f4c:	42835e10 	.word	0x42835e10
     f50:	4a70dd06 	.word	0x4a70dd06
     f54:	2a017812 	.word	0x2a017812
     f58:	3201d045 	.word	0x3201d045
     f5c:	7002486d 	.word	0x7002486d
     f60:	20004a64 	.word	0x20004a64
     f64:	428a5e12 	.word	0x428a5e12
     f68:	486bdd06 	.word	0x486bdd06
     f6c:	28017800 	.word	0x28017800
     f70:	3001d048 	.word	0x3001d048
     f74:	70184b68 	.word	0x70184b68
     f78:	781b4b5c 	.word	0x781b4b5c
     f7c:	d0502b00 	.word	0xd0502b00
     f80:	23004a66 	.word	0x23004a66
     f84:	80538013 	.word	0x80538013
     f88:	49658093 	.word	0x49658093
     f8c:	00d22296 	.word	0x00d22296
     f90:	604a600a 	.word	0x604a600a
     f94:	4963608a 	.word	0x4963608a
     f98:	674a670a 	.word	0x674a670a
     f9c:	4a56678a 	.word	0x4a56678a
     fa0:	80538013 	.word	0x80538013
     fa4:	01c92180 	.word	0x01c92180
     fa8:	4a5f8091 	.word	0x4a5f8091
     fac:	80538013 	.word	0x80538013
     fb0:	80134a5e 	.word	0x80134a5e
     fb4:	4a5e8053 	.word	0x4a5e8053
     fb8:	4a4e8013 	.word	0x4a4e8013
     fbc:	4b4a8013 	.word	0x4b4a8013
     fc0:	4b4b701c 	.word	0x4b4b701c
     fc4:	701a2200 	.word	0x701a2200
     fc8:	4b4abd70 	.word	0x4b4abd70
     fcc:	5e9b2200 	.word	0x5e9b2200
     fd0:	d1b62b00 	.word	0xd1b62b00
     fd4:	4b452201 	.word	0x4b452201
     fd8:	4b4d701a 	.word	0x4b4d701a
     fdc:	1e19881b 	.word	0x1e19881b
     fe0:	2000ddce 	.word	0x2000ddce
     fe4:	2500e7b5 	.word	0x2500e7b5
     fe8:	70154a4a 	.word	0x70154a4a
     fec:	88124a51 	.word	0x88124a51
     ff0:	b2001810 	.word	0xb2001810
     ff4:	dc024288 	.word	0xdc024288
     ff8:	80184b3e 	.word	0x80184b3e
     ffc:	4a3de7bc 	.word	0x4a3de7bc
    1000:	e7ad8013 	.word	0xe7ad8013
    1004:	48442500 	.word	0x48442500
    1008:	484b7005 	.word	0x484b7005
    100c:	1a128800 	.word	0x1a128800
    1010:	428ab212 	.word	0x428ab212
    1014:	4b37db02 	.word	0x4b37db02
    1018:	e7ad801a 	.word	0xe7ad801a
    101c:	80134a35 	.word	0x80134a35
    1020:	4c34e7aa 	.word	0x4c34e7aa
    1024:	5ea32200 	.word	0x5ea32200
    1028:	018020e1 	.word	0x018020e1
    102c:	49434358 	.word	0x49434358
    1030:	47984b36 	.word	0x47984b36
    1034:	4a3eb283 	.word	0x4a3eb283
    1038:	482f8013 	.word	0x482f8013
    103c:	189b8802 	.word	0x189b8802
    1040:	4b3f8003 	.word	0x4b3f8003
    1044:	23004798 	.word	0x23004798
    1048:	23965ee2 	.word	0x23965ee2
    104c:	4353005b 	.word	0x4353005b
    1050:	2b67131b 	.word	0x2b67131b
    1054:	4b34d823 	.word	0x4b34d823
    1058:	801a2200 	.word	0x801a2200
    105c:	805a3268 	.word	0x805a3268
    1060:	00224c32 	.word	0x00224c32
    1064:	48244930 	.word	0x48244930
    1068:	47984b36 	.word	0x47984b36
    106c:	0020492b 	.word	0x0020492b
    1070:	47984b35 	.word	0x47984b35
    1074:	47984b35 	.word	0x47984b35
    1078:	781b4b1b 	.word	0x781b4b1b
    107c:	d0132b08 	.word	0xd0132b08
    1080:	680b4927 	.word	0x680b4927
    1084:	0a1b021b 	.word	0x0a1b021b
    1088:	67134a26 	.word	0x67134a26
    108c:	021b688b 	.word	0x021b688b
    1090:	67530a1b 	.word	0x67530a1b
    1094:	021b684b 	.word	0x021b684b
    1098:	67930a1b 	.word	0x67930a1b
    109c:	4a22e794 	.word	0x4a22e794
    10a0:	80112100 	.word	0x80112100
    10a4:	e7db8053 	.word	0xe7db8053
    10a8:	680b491d 	.word	0x680b491d
    10ac:	0a1b021b 	.word	0x0a1b021b
    10b0:	67134a1c 	.word	0x67134a1c
    10b4:	021b684b 	.word	0x021b684b
    10b8:	67530a1b 	.word	0x67530a1b
    10bc:	021b688b 	.word	0x021b688b
    10c0:	67930a1b 	.word	0x67930a1b
    10c4:	4b0de780 	.word	0x4b0de780
    10c8:	2b00781b 	.word	0x2b00781b
    10cc:	e738d100 	.word	0xe738d100
    10d0:	4b0f2200 	.word	0x4b0f2200
    10d4:	e734801a 	.word	0xe734801a
    10d8:	200000da 	.word	0x200000da
    10dc:	0000076a 	.word	0x0000076a
    10e0:	200000c8 	.word	0x200000c8
    10e4:	20007ffc 	.word	0x20007ffc
    10e8:	20007eb2 	.word	0x20007eb2
    10ec:	200000d6 	.word	0x200000d6
    10f0:	200000d0 	.word	0x200000d0
    10f4:	200000d8 	.word	0x200000d8
    10f8:	20007df0 	.word	0x20007df0
    10fc:	200000d1 	.word	0x200000d1
    1100:	00000896 	.word	0x00000896
    1104:	fffff800 	.word	0xfffff800
    1108:	200000d2 	.word	0x200000d2
    110c:	00003341 	.word	0x00003341
    1110:	200000ce 	.word	0x200000ce
    1114:	20007fff 	.word	0x20007fff
    1118:	20007ffe 	.word	0x20007ffe
    111c:	20007dfc 	.word	0x20007dfc
    1120:	20007e14 	.word	0x20007e14
    1124:	42002400 	.word	0x42002400
    1128:	20007de0 	.word	0x20007de0
    112c:	20007de8 	.word	0x20007de8
    1130:	200000ca 	.word	0x200000ca
    1134:	200000cc 	.word	0x200000cc
    1138:	200000d4 	.word	0x200000d4
    113c:	00124f80 	.word	0x00124f80
    1140:	20007401 	.word	0x20007401
    1144:	20007341 	.word	0x20007341
    1148:	200073d9 	.word	0x200073d9
    114c:	200072d1 	.word	0x200072d1
    1150:	20007fff 	.word	0x20007fff
    1154:	00000001 	.word	0x00000001
    1158:	00000000 	.word	0x00000000
    115c:	20007ffe 	.word	0x20007ffe
    1160:	00000001 	.word	0x00000001
    1164:	00000000 	.word	0x00000000
    1168:	20007e14 	.word	0x20007e14
    116c:	0000000c 	.word	0x0000000c
    1170:	00000000 	.word	0x00000000
    1174:	20007eb3 	.word	0x20007eb3
    1178:	00000001 	.word	0x00000001
    117c:	00000000 	.word	0x00000000
    1180:	20007dfc 	.word	0x20007dfc
    1184:	00000006 	.word	0x00000006
    1188:	00000000 	.word	0x00000000
    118c:	20007de8 	.word	0x20007de8
    1190:	00000004 	.word	0x00000004
    1194:	00000000 	.word	0x00000000
    1198:	20007de0 	.word	0x20007de0
    119c:	00000004 	.word	0x00000004
    11a0:	00000000 	.word	0x00000000
    11a4:	20007df0 	.word	0x20007df0
    11a8:	00000006 	.word	0x00000006
    11ac:	00000000 	.word	0x00000000
    11b0:	200000c8 	.word	0x200000c8
    11b4:	00000012 	.word	0x00000012
    11b8:	00000000 	.word	0x00000000
    11bc:	20007eb2 	.word	0x20007eb2
    11c0:	00000001 	.word	0x00000001
    11c4:	00000000 	.word	0x00000000
    11c8:	20007ffc 	.word	0x20007ffc
    11cc:	00000002 	.word	0x00000002
    11d0:	00000000 	.word	0x00000000
    11d4:	20007eb1 	.word	0x20007eb1
    11d8:	00000001 	.word	0x00000001
    11dc:	00000000 	.word	0x00000000
    11e0:	200000da 	.word	0x200000da
    11e4:	00000002 	.word	0x00000002
    11e8:	00000000 	.word	0x00000000
    11ec:	20007dd8 	.word	0x20007dd8
    11f0:	00000004 	.word	0x00000004
    11f4:	00000001 	.word	0x00000001
    11f8:	200000dc 	.word	0x200000dc
    11fc:	20007eb4 	.word	0x20007eb4
    1200:	00000148 	.word	0x00000148
    1204:	00000000 	.word	0x00000000
    1208:	200000dc 	.word	0x200000dc
    120c:	00000030 	.word	0x00000030
    1210:	00000000 	.word	0x00000000
    1214:	20007e08 	.word	0x20007e08
    1218:	00000008 	.word	0x00000008
    121c:	00000000 	.word	0x00000000
    1220:	20007e44 	.word	0x20007e44
    1224:	0000006c 	.word	0x0000006c
    1228:	00000000 	.word	0x00000000
    122c:	20000110 	.word	0x20000110
    1230:	00000078 	.word	0x00000078
    1234:	00000000 	.word	0x00000000
    1238:	20000188 	.word	0x20000188
    123c:	00002000 	.word	0x00002000
    1240:	00000000 	.word	0x00000000
    1244:	20002188 	.word	0x20002188
    1248:	00000428 	.word	0x00000428
    124c:	00000001 	.word	0x00000001
    1250:	00000000 	.word	0x00000000
    1254:	20002474 	.word	0x20002474
    1258:	200024dc 	.word	0x200024dc
    125c:	20002544 	.word	0x20002544
	...
    12f8:	00000001 	.word	0x00000001
    12fc:	00000000 	.word	0x00000000
    1300:	abcd330e 	.word	0xabcd330e
    1304:	e66d1234 	.word	0xe66d1234
    1308:	0005deec 	.word	0x0005deec
    130c:	0000000b 	.word	0x0000000b
	...
    1680:	22222222 	.word	0x22222222
    1684:	22222222 	.word	0x22222222

Disassembly of section .text%22:

00001688 <sendSvNotAvailable>:
    1688:	b510      	push	{r4, lr}
    168a:	2302      	movs	r3, #2
    168c:	7203      	strb	r3, [r0, #8]
    168e:	331f      	adds	r3, #31
    1690:	68c2      	ldr	r2, [r0, #12]
    1692:	7053      	strb	r3, [r2, #1]
    1694:	6843      	ldr	r3, [r0, #4]
    1696:	4798      	blx	r3

00001698 <.LVL1>:
    1698:	bd10      	pop	{r4, pc}

0000169a <setTargetState>:
    169a:	b510      	push	{r4, lr}
    169c:	68c3      	ldr	r3, [r0, #12]
    169e:	785b      	ldrb	r3, [r3, #1]
    16a0:	2b05      	cmp	r3, #5
    16a2:	d82c      	bhi.n	16fe <.Ldebug_abbrev0+0x37>
    16a4:	009a      	lsls	r2, r3, #2
    16a6:	4917      	ldr	r1, [pc, #92]	; (1704 <.Ldebug_abbrev0+0x3d>)
    16a8:	588a      	ldr	r2, [r1, r2]
    16aa:	4697      	mov	pc, r2
    16ac:	4a16      	ldr	r2, [pc, #88]	; (1708 <.Ldebug_abbrev0+0x41>)
    16ae:	6812      	ldr	r2, [r2, #0]
    16b0:	2100      	movs	r1, #0
    16b2:	7311      	strb	r1, [r2, #12]
    16b4:	68c2      	ldr	r2, [r0, #12]
    16b6:	7053      	strb	r3, [r2, #1]
    16b8:	2302      	movs	r3, #2
    16ba:	7203      	strb	r3, [r0, #8]
    16bc:	6843      	ldr	r3, [r0, #4]
    16be:	4798      	blx	r3

000016c0 <.LVL7>:
    16c0:	bd10      	pop	{r4, pc}
    16c2:	4b11      	ldr	r3, [pc, #68]	; (1708 <.Ldebug_abbrev0+0x41>)
    16c4:	681b      	ldr	r3, [r3, #0]
    16c6:	2201      	movs	r2, #1
    16c8:	731a      	strb	r2, [r3, #12]
    16ca:	2300      	movs	r3, #0
    16cc:	e7f2      	b.n	16b4 <setTargetState+0x1a>
    16ce:	4b0e      	ldr	r3, [pc, #56]	; (1708 <.Ldebug_abbrev0+0x41>)
    16d0:	681b      	ldr	r3, [r3, #0]
    16d2:	2202      	movs	r2, #2
    16d4:	731a      	strb	r2, [r3, #12]
    16d6:	2300      	movs	r3, #0
    16d8:	e7ec      	b.n	16b4 <setTargetState+0x1a>
    16da:	4b0b      	ldr	r3, [pc, #44]	; (1708 <.Ldebug_abbrev0+0x41>)
    16dc:	681b      	ldr	r3, [r3, #0]
    16de:	2203      	movs	r2, #3
    16e0:	731a      	strb	r2, [r3, #12]
    16e2:	2300      	movs	r3, #0
    16e4:	e7e6      	b.n	16b4 <setTargetState+0x1a>
    16e6:	4b08      	ldr	r3, [pc, #32]	; (1708 <.Ldebug_abbrev0+0x41>)
    16e8:	681b      	ldr	r3, [r3, #0]
    16ea:	2204      	movs	r2, #4
    16ec:	731a      	strb	r2, [r3, #12]
    16ee:	2300      	movs	r3, #0
    16f0:	e7e0      	b.n	16b4 <setTargetState+0x1a>
    16f2:	4b05      	ldr	r3, [pc, #20]	; (1708 <.Ldebug_abbrev0+0x41>)
    16f4:	681b      	ldr	r3, [r3, #0]
    16f6:	2205      	movs	r2, #5
    16f8:	731a      	strb	r2, [r3, #12]
    16fa:	2300      	movs	r3, #0
    16fc:	e7da      	b.n	16b4 <setTargetState+0x1a>
    16fe:	2322      	movs	r3, #34	; 0x22
    1700:	e7d8      	b.n	16b4 <setTargetState+0x1a>
    1702:	46c0      	nop			; (mov r8, r8)
    1704:	000035bc 	.word	0x000035bc
    1708:	20007dd8 	.word	0x20007dd8

0000170c <getTargetState>:
    170c:	b510      	push	{r4, lr}
    170e:	2300      	movs	r3, #0
    1710:	68c2      	ldr	r2, [r0, #12]
    1712:	7053      	strb	r3, [r2, #1]
    1714:	4b04      	ldr	r3, [pc, #16]	; (1728 <.LVL10+0x2>)
    1716:	681b      	ldr	r3, [r3, #0]
    1718:	7b1b      	ldrb	r3, [r3, #12]
    171a:	68c2      	ldr	r2, [r0, #12]
    171c:	7093      	strb	r3, [r2, #2]
    171e:	2303      	movs	r3, #3
    1720:	7203      	strb	r3, [r0, #8]
    1722:	6843      	ldr	r3, [r0, #4]
    1724:	4798      	blx	r3

00001726 <.LVL10>:
    1726:	bd10      	pop	{r4, pc}
    1728:	20007dd8 	.word	0x20007dd8

0000172c <getBlockAddress>:
    172c:	b530      	push	{r4, r5, lr}
    172e:	2800      	cmp	r0, #0
    1730:	d012      	beq.n	1758 <.LLST14+0x1b>
    1732:	8804      	ldrh	r4, [r0, #0]
    1734:	42a1      	cmp	r1, r4
    1736:	d013      	beq.n	1760 <.LLST14+0x23>
    1738:	2300      	movs	r3, #0
    173a:	2c00      	cmp	r4, #0
    173c:	d008      	beq.n	1750 <.LLST14+0x13>
    173e:	3301      	adds	r3, #1
    1740:	b29b      	uxth	r3, r3
    1742:	00dc      	lsls	r4, r3, #3
    1744:	1904      	adds	r4, r0, r4
    1746:	8825      	ldrh	r5, [r4, #0]
    1748:	428d      	cmp	r5, r1
    174a:	d00a      	beq.n	1762 <.LLST14+0x25>
    174c:	2d00      	cmp	r5, #0
    174e:	d1f6      	bne.n	173e <.LLST14+0x1>
    1750:	2340      	movs	r3, #64	; 0x40
    1752:	7013      	strb	r3, [r2, #0]
    1754:	2000      	movs	r0, #0
    1756:	e009      	b.n	176c <.LLST14+0x2f>
    1758:	2343      	movs	r3, #67	; 0x43
    175a:	7013      	strb	r3, [r2, #0]
    175c:	2000      	movs	r0, #0
    175e:	e005      	b.n	176c <.LLST14+0x2f>
    1760:	0004      	movs	r4, r0
    1762:	2900      	cmp	r1, #0
    1764:	d0f4      	beq.n	1750 <.LLST14+0x13>
    1766:	6860      	ldr	r0, [r4, #4]
    1768:	2300      	movs	r3, #0
    176a:	7013      	strb	r3, [r2, #0]
    176c:	bd30      	pop	{r4, r5, pc}

0000176e <sendError>:
    176e:	b510      	push	{r4, lr}
    1770:	2302      	movs	r3, #2
    1772:	7203      	strb	r3, [r0, #8]
    1774:	68c3      	ldr	r3, [r0, #12]
    1776:	7059      	strb	r1, [r3, #1]
    1778:	6843      	ldr	r3, [r0, #4]
    177a:	4798      	blx	r3

0000177c <.LVL25>:
    177c:	bd10      	pop	{r4, pc}

0000177e <loadParameter>:
    177e:	b5f0      	push	{r4, r5, r6, r7, lr}
    1780:	b083      	sub	sp, #12
    1782:	0004      	movs	r4, r0
    1784:	68c2      	ldr	r2, [r0, #12]
    1786:	4b29      	ldr	r3, [pc, #164]	; (182c <.LVL48+0x2>)
    1788:	681b      	ldr	r3, [r3, #0]
    178a:	6818      	ldr	r0, [r3, #0]
    178c:	466b      	mov	r3, sp
    178e:	1ddd      	adds	r5, r3, #7
    1790:	7893      	ldrb	r3, [r2, #2]
    1792:	021b      	lsls	r3, r3, #8
    1794:	7851      	ldrb	r1, [r2, #1]
    1796:	18c9      	adds	r1, r1, r3
    1798:	b289      	uxth	r1, r1
    179a:	002a      	movs	r2, r5
    179c:	f7ff ffc6 	bl	172c <getBlockAddress>

000017a0 <.LVL30>:
    17a0:	7829      	ldrb	r1, [r5, #0]
    17a2:	2900      	cmp	r1, #0
    17a4:	d126      	bne.n	17f4 <.LVL37+0x4>
    17a6:	4b21      	ldr	r3, [pc, #132]	; (182c <.LVL48+0x2>)
    17a8:	6819      	ldr	r1, [r3, #0]
    17aa:	684b      	ldr	r3, [r1, #4]
    17ac:	2b00      	cmp	r3, #0
    17ae:	d025      	beq.n	17fc <.LVL41+0x2>
    17b0:	8807      	ldrh	r7, [r0, #0]
    17b2:	684b      	ldr	r3, [r1, #4]
    17b4:	881b      	ldrh	r3, [r3, #0]
    17b6:	42bb      	cmp	r3, r7
    17b8:	d025      	beq.n	1806 <.LVL44+0x2>
    17ba:	684b      	ldr	r3, [r1, #4]
    17bc:	881b      	ldrh	r3, [r3, #0]
    17be:	2b00      	cmp	r3, #0
    17c0:	d023      	beq.n	180a <.LLST16+0x1>
    17c2:	2200      	movs	r2, #0
    17c4:	3201      	adds	r2, #1
    17c6:	b292      	uxth	r2, r2
    17c8:	684d      	ldr	r5, [r1, #4]
    17ca:	0053      	lsls	r3, r2, #1
    17cc:	189b      	adds	r3, r3, r2
    17ce:	00db      	lsls	r3, r3, #3
    17d0:	001e      	movs	r6, r3
    17d2:	5aed      	ldrh	r5, [r5, r3]
    17d4:	42bd      	cmp	r5, r7
    17d6:	d003      	beq.n	17e0 <.LLST15+0x5>
    17d8:	684d      	ldr	r5, [r1, #4]
    17da:	5aeb      	ldrh	r3, [r5, r3]
    17dc:	2b00      	cmp	r3, #0
    17de:	d1f1      	bne.n	17c4 <.LVL30+0x24>
    17e0:	684b      	ldr	r3, [r1, #4]
    17e2:	5b9b      	ldrh	r3, [r3, r6]
    17e4:	2b00      	cmp	r3, #0
    17e6:	d112      	bne.n	180e <.LLST16+0x5>
    17e8:	2141      	movs	r1, #65	; 0x41
    17ea:	0020      	movs	r0, r4
    17ec:	f7ff ffbf 	bl	176e <sendError>

000017f0 <.LVL37>:
    17f0:	b003      	add	sp, #12
    17f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    17f4:	0020      	movs	r0, r4
    17f6:	f7ff ffba 	bl	176e <sendError>

000017fa <.LVL41>:
    17fa:	e7f9      	b.n	17f0 <.LVL37>
    17fc:	2144      	movs	r1, #68	; 0x44
    17fe:	0020      	movs	r0, r4
    1800:	f7ff ffb5 	bl	176e <sendError>

00001804 <.LVL44>:
    1804:	e7f4      	b.n	17f0 <.LVL37>
    1806:	2600      	movs	r6, #0
    1808:	e7ea      	b.n	17e0 <.LLST15+0x5>
    180a:	2600      	movs	r6, #0
    180c:	e7e8      	b.n	17e0 <.LLST15+0x5>
    180e:	684b      	ldr	r3, [r1, #4]
    1810:	68e2      	ldr	r2, [r4, #12]
    1812:	1c91      	adds	r1, r2, #2
    1814:	199e      	adds	r6, r3, r6
    1816:	68f3      	ldr	r3, [r6, #12]
    1818:	4798      	blx	r3
    181a:	3002      	adds	r0, #2
    181c:	7220      	strb	r0, [r4, #8]
    181e:	2300      	movs	r3, #0
    1820:	68e2      	ldr	r2, [r4, #12]
    1822:	7053      	strb	r3, [r2, #1]
    1824:	6863      	ldr	r3, [r4, #4]
    1826:	0020      	movs	r0, r4
    1828:	4798      	blx	r3

0000182a <.LVL48>:
    182a:	e7e1      	b.n	17f0 <.LVL37>
    182c:	20007dd8 	.word	0x20007dd8

00001830 <saveParameter>:
    1830:	b5f0      	push	{r4, r5, r6, r7, lr}
    1832:	b083      	sub	sp, #12
    1834:	0004      	movs	r4, r0
    1836:	68c2      	ldr	r2, [r0, #12]
    1838:	7893      	ldrb	r3, [r2, #2]
    183a:	021b      	lsls	r3, r3, #8
    183c:	7856      	ldrb	r6, [r2, #1]
    183e:	18f6      	adds	r6, r6, r3
    1840:	b2b6      	uxth	r6, r6
    1842:	4b44      	ldr	r3, [pc, #272]	; (1954 <.LLST20+0x3>)
    1844:	681b      	ldr	r3, [r3, #0]
    1846:	6818      	ldr	r0, [r3, #0]
    1848:	466b      	mov	r3, sp
    184a:	1ddd      	adds	r5, r3, #7
    184c:	002a      	movs	r2, r5
    184e:	0031      	movs	r1, r6
    1850:	f7ff ff6c 	bl	172c <getBlockAddress>

00001854 <.LVL52>:
    1854:	7829      	ldrb	r1, [r5, #0]
    1856:	2900      	cmp	r1, #0
    1858:	d140      	bne.n	18dc <.LVL64+0x2>
    185a:	4b3e      	ldr	r3, [pc, #248]	; (1954 <.LLST20+0x3>)
    185c:	6819      	ldr	r1, [r3, #0]
    185e:	688b      	ldr	r3, [r1, #8]
    1860:	2b00      	cmp	r3, #0
    1862:	d017      	beq.n	1894 <.LVL52+0x40>
    1864:	688b      	ldr	r3, [r1, #8]
    1866:	881b      	ldrh	r3, [r3, #0]
    1868:	42b3      	cmp	r3, r6
    186a:	d03c      	beq.n	18e6 <.LLST18>
    186c:	688b      	ldr	r3, [r1, #8]
    186e:	881b      	ldrh	r3, [r3, #0]
    1870:	2b00      	cmp	r3, #0
    1872:	d03a      	beq.n	18ea <.LLST18+0x4>
    1874:	2300      	movs	r3, #0
    1876:	3301      	adds	r3, #1
    1878:	b29b      	uxth	r3, r3
    187a:	688a      	ldr	r2, [r1, #8]
    187c:	00dd      	lsls	r5, r3, #3
    187e:	5b52      	ldrh	r2, [r2, r5]
    1880:	42b2      	cmp	r2, r6
    1882:	d003      	beq.n	188c <.LVL52+0x38>
    1884:	688a      	ldr	r2, [r1, #8]
    1886:	5b52      	ldrh	r2, [r2, r5]
    1888:	2a00      	cmp	r2, #0
    188a:	d1f4      	bne.n	1876 <.LVL52+0x22>
    188c:	688b      	ldr	r3, [r1, #8]
    188e:	5b5b      	ldrh	r3, [r3, r5]
    1890:	2b00      	cmp	r3, #0
    1892:	d12c      	bne.n	18ee <.LLST18+0x8>
    1894:	684b      	ldr	r3, [r1, #4]
    1896:	2b00      	cmp	r3, #0
    1898:	d039      	beq.n	190e <.LVL72+0x2>
    189a:	8807      	ldrh	r7, [r0, #0]
    189c:	684b      	ldr	r3, [r1, #4]
    189e:	881b      	ldrh	r3, [r3, #0]
    18a0:	42bb      	cmp	r3, r7
    18a2:	d039      	beq.n	1918 <.LVL75+0x2>
    18a4:	684b      	ldr	r3, [r1, #4]
    18a6:	881b      	ldrh	r3, [r3, #0]
    18a8:	2b00      	cmp	r3, #0
    18aa:	d037      	beq.n	191c <.LVL75+0x6>
    18ac:	2200      	movs	r2, #0
    18ae:	3201      	adds	r2, #1
    18b0:	b292      	uxth	r2, r2
    18b2:	684d      	ldr	r5, [r1, #4]
    18b4:	0053      	lsls	r3, r2, #1
    18b6:	189b      	adds	r3, r3, r2
    18b8:	00db      	lsls	r3, r3, #3
    18ba:	001e      	movs	r6, r3
    18bc:	5aed      	ldrh	r5, [r5, r3]
    18be:	42bd      	cmp	r5, r7
    18c0:	d003      	beq.n	18ca <.LLST17+0x25>
    18c2:	684d      	ldr	r5, [r1, #4]
    18c4:	5aeb      	ldrh	r3, [r5, r3]
    18c6:	2b00      	cmp	r3, #0
    18c8:	d1f1      	bne.n	18ae <.LLST17+0x9>
    18ca:	684b      	ldr	r3, [r1, #4]
    18cc:	5b9b      	ldrh	r3, [r3, r6]
    18ce:	2b00      	cmp	r3, #0
    18d0:	d126      	bne.n	1920 <.LVL75+0xa>
    18d2:	2141      	movs	r1, #65	; 0x41
    18d4:	0020      	movs	r0, r4
    18d6:	f7ff ff4a 	bl	176e <sendError>

000018da <.LVL64>:
    18da:	e002      	b.n	18e2 <.LVL67>
    18dc:	0020      	movs	r0, r4
    18de:	f7ff ff46 	bl	176e <sendError>

000018e2 <.LVL67>:
    18e2:	b003      	add	sp, #12
    18e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    18e6:	2500      	movs	r5, #0
    18e8:	e7d0      	b.n	188c <.LVL52+0x38>
    18ea:	2500      	movs	r5, #0
    18ec:	e7ce      	b.n	188c <.LVL52+0x38>
    18ee:	688b      	ldr	r3, [r1, #8]
    18f0:	7a22      	ldrb	r2, [r4, #8]
    18f2:	3a03      	subs	r2, #3
    18f4:	b2d2      	uxtb	r2, r2
    18f6:	68e1      	ldr	r1, [r4, #12]
    18f8:	3103      	adds	r1, #3
    18fa:	195d      	adds	r5, r3, r5
    18fc:	686b      	ldr	r3, [r5, #4]
    18fe:	4798      	blx	r3
    1900:	2800      	cmp	r0, #0
    1902:	d0ee      	beq.n	18e2 <.LVL67>
    1904:	2142      	movs	r1, #66	; 0x42
    1906:	0020      	movs	r0, r4
    1908:	f7ff ff31 	bl	176e <sendError>

0000190c <.LVL72>:
    190c:	e7e9      	b.n	18e2 <.LVL67>
    190e:	2144      	movs	r1, #68	; 0x44
    1910:	0020      	movs	r0, r4
    1912:	f7ff ff2c 	bl	176e <sendError>

00001916 <.LVL75>:
    1916:	e7e4      	b.n	18e2 <.LVL67>
    1918:	2600      	movs	r6, #0
    191a:	e7d6      	b.n	18ca <.LLST17+0x25>
    191c:	2600      	movs	r6, #0
    191e:	e7d4      	b.n	18ca <.LLST17+0x25>
    1920:	684b      	ldr	r3, [r1, #4]
    1922:	7a22      	ldrb	r2, [r4, #8]
    1924:	3a03      	subs	r2, #3
    1926:	b2d2      	uxtb	r2, r2
    1928:	68e1      	ldr	r1, [r4, #12]
    192a:	3103      	adds	r1, #3
    192c:	199e      	adds	r6, r3, r6
    192e:	6933      	ldr	r3, [r6, #16]
    1930:	4798      	blx	r3
    1932:	2800      	cmp	r0, #0
    1934:	d004      	beq.n	1940 <.LVL82+0x2>
    1936:	2114      	movs	r1, #20
    1938:	0020      	movs	r0, r4
    193a:	f7ff ff18 	bl	176e <sendError>

0000193e <.LVL82>:
    193e:	e7d0      	b.n	18e2 <.LVL67>
    1940:	2302      	movs	r3, #2
    1942:	7223      	strb	r3, [r4, #8]
    1944:	2300      	movs	r3, #0
    1946:	68e2      	ldr	r2, [r4, #12]
    1948:	7053      	strb	r3, [r2, #1]
    194a:	6863      	ldr	r3, [r4, #4]
    194c:	0020      	movs	r0, r4
    194e:	4798      	blx	r3

00001950 <.LVL83>:
    1950:	e7c7      	b.n	18e2 <.LVL67>
    1952:	46c0      	nop			; (mov r8, r8)
    1954:	20007dd8 	.word	0x20007dd8

00001958 <getDeviceInfo>:
    1958:	b510      	push	{r4, lr}
    195a:	7a43      	ldrb	r3, [r0, #9]
    195c:	2b2d      	cmp	r3, #45	; 0x2d
    195e:	d800      	bhi.n	1962 <getDeviceInfo+0xa>
    1960:	e0ae      	b.n	1ac0 <.LVL87+0x2>
    1962:	232e      	movs	r3, #46	; 0x2e
    1964:	7203      	strb	r3, [r0, #8]
    1966:	2300      	movs	r3, #0
    1968:	68c2      	ldr	r2, [r0, #12]
    196a:	7053      	strb	r3, [r2, #1]
    196c:	2205      	movs	r2, #5
    196e:	68c1      	ldr	r1, [r0, #12]
    1970:	708a      	strb	r2, [r1, #2]
    1972:	68c2      	ldr	r2, [r0, #12]
    1974:	70d3      	strb	r3, [r2, #3]
    1976:	4b58      	ldr	r3, [pc, #352]	; (1ad8 <.LVL89+0x12>)
    1978:	681b      	ldr	r3, [r3, #0]
    197a:	8c1a      	ldrh	r2, [r3, #32]
    197c:	68c1      	ldr	r1, [r0, #12]
    197e:	710a      	strb	r2, [r1, #4]
    1980:	8c1a      	ldrh	r2, [r3, #32]
    1982:	0a12      	lsrs	r2, r2, #8
    1984:	68c1      	ldr	r1, [r0, #12]
    1986:	714a      	strb	r2, [r1, #5]
    1988:	7a42      	ldrb	r2, [r0, #9]
    198a:	68c1      	ldr	r1, [r0, #12]
    198c:	718a      	strb	r2, [r1, #6]
    198e:	2220      	movs	r2, #32
    1990:	68c1      	ldr	r1, [r0, #12]
    1992:	71ca      	strb	r2, [r1, #7]
    1994:	2182      	movs	r1, #130	; 0x82
    1996:	68c4      	ldr	r4, [r0, #12]
    1998:	7221      	strb	r1, [r4, #8]
    199a:	3938      	subs	r1, #56	; 0x38
    199c:	68c4      	ldr	r4, [r0, #12]
    199e:	7261      	strb	r1, [r4, #9]
    19a0:	3117      	adds	r1, #23
    19a2:	68c4      	ldr	r4, [r0, #12]
    19a4:	72a1      	strb	r1, [r4, #10]
    19a6:	310d      	adds	r1, #13
    19a8:	68c4      	ldr	r4, [r0, #12]
    19aa:	72e1      	strb	r1, [r4, #11]
    19ac:	68c1      	ldr	r1, [r0, #12]
    19ae:	730a      	strb	r2, [r1, #12]
    19b0:	3213      	adds	r2, #19
    19b2:	68c1      	ldr	r1, [r0, #12]
    19b4:	734a      	strb	r2, [r1, #13]
    19b6:	3a01      	subs	r2, #1
    19b8:	68c1      	ldr	r1, [r0, #12]
    19ba:	738a      	strb	r2, [r1, #14]
    19bc:	3a02      	subs	r2, #2
    19be:	68c1      	ldr	r1, [r0, #12]
    19c0:	73ca      	strb	r2, [r1, #15]
    19c2:	2131      	movs	r1, #49	; 0x31
    19c4:	68c4      	ldr	r4, [r0, #12]
    19c6:	7421      	strb	r1, [r4, #16]
    19c8:	3108      	adds	r1, #8
    19ca:	68c4      	ldr	r4, [r0, #12]
    19cc:	7461      	strb	r1, [r4, #17]
    19ce:	68c1      	ldr	r1, [r0, #12]
    19d0:	748a      	strb	r2, [r1, #18]
    19d2:	68c1      	ldr	r1, [r0, #12]
    19d4:	74ca      	strb	r2, [r1, #19]
    19d6:	3204      	adds	r2, #4
    19d8:	68c1      	ldr	r1, [r0, #12]
    19da:	750a      	strb	r2, [r1, #20]
    19dc:	3204      	adds	r2, #4
    19de:	68c1      	ldr	r1, [r0, #12]
    19e0:	754a      	strb	r2, [r1, #21]
    19e2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    19e4:	2a00      	cmp	r2, #0
    19e6:	d100      	bne.n	19ea <.LLST11+0x9>
    19e8:	e06e      	b.n	1ac8 <.LVL89+0x2>
    19ea:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    19ec:	7812      	ldrb	r2, [r2, #0]
    19ee:	68c1      	ldr	r1, [r0, #12]
    19f0:	758a      	strb	r2, [r1, #22]
    19f2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    19f4:	7852      	ldrb	r2, [r2, #1]
    19f6:	68c1      	ldr	r1, [r0, #12]
    19f8:	75ca      	strb	r2, [r1, #23]
    19fa:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    19fc:	7892      	ldrb	r2, [r2, #2]
    19fe:	68c1      	ldr	r1, [r0, #12]
    1a00:	760a      	strb	r2, [r1, #24]
    1a02:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a04:	7912      	ldrb	r2, [r2, #4]
    1a06:	68c1      	ldr	r1, [r0, #12]
    1a08:	764a      	strb	r2, [r1, #25]
    1a0a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a0c:	7952      	ldrb	r2, [r2, #5]
    1a0e:	68c1      	ldr	r1, [r0, #12]
    1a10:	768a      	strb	r2, [r1, #26]
    1a12:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a14:	79d2      	ldrb	r2, [r2, #7]
    1a16:	68c1      	ldr	r1, [r0, #12]
    1a18:	76ca      	strb	r2, [r1, #27]
    1a1a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a1c:	7a12      	ldrb	r2, [r2, #8]
    1a1e:	68c1      	ldr	r1, [r0, #12]
    1a20:	770a      	strb	r2, [r1, #28]
    1a22:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a24:	7a52      	ldrb	r2, [r2, #9]
    1a26:	68c1      	ldr	r1, [r0, #12]
    1a28:	774a      	strb	r2, [r1, #29]
    1a2a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a2c:	7a92      	ldrb	r2, [r2, #10]
    1a2e:	68c1      	ldr	r1, [r0, #12]
    1a30:	778a      	strb	r2, [r1, #30]
    1a32:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a34:	7ad2      	ldrb	r2, [r2, #11]
    1a36:	68c1      	ldr	r1, [r0, #12]
    1a38:	77ca      	strb	r2, [r1, #31]
    1a3a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a3c:	7b11      	ldrb	r1, [r2, #12]
    1a3e:	2220      	movs	r2, #32
    1a40:	68c4      	ldr	r4, [r0, #12]
    1a42:	54a1      	strb	r1, [r4, r2]
    1a44:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a46:	7b91      	ldrb	r1, [r2, #14]
    1a48:	2221      	movs	r2, #33	; 0x21
    1a4a:	68c4      	ldr	r4, [r0, #12]
    1a4c:	54a1      	strb	r1, [r4, r2]
    1a4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    1a50:	7bda      	ldrb	r2, [r3, #15]
    1a52:	2322      	movs	r3, #34	; 0x22
    1a54:	68c1      	ldr	r1, [r0, #12]
    1a56:	54ca      	strb	r2, [r1, r3]
    1a58:	4b1f      	ldr	r3, [pc, #124]	; (1ad8 <.LVL89+0x12>)
    1a5a:	681b      	ldr	r3, [r3, #0]
    1a5c:	7b19      	ldrb	r1, [r3, #12]
    1a5e:	2223      	movs	r2, #35	; 0x23
    1a60:	68c4      	ldr	r4, [r0, #12]
    1a62:	54a1      	strb	r1, [r4, r2]
    1a64:	89d9      	ldrh	r1, [r3, #14]
    1a66:	3201      	adds	r2, #1
    1a68:	68c4      	ldr	r4, [r0, #12]
    1a6a:	54a1      	strb	r1, [r4, r2]
    1a6c:	89da      	ldrh	r2, [r3, #14]
    1a6e:	0a12      	lsrs	r2, r2, #8
    1a70:	2125      	movs	r1, #37	; 0x25
    1a72:	68c4      	ldr	r4, [r0, #12]
    1a74:	5462      	strb	r2, [r4, r1]
    1a76:	6919      	ldr	r1, [r3, #16]
    1a78:	2226      	movs	r2, #38	; 0x26
    1a7a:	68c4      	ldr	r4, [r0, #12]
    1a7c:	54a1      	strb	r1, [r4, r2]
    1a7e:	691a      	ldr	r2, [r3, #16]
    1a80:	0a12      	lsrs	r2, r2, #8
    1a82:	2127      	movs	r1, #39	; 0x27
    1a84:	68c4      	ldr	r4, [r0, #12]
    1a86:	5462      	strb	r2, [r4, r1]
    1a88:	691a      	ldr	r2, [r3, #16]
    1a8a:	0c12      	lsrs	r2, r2, #16
    1a8c:	3101      	adds	r1, #1
    1a8e:	68c4      	ldr	r4, [r0, #12]
    1a90:	5462      	strb	r2, [r4, r1]
    1a92:	691a      	ldr	r2, [r3, #16]
    1a94:	0e12      	lsrs	r2, r2, #24
    1a96:	3101      	adds	r1, #1
    1a98:	68c4      	ldr	r4, [r0, #12]
    1a9a:	5462      	strb	r2, [r4, r1]
    1a9c:	222a      	movs	r2, #42	; 0x2a
    1a9e:	68c1      	ldr	r1, [r0, #12]
    1aa0:	548b      	strb	r3, [r1, r2]
    1aa2:	0a19      	lsrs	r1, r3, #8
    1aa4:	3201      	adds	r2, #1
    1aa6:	68c4      	ldr	r4, [r0, #12]
    1aa8:	54a1      	strb	r1, [r4, r2]
    1aaa:	0c19      	lsrs	r1, r3, #16
    1aac:	3201      	adds	r2, #1
    1aae:	68c4      	ldr	r4, [r0, #12]
    1ab0:	54a1      	strb	r1, [r4, r2]
    1ab2:	0e1b      	lsrs	r3, r3, #24
    1ab4:	3201      	adds	r2, #1
    1ab6:	68c1      	ldr	r1, [r0, #12]
    1ab8:	548b      	strb	r3, [r1, r2]
    1aba:	6843      	ldr	r3, [r0, #4]
    1abc:	4798      	blx	r3

00001abe <.LVL87>:
    1abe:	bd10      	pop	{r4, pc}
    1ac0:	2115      	movs	r1, #21
    1ac2:	f7ff fe54 	bl	176e <sendError>

00001ac6 <.LVL89>:
    1ac6:	e7fa      	b.n	1abe <.LVL87>
    1ac8:	2322      	movs	r3, #34	; 0x22
    1aca:	322d      	adds	r2, #45	; 0x2d
    1acc:	68c1      	ldr	r1, [r0, #12]
    1ace:	54ca      	strb	r2, [r1, r3]
    1ad0:	3b01      	subs	r3, #1
    1ad2:	2b15      	cmp	r3, #21
    1ad4:	d1fa      	bne.n	1acc <.LVL89+0x6>
    1ad6:	e7bf      	b.n	1a58 <.LLST7+0x18>
    1ad8:	20007dd8 	.word	0x20007dd8

00001adc <initServiceTable>:
    1adc:	4b04      	ldr	r3, [pc, #16]	; (1af0 <.LLST0+0x8>)
    1ade:	0019      	movs	r1, r3
    1ae0:	316c      	adds	r1, #108	; 0x6c
    1ae2:	4a04      	ldr	r2, [pc, #16]	; (1af4 <.LLST0+0xc>)
    1ae4:	c304      	stmia	r3!, {r2}
    1ae6:	428b      	cmp	r3, r1
    1ae8:	d1fc      	bne.n	1ae4 <initServiceTable+0x8>
    1aea:	4b01      	ldr	r3, [pc, #4]	; (1af0 <.LLST0+0x8>)
    1aec:	6103      	str	r3, [r0, #16]
    1aee:	4770      	bx	lr
    1af0:	20007e44 	.word	0x20007e44
    1af4:	00001689 	.word	0x00001689

00001af8 <addCoreServices>:
    1af8:	6903      	ldr	r3, [r0, #16]
    1afa:	4a05      	ldr	r2, [pc, #20]	; (1b10 <.LLST1+0x7>)
    1afc:	601a      	str	r2, [r3, #0]
    1afe:	4a05      	ldr	r2, [pc, #20]	; (1b14 <.LLST1+0xb>)
    1b00:	605a      	str	r2, [r3, #4]
    1b02:	4a05      	ldr	r2, [pc, #20]	; (1b18 <.LLST1+0xf>)
    1b04:	609a      	str	r2, [r3, #8]
    1b06:	4a05      	ldr	r2, [pc, #20]	; (1b1c <.LLST1+0x13>)
    1b08:	649a      	str	r2, [r3, #72]	; 0x48
    1b0a:	4a05      	ldr	r2, [pc, #20]	; (1b20 <.LLST1+0x17>)
    1b0c:	645a      	str	r2, [r3, #68]	; 0x44
    1b0e:	4770      	bx	lr
    1b10:	00001959 	.word	0x00001959
    1b14:	0000170d 	.word	0x0000170d
    1b18:	0000169b 	.word	0x0000169b
    1b1c:	00001831 	.word	0x00001831
    1b20:	0000177f 	.word	0x0000177f

00001b24 <enableSend>:
    1b24:	2301      	movs	r3, #1
    1b26:	76c3      	strb	r3, [r0, #27]
    1b28:	2300      	movs	r3, #0
    1b2a:	7683      	strb	r3, [r0, #26]
    1b2c:	4770      	bx	lr

00001b2e <checkFill>:
    1b2e:	2955      	cmp	r1, #85	; 0x55
    1b30:	d003      	beq.n	1b3a <.LLST2+0x2>
    1b32:	2902      	cmp	r1, #2
    1b34:	d001      	beq.n	1b3a <.LLST2+0x2>
    1b36:	7013      	strb	r3, [r2, #0]
    1b38:	4770      	bx	lr
    1b3a:	4803      	ldr	r0, [pc, #12]	; (1b48 <.Ldebug_abbrev0+0x8>)
    1b3c:	7001      	strb	r1, [r0, #0]
    1b3e:	7043      	strb	r3, [r0, #1]
    1b40:	2304      	movs	r3, #4
    1b42:	7013      	strb	r3, [r2, #0]
    1b44:	e7f8      	b.n	1b38 <.LLST2>
    1b46:	46c0      	nop			; (mov r8, r8)
    1b48:	20007e08 	.word	0x20007e08

00001b4c <communicate>:
    1b4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1b4e:	46de      	mov	lr, fp
    1b50:	4657      	mov	r7, sl
    1b52:	464e      	mov	r6, r9
    1b54:	4645      	mov	r5, r8
    1b56:	b5e0      	push	{r5, r6, r7, lr}
    1b58:	0004      	movs	r4, r0

00001b5a <.LBB17>:
    1b5a:	2600      	movs	r6, #0
    1b5c:	4da7      	ldr	r5, [pc, #668]	; (1dfc <.LLST20+0x2>)
    1b5e:	e008      	b.n	1b72 <.LVL8+0x4>
    1b60:	2355      	movs	r3, #85	; 0x55
    1b62:	7723      	strb	r3, [r4, #28]
    1b64:	7766      	strb	r6, [r4, #29]
    1b66:	6960      	ldr	r0, [r4, #20]
    1b68:	6803      	ldr	r3, [r0, #0]
    1b6a:	2155      	movs	r1, #85	; 0x55
    1b6c:	4798      	blx	r3

00001b6e <.LVL8>:
    1b6e:	2301      	movs	r3, #1
    1b70:	76a3      	strb	r3, [r4, #26]
    1b72:	7ee3      	ldrb	r3, [r4, #27]
    1b74:	2b01      	cmp	r3, #1
    1b76:	d16b      	bne.n	1c50 <.LBE20+0xc>
    1b78:	6960      	ldr	r0, [r4, #20]
    1b7a:	68c3      	ldr	r3, [r0, #12]
    1b7c:	4798      	blx	r3
    1b7e:	2800      	cmp	r0, #0
    1b80:	d066      	beq.n	1c50 <.LBE20+0xc>
    1b82:	7ea3      	ldrb	r3, [r4, #26]
    1b84:	2b05      	cmp	r3, #5
    1b86:	d860      	bhi.n	1c4a <.LBE20+0x6>
    1b88:	009b      	lsls	r3, r3, #2
    1b8a:	58eb      	ldr	r3, [r5, r3]
    1b8c:	469f      	mov	pc, r3
    1b8e:	7a21      	ldrb	r1, [r4, #8]
    1b90:	7f23      	ldrb	r3, [r4, #28]
    1b92:	18cb      	adds	r3, r1, r3
    1b94:	7723      	strb	r3, [r4, #28]
    1b96:	6960      	ldr	r0, [r4, #20]
    1b98:	6803      	ldr	r3, [r0, #0]
    1b9a:	4798      	blx	r3
    1b9c:	7a21      	ldrb	r1, [r4, #8]
    1b9e:	2302      	movs	r3, #2
    1ba0:	0022      	movs	r2, r4
    1ba2:	321a      	adds	r2, #26
    1ba4:	0020      	movs	r0, r4
    1ba6:	f7ff ffc2 	bl	1b2e <checkFill>

00001baa <.LVL11>:
    1baa:	e7e2      	b.n	1b72 <.LVL8+0x4>
    1bac:	7e21      	ldrb	r1, [r4, #24]
    1bae:	7f23      	ldrb	r3, [r4, #28]
    1bb0:	18cb      	adds	r3, r1, r3
    1bb2:	7723      	strb	r3, [r4, #28]
    1bb4:	6960      	ldr	r0, [r4, #20]
    1bb6:	6803      	ldr	r3, [r0, #0]
    1bb8:	4798      	blx	r3
    1bba:	7e21      	ldrb	r1, [r4, #24]
    1bbc:	2303      	movs	r3, #3
    1bbe:	0022      	movs	r2, r4
    1bc0:	321a      	adds	r2, #26
    1bc2:	0020      	movs	r0, r4
    1bc4:	f7ff ffb3 	bl	1b2e <checkFill>

00001bc8 <.LVL13>:
    1bc8:	e7d3      	b.n	1b72 <.LVL8+0x4>
    1bca:	7f63      	ldrb	r3, [r4, #29]
    1bcc:	68e2      	ldr	r2, [r4, #12]
    1bce:	4694      	mov	ip, r2
    1bd0:	4463      	add	r3, ip
    1bd2:	781a      	ldrb	r2, [r3, #0]
    1bd4:	7f21      	ldrb	r1, [r4, #28]
    1bd6:	1852      	adds	r2, r2, r1
    1bd8:	7722      	strb	r2, [r4, #28]
    1bda:	6960      	ldr	r0, [r4, #20]
    1bdc:	7819      	ldrb	r1, [r3, #0]
    1bde:	6803      	ldr	r3, [r0, #0]
    1be0:	4798      	blx	r3
    1be2:	7f63      	ldrb	r3, [r4, #29]
    1be4:	1c59      	adds	r1, r3, #1
    1be6:	7a22      	ldrb	r2, [r4, #8]
    1be8:	4291      	cmp	r1, r2
    1bea:	db0b      	blt.n	1c04 <.LVL15+0x8>
    1bec:	68e2      	ldr	r2, [r4, #12]
    1bee:	5cd1      	ldrb	r1, [r2, r3]
    1bf0:	2305      	movs	r3, #5
    1bf2:	0022      	movs	r2, r4
    1bf4:	321a      	adds	r2, #26
    1bf6:	0020      	movs	r0, r4
    1bf8:	f7ff ff99 	bl	1b2e <checkFill>

00001bfc <.LVL15>:
    1bfc:	7f63      	ldrb	r3, [r4, #29]
    1bfe:	3301      	adds	r3, #1
    1c00:	7763      	strb	r3, [r4, #29]
    1c02:	e7b6      	b.n	1b72 <.LVL8+0x4>
    1c04:	68e2      	ldr	r2, [r4, #12]
    1c06:	5cd1      	ldrb	r1, [r2, r3]
    1c08:	2303      	movs	r3, #3
    1c0a:	0022      	movs	r2, r4
    1c0c:	321a      	adds	r2, #26
    1c0e:	0020      	movs	r0, r4
    1c10:	f7ff ff8d 	bl	1b2e <checkFill>

00001c14 <.LVL16>:
    1c14:	e7f2      	b.n	1bfc <.LVL15>
    1c16:	6960      	ldr	r0, [r4, #20]
    1c18:	6803      	ldr	r3, [r0, #0]
    1c1a:	0031      	movs	r1, r6
    1c1c:	4798      	blx	r3

00001c1e <.LVL17>:
    1c1e:	4b78      	ldr	r3, [pc, #480]	; (1e00 <.LLST20+0x6>)
    1c20:	785b      	ldrb	r3, [r3, #1]
    1c22:	76a3      	strb	r3, [r4, #26]
    1c24:	e7a5      	b.n	1b72 <.LVL8+0x4>
    1c26:	7f23      	ldrb	r3, [r4, #28]
    1c28:	2b55      	cmp	r3, #85	; 0x55
    1c2a:	d00b      	beq.n	1c44 <.LBE20>
    1c2c:	2b02      	cmp	r3, #2
    1c2e:	d009      	beq.n	1c44 <.LBE20>
    1c30:	6960      	ldr	r0, [r4, #20]
    1c32:	7f21      	ldrb	r1, [r4, #28]
    1c34:	6803      	ldr	r3, [r0, #0]
    1c36:	4798      	blx	r3
    1c38:	6960      	ldr	r0, [r4, #20]
    1c3a:	6943      	ldr	r3, [r0, #20]
    1c3c:	4798      	blx	r3

00001c3e <.LBB20>:
    1c3e:	76e6      	strb	r6, [r4, #27]
    1c40:	7666      	strb	r6, [r4, #25]
    1c42:	e796      	b.n	1b72 <.LVL8+0x4>

00001c44 <.LBE20>:
    1c44:	43db      	mvns	r3, r3
    1c46:	7723      	strb	r3, [r4, #28]
    1c48:	e7f2      	b.n	1c30 <.LVL17+0x12>
    1c4a:	76e6      	strb	r6, [r4, #27]
    1c4c:	7666      	strb	r6, [r4, #25]
    1c4e:	e790      	b.n	1b72 <.LVL8+0x4>
    1c50:	4d6c      	ldr	r5, [pc, #432]	; (1e04 <.LLST20+0xa>)
    1c52:	e098      	b.n	1d86 <.LVL58+0x6>
    1c54:	2855      	cmp	r0, #85	; 0x55
    1c56:	d000      	beq.n	1c5a <.LLST8>
    1c58:	e095      	b.n	1d86 <.LVL58+0x6>
    1c5a:	2355      	movs	r3, #85	; 0x55
    1c5c:	7723      	strb	r3, [r4, #28]
    1c5e:	3b54      	subs	r3, #84	; 0x54
    1c60:	7663      	strb	r3, [r4, #25]
    1c62:	e090      	b.n	1d86 <.LVL58+0x6>

00001c64 <.LBB23>:
    1c64:	2800      	cmp	r0, #0
    1c66:	d01a      	beq.n	1c9e <.LBE25>
    1c68:	7a63      	ldrb	r3, [r4, #9]
    1c6a:	4283      	cmp	r3, r0
    1c6c:	d30e      	bcc.n	1c8c <.LVL27+0x2>
    1c6e:	0003      	movs	r3, r0
    1c70:	3355      	adds	r3, #85	; 0x55
    1c72:	7723      	strb	r3, [r4, #28]
    1c74:	7220      	strb	r0, [r4, #8]
    1c76:	2300      	movs	r3, #0
    1c78:	7763      	strb	r3, [r4, #29]
    1c7a:	3302      	adds	r3, #2
    1c7c:	7663      	strb	r3, [r4, #25]
    1c7e:	0022      	movs	r2, r4
    1c80:	3219      	adds	r2, #25
    1c82:	0001      	movs	r1, r0
    1c84:	0020      	movs	r0, r4
    1c86:	f7ff ff52 	bl	1b2e <checkFill>

00001c8a <.LVL27>:
    1c8a:	e07c      	b.n	1d86 <.LVL58+0x6>
    1c8c:	2300      	movs	r3, #0
    1c8e:	7663      	strb	r3, [r4, #25]

00001c90 <.LBB25>:
    1c90:	68e2      	ldr	r2, [r4, #12]
    1c92:	7013      	strb	r3, [r2, #0]
    1c94:	2115      	movs	r1, #21
    1c96:	0020      	movs	r0, r4
    1c98:	f7ff fd69 	bl	176e <sendError>

00001c9c <.LVL31>:
    1c9c:	e073      	b.n	1d86 <.LVL58+0x6>

00001c9e <.LBE25>:
    1c9e:	2300      	movs	r3, #0
    1ca0:	7663      	strb	r3, [r4, #25]
    1ca2:	e070      	b.n	1d86 <.LVL58+0x6>
    1ca4:	7e23      	ldrb	r3, [r4, #24]
    1ca6:	4283      	cmp	r3, r0
    1ca8:	d002      	beq.n	1cb0 <.LBE25+0x12>
    1caa:	2300      	movs	r3, #0
    1cac:	7663      	strb	r3, [r4, #25]
    1cae:	e06a      	b.n	1d86 <.LVL58+0x6>
    1cb0:	7f23      	ldrb	r3, [r4, #28]
    1cb2:	18c3      	adds	r3, r0, r3
    1cb4:	7723      	strb	r3, [r4, #28]
    1cb6:	2303      	movs	r3, #3
    1cb8:	0022      	movs	r2, r4
    1cba:	3219      	adds	r2, #25
    1cbc:	0001      	movs	r1, r0
    1cbe:	0020      	movs	r0, r4
    1cc0:	f7ff ff35 	bl	1b2e <checkFill>

00001cc4 <.LVL35>:
    1cc4:	e05f      	b.n	1d86 <.LVL58+0x6>
    1cc6:	7f23      	ldrb	r3, [r4, #28]
    1cc8:	18c3      	adds	r3, r0, r3
    1cca:	7723      	strb	r3, [r4, #28]
    1ccc:	7f63      	ldrb	r3, [r4, #29]
    1cce:	68e2      	ldr	r2, [r4, #12]
    1cd0:	54d0      	strb	r0, [r2, r3]
    1cd2:	7f63      	ldrb	r3, [r4, #29]
    1cd4:	3301      	adds	r3, #1
    1cd6:	b2db      	uxtb	r3, r3
    1cd8:	7763      	strb	r3, [r4, #29]
    1cda:	7a22      	ldrb	r2, [r4, #8]
    1cdc:	429a      	cmp	r2, r3
    1cde:	d807      	bhi.n	1cf0 <.LVL38+0x2>
    1ce0:	2305      	movs	r3, #5
    1ce2:	0022      	movs	r2, r4
    1ce4:	3219      	adds	r2, #25
    1ce6:	0001      	movs	r1, r0
    1ce8:	0020      	movs	r0, r4
    1cea:	f7ff ff20 	bl	1b2e <checkFill>

00001cee <.LVL38>:
    1cee:	e04a      	b.n	1d86 <.LVL58+0x6>
    1cf0:	2303      	movs	r3, #3
    1cf2:	0022      	movs	r2, r4
    1cf4:	3219      	adds	r2, #25
    1cf6:	0001      	movs	r1, r0
    1cf8:	0020      	movs	r0, r4
    1cfa:	f7ff ff18 	bl	1b2e <checkFill>

00001cfe <.LVL41>:
    1cfe:	e042      	b.n	1d86 <.LVL58+0x6>
    1d00:	2800      	cmp	r0, #0
    1d02:	d103      	bne.n	1d0c <.LVL41+0xe>
    1d04:	4b3e      	ldr	r3, [pc, #248]	; (1e00 <.LLST20+0x6>)
    1d06:	785b      	ldrb	r3, [r3, #1]
    1d08:	7663      	strb	r3, [r4, #25]
    1d0a:	e03c      	b.n	1d86 <.LVL58+0x6>
    1d0c:	4b3c      	ldr	r3, [pc, #240]	; (1e00 <.LLST20+0x6>)
    1d0e:	781b      	ldrb	r3, [r3, #0]
    1d10:	2b55      	cmp	r3, #85	; 0x55
    1d12:	d002      	beq.n	1d1a <.LBB29>
    1d14:	2300      	movs	r3, #0
    1d16:	7663      	strb	r3, [r4, #25]
    1d18:	e035      	b.n	1d86 <.LVL58+0x6>

00001d1a <.LBB29>:
    1d1a:	7a63      	ldrb	r3, [r4, #9]
    1d1c:	4283      	cmp	r3, r0
    1d1e:	d308      	bcc.n	1d32 <.LLST10+0xc>
    1d20:	0003      	movs	r3, r0
    1d22:	3355      	adds	r3, #85	; 0x55
    1d24:	7723      	strb	r3, [r4, #28]
    1d26:	7220      	strb	r0, [r4, #8]
    1d28:	2300      	movs	r3, #0
    1d2a:	7763      	strb	r3, [r4, #29]
    1d2c:	3302      	adds	r3, #2
    1d2e:	7663      	strb	r3, [r4, #25]
    1d30:	e029      	b.n	1d86 <.LVL58+0x6>
    1d32:	2300      	movs	r3, #0
    1d34:	7663      	strb	r3, [r4, #25]

00001d36 <.LBB31>:
    1d36:	68e2      	ldr	r2, [r4, #12]
    1d38:	7013      	strb	r3, [r2, #0]
    1d3a:	2115      	movs	r1, #21
    1d3c:	0020      	movs	r0, r4
    1d3e:	f7ff fd16 	bl	176e <sendError>

00001d42 <.LVL48>:
    1d42:	e020      	b.n	1d86 <.LVL58+0x6>

00001d44 <.LBE29>:
    1d44:	7f23      	ldrb	r3, [r4, #28]
    1d46:	2b55      	cmp	r3, #85	; 0x55
    1d48:	d009      	beq.n	1d5e <.LVL51+0x2>
    1d4a:	2b02      	cmp	r3, #2
    1d4c:	d007      	beq.n	1d5e <.LVL51+0x2>
    1d4e:	7f23      	ldrb	r3, [r4, #28]
    1d50:	4293      	cmp	r3, r2
    1d52:	d007      	beq.n	1d64 <.LVL51+0x8>
    1d54:	2113      	movs	r1, #19
    1d56:	0020      	movs	r0, r4
    1d58:	f7ff fd09 	bl	176e <sendError>

00001d5c <.LVL51>:
    1d5c:	e013      	b.n	1d86 <.LVL58+0x6>
    1d5e:	43db      	mvns	r3, r3
    1d60:	7723      	strb	r3, [r4, #28]
    1d62:	e7f4      	b.n	1d4e <.LBE29+0xa>
    1d64:	68e3      	ldr	r3, [r4, #12]
    1d66:	781b      	ldrb	r3, [r3, #0]
    1d68:	2b1a      	cmp	r3, #26
    1d6a:	d805      	bhi.n	1d78 <.LVL55+0x2>
    1d6c:	009b      	lsls	r3, r3, #2
    1d6e:	6922      	ldr	r2, [r4, #16]
    1d70:	589b      	ldr	r3, [r3, r2]
    1d72:	0020      	movs	r0, r4
    1d74:	4798      	blx	r3

00001d76 <.LVL55>:
    1d76:	e006      	b.n	1d86 <.LVL58+0x6>
    1d78:	2121      	movs	r1, #33	; 0x21
    1d7a:	0020      	movs	r0, r4
    1d7c:	f7ff fcf7 	bl	176e <sendError>

00001d80 <.LVL58>:
    1d80:	e001      	b.n	1d86 <.LVL58+0x6>
    1d82:	2300      	movs	r3, #0
    1d84:	7663      	strb	r3, [r4, #25]
    1d86:	7ee3      	ldrb	r3, [r4, #27]
    1d88:	2b00      	cmp	r3, #0
    1d8a:	d10e      	bne.n	1daa <.LBB33>
    1d8c:	6960      	ldr	r0, [r4, #20]
    1d8e:	6883      	ldr	r3, [r0, #8]
    1d90:	4798      	blx	r3
    1d92:	2800      	cmp	r0, #0
    1d94:	d009      	beq.n	1daa <.LBB33>
    1d96:	6960      	ldr	r0, [r4, #20]
    1d98:	6843      	ldr	r3, [r0, #4]
    1d9a:	4798      	blx	r3
    1d9c:	0002      	movs	r2, r0
    1d9e:	7e63      	ldrb	r3, [r4, #25]
    1da0:	2b05      	cmp	r3, #5
    1da2:	d8ee      	bhi.n	1d82 <.LVL58+0x2>
    1da4:	009b      	lsls	r3, r3, #2
    1da6:	58eb      	ldr	r3, [r5, r3]
    1da8:	469f      	mov	pc, r3

00001daa <.LBB33>:
    1daa:	4b17      	ldr	r3, [pc, #92]	; (1e08 <.LLST20+0xe>)
    1dac:	681b      	ldr	r3, [r3, #0]
    1dae:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    1db0:	2a00      	cmp	r2, #0
    1db2:	d004      	beq.n	1dbe <.LLST17+0x3>
    1db4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    1db6:	234d      	movs	r3, #77	; 0x4d
    1db8:	5cd3      	ldrb	r3, [r2, r3]
    1dba:	2b04      	cmp	r3, #4
    1dbc:	d005      	beq.n	1dca <.LLST17+0xf>
    1dbe:	bc3c      	pop	{r2, r3, r4, r5}
    1dc0:	4690      	mov	r8, r2
    1dc2:	4699      	mov	r9, r3
    1dc4:	46a2      	mov	sl, r4
    1dc6:	46ab      	mov	fp, r5
    1dc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1dca:	6960      	ldr	r0, [r4, #20]
    1dcc:	6903      	ldr	r3, [r0, #16]
    1dce:	4798      	blx	r3
    1dd0:	4b0d      	ldr	r3, [pc, #52]	; (1e08 <.LLST20+0xe>)
    1dd2:	681a      	ldr	r2, [r3, #0]
    1dd4:	6a91      	ldr	r1, [r2, #40]	; 0x28
    1dd6:	235c      	movs	r3, #92	; 0x5c
    1dd8:	5ccb      	ldrb	r3, [r1, r3]
    1dda:	3304      	adds	r3, #4
    1ddc:	4298      	cmp	r0, r3
    1dde:	db07      	blt.n	1df0 <.LLST19+0xa>
    1de0:	6a91      	ldr	r1, [r2, #40]	; 0x28
    1de2:	6a90      	ldr	r0, [r2, #40]	; 0x28
    1de4:	2358      	movs	r3, #88	; 0x58
    1de6:	5ac9      	ldrh	r1, [r1, r3]
    1de8:	3b02      	subs	r3, #2
    1dea:	5ac3      	ldrh	r3, [r0, r3]
    1dec:	4299      	cmp	r1, r3
    1dee:	d20d      	bcs.n	1e0c <.LLST20+0x12>
    1df0:	4a03      	ldr	r2, [pc, #12]	; (1e00 <.LLST20+0x6>)
    1df2:	6853      	ldr	r3, [r2, #4]
    1df4:	3301      	adds	r3, #1
    1df6:	6053      	str	r3, [r2, #4]
    1df8:	e7e1      	b.n	1dbe <.LLST17+0x3>
    1dfa:	46c0      	nop			; (mov r8, r8)
    1dfc:	00003410 	.word	0x00003410
    1e00:	20007e08 	.word	0x20007e08
    1e04:	00003428 	.word	0x00003428
    1e08:	20007dd8 	.word	0x20007dd8
    1e0c:	6a92      	ldr	r2, [r2, #40]	; 0x28
    1e0e:	2100      	movs	r1, #0
    1e10:	2358      	movs	r3, #88	; 0x58
    1e12:	52d1      	strh	r1, [r2, r3]
    1e14:	6960      	ldr	r0, [r4, #20]
    1e16:	6803      	ldr	r3, [r0, #0]
    1e18:	3102      	adds	r1, #2
    1e1a:	4798      	blx	r3

00001e1c <.LVL71>:
    1e1c:	6960      	ldr	r0, [r4, #20]
    1e1e:	4e2c      	ldr	r6, [pc, #176]	; (1ed0 <.LVL87+0x6>)
    1e20:	6833      	ldr	r3, [r6, #0]
    1e22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1e24:	275c      	movs	r7, #92	; 0x5c
    1e26:	5dd9      	ldrb	r1, [r3, r7]
    1e28:	6803      	ldr	r3, [r0, #0]
    1e2a:	4798      	blx	r3
    1e2c:	6960      	ldr	r0, [r4, #20]
    1e2e:	7e21      	ldrb	r1, [r4, #24]
    1e30:	6803      	ldr	r3, [r0, #0]
    1e32:	4798      	blx	r3
    1e34:	6960      	ldr	r0, [r4, #20]
    1e36:	6833      	ldr	r3, [r6, #0]
    1e38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1e3a:	255a      	movs	r5, #90	; 0x5a
    1e3c:	5d59      	ldrb	r1, [r3, r5]
    1e3e:	6803      	ldr	r3, [r0, #0]
    1e40:	4798      	blx	r3
    1e42:	6960      	ldr	r0, [r4, #20]
    1e44:	6833      	ldr	r3, [r6, #0]
    1e46:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1e48:	5b59      	ldrh	r1, [r3, r5]
    1e4a:	0a09      	lsrs	r1, r1, #8
    1e4c:	6803      	ldr	r3, [r0, #0]
    1e4e:	4798      	blx	r3
    1e50:	6833      	ldr	r3, [r6, #0]
    1e52:	6a98      	ldr	r0, [r3, #40]	; 0x28
    1e54:	6a99      	ldr	r1, [r3, #40]	; 0x28
    1e56:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    1e58:	5dc3      	ldrb	r3, [r0, r7]
    1e5a:	3302      	adds	r3, #2
    1e5c:	7e27      	ldrb	r7, [r4, #24]
    1e5e:	19db      	adds	r3, r3, r7
    1e60:	5b4f      	ldrh	r7, [r1, r5]
    1e62:	18fb      	adds	r3, r7, r3
    1e64:	5b57      	ldrh	r7, [r2, r5]
    1e66:	0a3f      	lsrs	r7, r7, #8
    1e68:	18ff      	adds	r7, r7, r3
    1e6a:	b2ff      	uxtb	r7, r7
    1e6c:	2300      	movs	r3, #0
    1e6e:	4699      	mov	r9, r3
    1e70:	4b17      	ldr	r3, [pc, #92]	; (1ed0 <.LVL87+0x6>)
    1e72:	4698      	mov	r8, r3
    1e74:	2355      	movs	r3, #85	; 0x55
    1e76:	469b      	mov	fp, r3
    1e78:	2500      	movs	r5, #0
    1e7a:	464b      	mov	r3, r9
    1e7c:	009b      	lsls	r3, r3, #2
    1e7e:	469a      	mov	sl, r3
    1e80:	4643      	mov	r3, r8
    1e82:	681b      	ldr	r3, [r3, #0]
    1e84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1e86:	4453      	add	r3, sl
    1e88:	685b      	ldr	r3, [r3, #4]
    1e8a:	5d5e      	ldrb	r6, [r3, r5]
    1e8c:	6960      	ldr	r0, [r4, #20]
    1e8e:	6803      	ldr	r3, [r0, #0]
    1e90:	0031      	movs	r1, r6
    1e92:	4798      	blx	r3

00001e94 <.LVL80>:
    1e94:	19f7      	adds	r7, r6, r7
    1e96:	b2ff      	uxtb	r7, r7
    1e98:	3501      	adds	r5, #1
    1e9a:	b2ad      	uxth	r5, r5
    1e9c:	4643      	mov	r3, r8
    1e9e:	681a      	ldr	r2, [r3, #0]
    1ea0:	6a93      	ldr	r3, [r2, #40]	; 0x28
    1ea2:	444b      	add	r3, r9
    1ea4:	3324      	adds	r3, #36	; 0x24
    1ea6:	781b      	ldrb	r3, [r3, #0]
    1ea8:	42ab      	cmp	r3, r5
    1eaa:	d8e9      	bhi.n	1e80 <.LLST26+0x5>
    1eac:	464b      	mov	r3, r9
    1eae:	3301      	adds	r3, #1
    1eb0:	b29b      	uxth	r3, r3
    1eb2:	4699      	mov	r9, r3
    1eb4:	6a93      	ldr	r3, [r2, #40]	; 0x28
    1eb6:	465a      	mov	r2, fp
    1eb8:	5c9b      	ldrb	r3, [r3, r2]
    1eba:	454b      	cmp	r3, r9
    1ebc:	d8dc      	bhi.n	1e78 <.LLST25+0x11>
    1ebe:	2f02      	cmp	r7, #2
    1ec0:	d004      	beq.n	1ecc <.LVL87+0x2>
    1ec2:	6960      	ldr	r0, [r4, #20]
    1ec4:	6803      	ldr	r3, [r0, #0]
    1ec6:	0039      	movs	r1, r7
    1ec8:	4798      	blx	r3

00001eca <.LVL87>:
    1eca:	e778      	b.n	1dbe <.LLST17+0x3>
    1ecc:	37fb      	adds	r7, #251	; 0xfb
    1ece:	e7f8      	b.n	1ec2 <.LLST1+0x1c>
    1ed0:	20007dd8 	.word	0x20007dd8

00001ed4 <initLNet>:
    1ed4:	60c1      	str	r1, [r0, #12]
    1ed6:	7242      	strb	r2, [r0, #9]
    1ed8:	7603      	strb	r3, [r0, #24]
    1eda:	4b04      	ldr	r3, [pc, #16]	; (1eec <.LBE43+0x4>)
    1edc:	6003      	str	r3, [r0, #0]
    1ede:	4b04      	ldr	r3, [pc, #16]	; (1ef0 <.LBE43+0x8>)
    1ee0:	6043      	str	r3, [r0, #4]

00001ee2 <.LBB43>:
    1ee2:	2300      	movs	r3, #0
    1ee4:	76c3      	strb	r3, [r0, #27]
    1ee6:	7643      	strb	r3, [r0, #25]

00001ee8 <.LBE43>:
    1ee8:	4770      	bx	lr
    1eea:	46c0      	nop			; (mov r8, r8)
    1eec:	00001b4d 	.word	0x00001b4d
    1ef0:	00001b25 	.word	0x00001b25

00001ef4 <putRAMBlock>:
    1ef4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1ef6:	0005      	movs	r5, r0
    1ef8:	68c3      	ldr	r3, [r0, #12]
    1efa:	789e      	ldrb	r6, [r3, #2]
    1efc:	0236      	lsls	r6, r6, #8
    1efe:	78da      	ldrb	r2, [r3, #3]
    1f00:	0412      	lsls	r2, r2, #16
    1f02:	18b6      	adds	r6, r6, r2
    1f04:	785a      	ldrb	r2, [r3, #1]
    1f06:	18b6      	adds	r6, r6, r2
    1f08:	791a      	ldrb	r2, [r3, #4]
    1f0a:	0612      	lsls	r2, r2, #24
    1f0c:	18b6      	adds	r6, r6, r2
    1f0e:	7a04      	ldrb	r4, [r0, #8]
    1f10:	3c06      	subs	r4, #6
    1f12:	b2e4      	uxtb	r4, r4
    1f14:	795f      	ldrb	r7, [r3, #5]
    1f16:	0039      	movs	r1, r7
    1f18:	0020      	movs	r0, r4
    1f1a:	f001 f9d7 	bl	32cc <.LFE51>
    1f1e:	b2c9      	uxtb	r1, r1
    1f20:	2900      	cmp	r1, #0
    1f22:	d10a      	bne.n	1f3a <.LVL7+0x2>
    1f24:	2f02      	cmp	r7, #2
    1f26:	d028      	beq.n	1f7a <.LBB3>
    1f28:	2f04      	cmp	r7, #4
    1f2a:	d00b      	beq.n	1f44 <.LBB2>
    1f2c:	2f01      	cmp	r7, #1
    1f2e:	d03b      	beq.n	1fa8 <.LBB4>
    1f30:	2114      	movs	r1, #20
    1f32:	0028      	movs	r0, r5
    1f34:	f7ff fc1b 	bl	176e <sendError>

00001f38 <.LVL7>:
    1f38:	e04a      	b.n	1fd0 <.LVL22>
    1f3a:	2114      	movs	r1, #20
    1f3c:	0028      	movs	r0, r5
    1f3e:	f7ff fc16 	bl	176e <sendError>

00001f42 <.LVL8>:
    1f42:	e045      	b.n	1fd0 <.LVL22>

00001f44 <.LBB2>:
    1f44:	08a4      	lsrs	r4, r4, #2
    1f46:	d03b      	beq.n	1fc0 <.LBE4>
    1f48:	3c01      	subs	r4, #1
    1f4a:	b2a4      	uxth	r4, r4
    1f4c:	3403      	adds	r4, #3
    1f4e:	00a4      	lsls	r4, r4, #2
    1f50:	2208      	movs	r2, #8
    1f52:	3e08      	subs	r6, #8
    1f54:	68e8      	ldr	r0, [r5, #12]
    1f56:	1881      	adds	r1, r0, r2
    1f58:	1e4b      	subs	r3, r1, #1
    1f5a:	781b      	ldrb	r3, [r3, #0]
    1f5c:	021b      	lsls	r3, r3, #8
    1f5e:	1e8f      	subs	r7, r1, #2
    1f60:	783f      	ldrb	r7, [r7, #0]
    1f62:	19db      	adds	r3, r3, r7
    1f64:	5c80      	ldrb	r0, [r0, r2]
    1f66:	0400      	lsls	r0, r0, #16
    1f68:	181b      	adds	r3, r3, r0
    1f6a:	7849      	ldrb	r1, [r1, #1]
    1f6c:	0609      	lsls	r1, r1, #24
    1f6e:	185b      	adds	r3, r3, r1
    1f70:	50b3      	str	r3, [r6, r2]
    1f72:	3204      	adds	r2, #4
    1f74:	4294      	cmp	r4, r2
    1f76:	d1ed      	bne.n	1f54 <.LLST6>
    1f78:	e022      	b.n	1fc0 <.LBE4>

00001f7a <.LBB3>:
    1f7a:	0864      	lsrs	r4, r4, #1
    1f7c:	d020      	beq.n	1fc0 <.LBE4>
    1f7e:	3c01      	subs	r4, #1
    1f80:	b2a3      	uxth	r3, r4
    1f82:	005b      	lsls	r3, r3, #1
    1f84:	199b      	adds	r3, r3, r6
    1f86:	3302      	adds	r3, #2
    1f88:	0032      	movs	r2, r6
    1f8a:	2407      	movs	r4, #7
    1f8c:	1ba4      	subs	r4, r4, r6
    1f8e:	2106      	movs	r1, #6
    1f90:	1b8e      	subs	r6, r1, r6
    1f92:	68e9      	ldr	r1, [r5, #12]
    1f94:	1889      	adds	r1, r1, r2
    1f96:	5d08      	ldrb	r0, [r1, r4]
    1f98:	0200      	lsls	r0, r0, #8
    1f9a:	5d89      	ldrb	r1, [r1, r6]
    1f9c:	1809      	adds	r1, r1, r0
    1f9e:	8011      	strh	r1, [r2, #0]
    1fa0:	3202      	adds	r2, #2
    1fa2:	429a      	cmp	r2, r3
    1fa4:	d1f5      	bne.n	1f92 <.LBB3+0x18>
    1fa6:	e00b      	b.n	1fc0 <.LBE4>

00001fa8 <.LBB4>:
    1fa8:	b2a4      	uxth	r4, r4
    1faa:	2c00      	cmp	r4, #0
    1fac:	d008      	beq.n	1fc0 <.LBE4>
    1fae:	2300      	movs	r3, #0
    1fb0:	68ea      	ldr	r2, [r5, #12]
    1fb2:	18d2      	adds	r2, r2, r3
    1fb4:	7992      	ldrb	r2, [r2, #6]
    1fb6:	559a      	strb	r2, [r3, r6]
    1fb8:	3301      	adds	r3, #1
    1fba:	b29a      	uxth	r2, r3
    1fbc:	42a2      	cmp	r2, r4
    1fbe:	d3f7      	bcc.n	1fb0 <.LBB4+0x8>

00001fc0 <.LBE4>:
    1fc0:	2302      	movs	r3, #2
    1fc2:	722b      	strb	r3, [r5, #8]
    1fc4:	2300      	movs	r3, #0
    1fc6:	68ea      	ldr	r2, [r5, #12]
    1fc8:	7053      	strb	r3, [r2, #1]
    1fca:	686b      	ldr	r3, [r5, #4]
    1fcc:	0028      	movs	r0, r5
    1fce:	4798      	blx	r3

00001fd0 <.LVL22>:
    1fd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00001fd2 <getRAMBlock>:
    1fd2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1fd4:	68c2      	ldr	r2, [r0, #12]
    1fd6:	7955      	ldrb	r5, [r2, #5]
    1fd8:	1ca9      	adds	r1, r5, #2
    1fda:	7a43      	ldrb	r3, [r0, #9]
    1fdc:	4299      	cmp	r1, r3
    1fde:	dc59      	bgt.n	2094 <.LBE7>
    1fe0:	7893      	ldrb	r3, [r2, #2]
    1fe2:	021b      	lsls	r3, r3, #8
    1fe4:	78d1      	ldrb	r1, [r2, #3]
    1fe6:	0409      	lsls	r1, r1, #16
    1fe8:	185b      	adds	r3, r3, r1
    1fea:	7851      	ldrb	r1, [r2, #1]
    1fec:	185b      	adds	r3, r3, r1
    1fee:	7911      	ldrb	r1, [r2, #4]
    1ff0:	0609      	lsls	r1, r1, #24
    1ff2:	185b      	adds	r3, r3, r1
    1ff4:	7992      	ldrb	r2, [r2, #6]
    1ff6:	2a02      	cmp	r2, #2
    1ff8:	d037      	beq.n	206a <.LBB7>
    1ffa:	2a04      	cmp	r2, #4
    1ffc:	d016      	beq.n	202c <.LBB6>
    1ffe:	2114      	movs	r1, #20
    2000:	2a01      	cmp	r2, #1
    2002:	d148      	bne.n	2096 <.LLST3>

00002004 <.LBB5>:
    2004:	b2ae      	uxth	r6, r5
    2006:	2e00      	cmp	r6, #0
    2008:	d008      	beq.n	201c <.LBE5>
    200a:	2200      	movs	r2, #0
    200c:	5cd4      	ldrb	r4, [r2, r3]
    200e:	68c1      	ldr	r1, [r0, #12]
    2010:	1889      	adds	r1, r1, r2
    2012:	708c      	strb	r4, [r1, #2]
    2014:	3201      	adds	r2, #1
    2016:	b291      	uxth	r1, r2
    2018:	42b1      	cmp	r1, r6
    201a:	d3f7      	bcc.n	200c <.LBB5+0x8>

0000201c <.LBE5>:
    201c:	3502      	adds	r5, #2
    201e:	7205      	strb	r5, [r0, #8]
    2020:	2300      	movs	r3, #0
    2022:	68c2      	ldr	r2, [r0, #12]
    2024:	7053      	strb	r3, [r2, #1]
    2026:	6843      	ldr	r3, [r0, #4]
    2028:	4798      	blx	r3

0000202a <.LVL36>:
    202a:	e036      	b.n	209a <.LVL49>

0000202c <.LBB6>:
    202c:	b2af      	uxth	r7, r5
    202e:	2200      	movs	r2, #0
    2030:	2f00      	cmp	r7, #0
    2032:	d0f3      	beq.n	201c <.LBE5>
    2034:	0411      	lsls	r1, r2, #16
    2036:	0c09      	lsrs	r1, r1, #16
    2038:	68c4      	ldr	r4, [r0, #12]
    203a:	1864      	adds	r4, r4, r1
    203c:	5cd6      	ldrb	r6, [r2, r3]
    203e:	70a6      	strb	r6, [r4, #2]
    2040:	68c4      	ldr	r4, [r0, #12]
    2042:	1864      	adds	r4, r4, r1
    2044:	58d6      	ldr	r6, [r2, r3]
    2046:	0a36      	lsrs	r6, r6, #8
    2048:	70e6      	strb	r6, [r4, #3]
    204a:	68c4      	ldr	r4, [r0, #12]
    204c:	1864      	adds	r4, r4, r1
    204e:	58d6      	ldr	r6, [r2, r3]
    2050:	0c36      	lsrs	r6, r6, #16
    2052:	7126      	strb	r6, [r4, #4]
    2054:	68c4      	ldr	r4, [r0, #12]
    2056:	46a4      	mov	ip, r4
    2058:	4461      	add	r1, ip
    205a:	58d4      	ldr	r4, [r2, r3]
    205c:	0e24      	lsrs	r4, r4, #24
    205e:	714c      	strb	r4, [r1, #5]
    2060:	3204      	adds	r2, #4
    2062:	b291      	uxth	r1, r2
    2064:	42b9      	cmp	r1, r7
    2066:	d3e5      	bcc.n	2034 <.LLST8>
    2068:	e7d8      	b.n	201c <.LBE5>

0000206a <.LBB7>:
    206a:	b2af      	uxth	r7, r5
    206c:	2200      	movs	r2, #0
    206e:	2f00      	cmp	r7, #0
    2070:	d0d4      	beq.n	201c <.LBE5>
    2072:	0411      	lsls	r1, r2, #16
    2074:	0c09      	lsrs	r1, r1, #16
    2076:	68c4      	ldr	r4, [r0, #12]
    2078:	1864      	adds	r4, r4, r1
    207a:	5ad6      	ldrh	r6, [r2, r3]
    207c:	70a6      	strb	r6, [r4, #2]
    207e:	68c4      	ldr	r4, [r0, #12]
    2080:	46a4      	mov	ip, r4
    2082:	4461      	add	r1, ip
    2084:	5ad4      	ldrh	r4, [r2, r3]
    2086:	0a24      	lsrs	r4, r4, #8
    2088:	70cc      	strb	r4, [r1, #3]
    208a:	3202      	adds	r2, #2
    208c:	b291      	uxth	r1, r2
    208e:	42b9      	cmp	r1, r7
    2090:	d3ef      	bcc.n	2072 <.LBB7+0x8>
    2092:	e7c3      	b.n	201c <.LBE5>

00002094 <.LBE7>:
    2094:	2115      	movs	r1, #21
    2096:	f7ff fb6a 	bl	176e <sendError>

0000209a <.LVL49>:
    209a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000209c <putBlockData>:
    209c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    209e:	0005      	movs	r5, r0
    20a0:	68c3      	ldr	r3, [r0, #12]
    20a2:	469c      	mov	ip, r3
    20a4:	7898      	ldrb	r0, [r3, #2]
    20a6:	0200      	lsls	r0, r0, #8
    20a8:	78db      	ldrb	r3, [r3, #3]
    20aa:	041b      	lsls	r3, r3, #16
    20ac:	18c0      	adds	r0, r0, r3
    20ae:	4663      	mov	r3, ip
    20b0:	785b      	ldrb	r3, [r3, #1]
    20b2:	18c0      	adds	r0, r0, r3
    20b4:	4663      	mov	r3, ip
    20b6:	791b      	ldrb	r3, [r3, #4]
    20b8:	061b      	lsls	r3, r3, #24
    20ba:	18c0      	adds	r0, r0, r3
    20bc:	8801      	ldrh	r1, [r0, #0]
    20be:	4b1f      	ldr	r3, [pc, #124]	; (213c <.LVL69+0x2>)
    20c0:	681e      	ldr	r6, [r3, #0]
    20c2:	6873      	ldr	r3, [r6, #4]
    20c4:	881b      	ldrh	r3, [r3, #0]
    20c6:	428b      	cmp	r3, r1
    20c8:	d02a      	beq.n	2120 <.LVL61+0x2>
    20ca:	6873      	ldr	r3, [r6, #4]
    20cc:	881b      	ldrh	r3, [r3, #0]
    20ce:	2b00      	cmp	r3, #0
    20d0:	d028      	beq.n	2124 <.LVL61+0x6>
    20d2:	2200      	movs	r2, #0
    20d4:	3201      	adds	r2, #1
    20d6:	b292      	uxth	r2, r2
    20d8:	6874      	ldr	r4, [r6, #4]
    20da:	0053      	lsls	r3, r2, #1
    20dc:	189b      	adds	r3, r3, r2
    20de:	00db      	lsls	r3, r3, #3
    20e0:	001f      	movs	r7, r3
    20e2:	5ae4      	ldrh	r4, [r4, r3]
    20e4:	428c      	cmp	r4, r1
    20e6:	d003      	beq.n	20f0 <.LLST0+0x19>
    20e8:	6874      	ldr	r4, [r6, #4]
    20ea:	5ae3      	ldrh	r3, [r4, r3]
    20ec:	2b00      	cmp	r3, #0
    20ee:	d1f1      	bne.n	20d4 <.LLST4+0x1e>
    20f0:	6873      	ldr	r3, [r6, #4]
    20f2:	5bdb      	ldrh	r3, [r3, r7]
    20f4:	2b00      	cmp	r3, #0
    20f6:	d017      	beq.n	2128 <.LVL61+0xa>
    20f8:	6873      	ldr	r3, [r6, #4]
    20fa:	7a2a      	ldrb	r2, [r5, #8]
    20fc:	3a05      	subs	r2, #5
    20fe:	b2d2      	uxtb	r2, r2
    2100:	4661      	mov	r1, ip
    2102:	3105      	adds	r1, #5
    2104:	19df      	adds	r7, r3, r7
    2106:	693b      	ldr	r3, [r7, #16]
    2108:	4798      	blx	r3
    210a:	2800      	cmp	r0, #0
    210c:	d111      	bne.n	2132 <.LVL66+0x2>
    210e:	2302      	movs	r3, #2
    2110:	722b      	strb	r3, [r5, #8]
    2112:	2300      	movs	r3, #0
    2114:	68ea      	ldr	r2, [r5, #12]
    2116:	7053      	strb	r3, [r2, #1]
    2118:	686b      	ldr	r3, [r5, #4]
    211a:	0028      	movs	r0, r5
    211c:	4798      	blx	r3

0000211e <.LVL61>:
    211e:	e007      	b.n	2130 <.LVL66>
    2120:	2700      	movs	r7, #0
    2122:	e7e5      	b.n	20f0 <.LLST0+0x19>
    2124:	2700      	movs	r7, #0
    2126:	e7e3      	b.n	20f0 <.LLST0+0x19>
    2128:	2141      	movs	r1, #65	; 0x41
    212a:	0028      	movs	r0, r5
    212c:	f7ff fb1f 	bl	176e <sendError>

00002130 <.LVL66>:
    2130:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2132:	2114      	movs	r1, #20
    2134:	0028      	movs	r0, r5
    2136:	f7ff fb1a 	bl	176e <sendError>

0000213a <.LVL69>:
    213a:	e7f9      	b.n	2130 <.LVL66>
    213c:	20007dd8 	.word	0x20007dd8

00002140 <getBlockData>:
    2140:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2142:	0005      	movs	r5, r0
    2144:	68c1      	ldr	r1, [r0, #12]
    2146:	7888      	ldrb	r0, [r1, #2]
    2148:	0200      	lsls	r0, r0, #8
    214a:	78cb      	ldrb	r3, [r1, #3]
    214c:	041b      	lsls	r3, r3, #16
    214e:	18c0      	adds	r0, r0, r3
    2150:	784b      	ldrb	r3, [r1, #1]
    2152:	18c0      	adds	r0, r0, r3
    2154:	790b      	ldrb	r3, [r1, #4]
    2156:	061b      	lsls	r3, r3, #24
    2158:	4684      	mov	ip, r0
    215a:	449c      	add	ip, r3
    215c:	4663      	mov	r3, ip
    215e:	881f      	ldrh	r7, [r3, #0]
    2160:	4b1a      	ldr	r3, [pc, #104]	; (21cc <.LVL84+0x4>)
    2162:	681e      	ldr	r6, [r3, #0]
    2164:	6873      	ldr	r3, [r6, #4]
    2166:	881b      	ldrh	r3, [r3, #0]
    2168:	42bb      	cmp	r3, r7
    216a:	d025      	beq.n	21b8 <.LVL79+0x2>
    216c:	6873      	ldr	r3, [r6, #4]
    216e:	881b      	ldrh	r3, [r3, #0]
    2170:	2b00      	cmp	r3, #0
    2172:	d023      	beq.n	21bc <.LLST10+0x3>
    2174:	2200      	movs	r2, #0
    2176:	3201      	adds	r2, #1
    2178:	b292      	uxth	r2, r2
    217a:	6874      	ldr	r4, [r6, #4]
    217c:	0053      	lsls	r3, r2, #1
    217e:	189b      	adds	r3, r3, r2
    2180:	00db      	lsls	r3, r3, #3
    2182:	0018      	movs	r0, r3
    2184:	5ae4      	ldrh	r4, [r4, r3]
    2186:	42bc      	cmp	r4, r7
    2188:	d003      	beq.n	2192 <.LLST11+0x19>
    218a:	6874      	ldr	r4, [r6, #4]
    218c:	5ae3      	ldrh	r3, [r4, r3]
    218e:	2b00      	cmp	r3, #0
    2190:	d1f1      	bne.n	2176 <.LLST12+0x1d>
    2192:	6873      	ldr	r3, [r6, #4]
    2194:	5a1b      	ldrh	r3, [r3, r0]
    2196:	2b00      	cmp	r3, #0
    2198:	d012      	beq.n	21c0 <.LLST10+0x7>
    219a:	6873      	ldr	r3, [r6, #4]
    219c:	3102      	adds	r1, #2
    219e:	1818      	adds	r0, r3, r0
    21a0:	68c3      	ldr	r3, [r0, #12]
    21a2:	4660      	mov	r0, ip
    21a4:	4798      	blx	r3
    21a6:	3002      	adds	r0, #2
    21a8:	7228      	strb	r0, [r5, #8]
    21aa:	2300      	movs	r3, #0
    21ac:	68ea      	ldr	r2, [r5, #12]
    21ae:	7053      	strb	r3, [r2, #1]
    21b0:	686b      	ldr	r3, [r5, #4]
    21b2:	0028      	movs	r0, r5
    21b4:	4798      	blx	r3

000021b6 <.LVL79>:
    21b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    21b8:	2000      	movs	r0, #0
    21ba:	e7ea      	b.n	2192 <.LLST11+0x19>
    21bc:	2000      	movs	r0, #0
    21be:	e7e8      	b.n	2192 <.LLST11+0x19>
    21c0:	2141      	movs	r1, #65	; 0x41
    21c2:	0028      	movs	r0, r5
    21c4:	f7ff fad3 	bl	176e <sendError>

000021c8 <.LVL84>:
    21c8:	e7f5      	b.n	21b6 <.LVL79>
    21ca:	46c0      	nop			; (mov r8, r8)
    21cc:	20007dd8 	.word	0x20007dd8

000021d0 <addBlockServices>:
    21d0:	6903      	ldr	r3, [r0, #16]
    21d2:	4a03      	ldr	r2, [pc, #12]	; (21e0 <.LLST24+0xf>)
    21d4:	625a      	str	r2, [r3, #36]	; 0x24
    21d6:	4a03      	ldr	r2, [pc, #12]	; (21e4 <.LLST24+0x13>)
    21d8:	61da      	str	r2, [r3, #28]
    21da:	4a03      	ldr	r2, [pc, #12]	; (21e8 <.LLST24+0x17>)
    21dc:	621a      	str	r2, [r3, #32]
    21de:	4770      	bx	lr
    21e0:	00001fd3 	.word	0x00001fd3
    21e4:	00002141 	.word	0x00002141
    21e8:	0000209d 	.word	0x0000209d

000021ec <addExtendedBlockServices>:
    21ec:	6903      	ldr	r3, [r0, #16]
    21ee:	4a01      	ldr	r2, [pc, #4]	; (21f4 <.LLST25+0x3>)
    21f0:	629a      	str	r2, [r3, #40]	; 0x28
    21f2:	4770      	bx	lr
    21f4:	00001ef5 	.word	0x00001ef5

Disassembly of section .rodata.sin_table%25:

000021f8 <sin_table>:
    21f8:	00650000 012e00c9 01f70192 02c0025b     ..e.........[...
    2208:	03880324 045103ed 051a04b5 05e2057e     $.....Q.....~...
    2218:	06aa0646 0772070e 083907d6 0901089d     F.....r...9.....
    2228:	09c70964 0a8e0a2b 0b540af1 0c1a0bb7     d...+.....T.....
    2238:	0cdf0c7c 0da40d41 0e680e06 0f2b0eca     |...A.....h...+.
    2248:	0fee0f8d 10b11050 11731112 123411d3     ....P.....s...4.
    2258:	12f41294 13b41354 14731413 153114d2     ....T.....s...1.
    2268:	15ee1590 16ab164c 17661709 182117c4     ....L.....f...!.
    2278:	18db187e 19931937 1a4b19ef 1b021aa7     ~...7.....K.....
    2288:	1bb81b5d 1c6c1c12 1d201cc6 1dd31d79     ].....l... .y...
    2298:	1e841e2b 1f341edc 1fe31f8c 2091203a     +.....4.....: . 
    22a8:	213d20e7 21e82193 2292223d 233b22e7     . =!.!.!=".".";#
    22b8:	23e2238e 24882435 252c24da 25cf257e     .#.#5$.$.$,%~%.%
    22c8:	26712620 271126c1 27af2760 284c27fe      &q&.&.'`'.'.'L(
    22d8:	28e7289a 29812935 2a1a29ce 2ab02a65     .(.(5).).).*e*.*
    22e8:	2b452afb 2bd82b8f 2c6a2c21 2cfa2cb2     .*E+.+.+!,j,.,.,
    22f8:	2d882d41 2e152dcf 2e9f2e5a 2f282ee4     A-.-.-..Z.....(/
    2308:	2faf2f6c 30342ff2 30b83076 313930f9     l/././40v0.0.091
    2318:	31b93179 323631f8 32b23274 332c32ef     y1.1.162t2.2.2,3
    2328:	33a33368 341933df 348d3453 34ff34c6     h3.3.3.4S4.4.4.4
    2338:	356e3537 35dc35a5 36483612 36b1367d     75n5.5.5.6H6}6.6
    2348:	371836e5 377e374b 37e137b0 38423812     .6.7K7~7.7.7.8B8
    2358:	38a13871 38fd38cf 3958392b 39b03984     q8.8.8.8+9X9.9.9
    2368:	3a0639db 3a593a30 3aab3a82 3afa3ad3     .9.:0:Y:.:.:.:.:
    2378:	3b473b21 3b923b6d 3bda3bb6 3c203bfd     !;G;m;.;.;.;.; <
    2388:	3c643c42 3ca53c85 3ce43cc5 3d213d03     B<d<.<.<.<.<.=!=
    2398:	3d5b3d3f 3d933d78 3dc93daf 3dfc3de3     ?=[=x=.=.=.=.=.=
    23a8:	3e2d3e15 3e5c3e45 3e883e72 3eb13e9d     .>->E>\>r>.>.>.>
    23b8:	3ed83ec5 3efd3eeb 3f203f0f 3f403f30     .>.>.>.>.? ?0?@?
    23c8:	3f5d3f4f 3f783f6b 3f913f85 3fa73f9c     O?]?k?x?.?.?.?.?
    23d8:	3fbb3fb1 3fcc3fc4 3fdb3fd4 3fe73fe1     .?.?.?.?.?.?.?.?
    23e8:	3ff13fec 3ff83ff5 3ffd3ffb 40003fff     .?.?.?.?.?.?.?.@
    23f8:	46c04000                                .@.F

Disassembly of section .text%26:

000023fc <sendSerialWrapper>:
    23fc:	b510      	push	{r4, lr}
    23fe:	4b02      	ldr	r3, [pc, #8]	; (2408 <sendSerialWrapper+0xc>)
    2400:	681b      	ldr	r3, [r3, #0]
    2402:	0008      	movs	r0, r1
    2404:	4798      	blx	r3
    2406:	bd10      	pop	{r4, pc}
    2408:	20007eb4 	.word	0x20007eb4

0000240c <receiveSerialWrapper>:
    240c:	b510      	push	{r4, lr}
    240e:	4b02      	ldr	r3, [pc, #8]	; (2418 <receiveSerialWrapper+0xc>)
    2410:	685b      	ldr	r3, [r3, #4]
    2412:	4798      	blx	r3
    2414:	bd10      	pop	{r4, pc}
    2416:	46c0      	nop			; (mov r8, r8)
    2418:	20007eb4 	.word	0x20007eb4

0000241c <isReceiveDataAvailableWrapper>:
    241c:	b510      	push	{r4, lr}
    241e:	4b02      	ldr	r3, [pc, #8]	; (2428 <isReceiveDataAvailableWrapper+0xc>)
    2420:	689b      	ldr	r3, [r3, #8]
    2422:	4798      	blx	r3
    2424:	bd10      	pop	{r4, pc}
    2426:	46c0      	nop			; (mov r8, r8)
    2428:	20007eb4 	.word	0x20007eb4

0000242c <isSendReadyWrapper>:
    242c:	b510      	push	{r4, lr}
    242e:	4b02      	ldr	r3, [pc, #8]	; (2438 <.LLST11+0x4>)
    2430:	68db      	ldr	r3, [r3, #12]
    2432:	4798      	blx	r3
    2434:	bd10      	pop	{r4, pc}
    2436:	46c0      	nop			; (mov r8, r8)
    2438:	20007eb4 	.word	0x20007eb4

0000243c <X2CScope_Initialise>:
    243c:	b570      	push	{r4, r5, r6, lr}
    243e:	f000 fe53 	bl	30e8 <initTableStruct>

00002442 <.LVL9>:
    2442:	4d1d      	ldr	r5, [pc, #116]	; (24b8 <.LVL21+0x4>)
    2444:	002e      	movs	r6, r5
    2446:	3610      	adds	r6, #16
    2448:	0030      	movs	r0, r6
    244a:	f000 fe31 	bl	30b0 <.LLST12>

0000244e <.LVL10>:
    244e:	0029      	movs	r1, r5
    2450:	3128      	adds	r1, #40	; 0x28
    2452:	4c1a      	ldr	r4, [pc, #104]	; (24bc <.LVL21+0x8>)
    2454:	3428      	adds	r4, #40	; 0x28
    2456:	2301      	movs	r3, #1
    2458:	22ff      	movs	r2, #255	; 0xff
    245a:	0020      	movs	r0, r4
    245c:	f7ff fd3a 	bl	1ed4 <initLNet>

00002460 <.LVL11>:
    2460:	0020      	movs	r0, r4
    2462:	f7ff fb3b 	bl	1adc <initServiceTable>

00002466 <.LVL12>:
    2466:	0020      	movs	r0, r4
    2468:	f7ff fb46 	bl	1af8 <addCoreServices>

0000246c <.LVL13>:
    246c:	0020      	movs	r0, r4
    246e:	f7ff feaf 	bl	21d0 <addBlockServices>

00002472 <.LVL14>:
    2472:	0020      	movs	r0, r4
    2474:	f7ff feba 	bl	21ec <addExtendedBlockServices>

00002478 <.LVL15>:
    2478:	0020      	movs	r0, r4
    247a:	f000 fe49 	bl	3110 <addTableStructProtocol>

0000247e <.LVL16>:
    247e:	0031      	movs	r1, r6
    2480:	0020      	movs	r0, r4
    2482:	f000 fe2f 	bl	30e4 <linkSerial>

00002486 <.LVL17>:
    2486:	4c0e      	ldr	r4, [pc, #56]	; (24c0 <.LVL21+0xc>)
    2488:	2301      	movs	r3, #1
    248a:	6822      	ldr	r2, [r4, #0]
    248c:	7313      	strb	r3, [r2, #12]
    248e:	2101      	movs	r1, #1
    2490:	0010      	movs	r0, r2
    2492:	f001 f8ef 	bl	3674 <.LFE59>

00002496 <.LVL18>:
    2496:	6823      	ldr	r3, [r4, #0]
    2498:	4a0a      	ldr	r2, [pc, #40]	; (24c4 <.LVL21+0x10>)
    249a:	605a      	str	r2, [r3, #4]
    249c:	4a0a      	ldr	r2, [pc, #40]	; (24c8 <.LLST13+0x2>)
    249e:	601a      	str	r2, [r3, #0]

000024a0 <.LBB4>:
    24a0:	4b0a      	ldr	r3, [pc, #40]	; (24cc <.LLST13+0x6>)
    24a2:	612b      	str	r3, [r5, #16]
    24a4:	4b0a      	ldr	r3, [pc, #40]	; (24d0 <.LLST13+0xa>)
    24a6:	616b      	str	r3, [r5, #20]
    24a8:	4b0a      	ldr	r3, [pc, #40]	; (24d4 <.LLST13+0xe>)
    24aa:	61ab      	str	r3, [r5, #24]
    24ac:	4b0a      	ldr	r3, [pc, #40]	; (24d8 <.LLST13+0x12>)
    24ae:	61eb      	str	r3, [r5, #28]

000024b0 <.LBE4>:
    24b0:	f001 f84c 	bl	354c <.LFE47>

000024b4 <.LVL21>:
    24b4:	bd70      	pop	{r4, r5, r6, pc}
    24b6:	46c0      	nop			; (mov r8, r8)
    24b8:	20007eb4 	.word	0x20007eb4
    24bc:	20007fb4 	.word	0x20007fb4
    24c0:	20007dd8 	.word	0x20007dd8
    24c4:	00003260 	.word	0x00003260
    24c8:	00003250 	.word	0x00003250
    24cc:	000023fd 	.word	0x000023fd
    24d0:	0000240d 	.word	0x0000240d
    24d4:	0000241d 	.word	0x0000241d
    24d8:	0000242d 	.word	0x0000242d

000024dc <X2CScope_Communicate>:
    24dc:	b510      	push	{r4, lr}
    24de:	4b03      	ldr	r3, [pc, #12]	; (24ec <.LVL22+0x4>)
    24e0:	0018      	movs	r0, r3
    24e2:	3028      	adds	r0, #40	; 0x28
    24e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    24e6:	4798      	blx	r3

000024e8 <.LVL22>:
    24e8:	bd10      	pop	{r4, pc}
    24ea:	46c0      	nop			; (mov r8, r8)
    24ec:	20007fb4 	.word	0x20007fb4

000024f0 <X2CScope_Update>:
    24f0:	b510      	push	{r4, lr}
    24f2:	f001 f833 	bl	355c <X2C_Update>

000024f6 <.LVL23>:
    24f6:	bd10      	pop	{r4, pc}

000024f8 <X2CScope_HookUARTFunctions>:
    24f8:	b510      	push	{r4, lr}
    24fa:	4c03      	ldr	r4, [pc, #12]	; (2508 <X2CScope_HookUARTFunctions+0x10>)
    24fc:	6020      	str	r0, [r4, #0]
    24fe:	6061      	str	r1, [r4, #4]
    2500:	60a2      	str	r2, [r4, #8]
    2502:	60e3      	str	r3, [r4, #12]
    2504:	bd10      	pop	{r4, pc}
    2506:	46c0      	nop			; (mov r8, r8)
    2508:	20007eb4 	.word	0x20007eb4

0000250c <initSerial>:
    250c:	4b04      	ldr	r3, [pc, #16]	; (2520 <.Ldebug_abbrev0+0xe>)
    250e:	6003      	str	r3, [r0, #0]
    2510:	4b04      	ldr	r3, [pc, #16]	; (2524 <.Ldebug_abbrev0+0x12>)
    2512:	6043      	str	r3, [r0, #4]
    2514:	4b04      	ldr	r3, [pc, #16]	; (2528 <.Ldebug_abbrev0+0x16>)
    2516:	6083      	str	r3, [r0, #8]
    2518:	4b04      	ldr	r3, [pc, #16]	; (252c <.Ldebug_abbrev0+0x1a>)
    251a:	60c3      	str	r3, [r0, #12]
    251c:	4770      	bx	lr
    251e:	46c0      	nop			; (mov r8, r8)
    2520:	000023fd 	.word	0x000023fd
    2524:	0000240d 	.word	0x0000240d
    2528:	0000241d 	.word	0x0000241d
    252c:	0000242d 	.word	0x0000242d

Disassembly of section .text.CLOCK_Initialize%27:

00002530 <CLOCK_Initialize>:
}

void CLOCK_Initialize (void)
{
    /* NVM Wait States */
    NVMCTRL_REGS->NVMCTRL_CTRLB |= NVMCTRL_CTRLB_RWS(NVMCTRL_CTRLB_RWS_DUAL_Val);
    2530:	4a34      	ldr	r2, [pc, #208]	; (2604 <.LLST17+0x1e>)
    2532:	6853      	ldr	r3, [r2, #4]
    2534:	2104      	movs	r1, #4
    2536:	430b      	orrs	r3, r1
    2538:	6053      	str	r3, [r2, #4]

0000253a <.LBB8>:
    uint32_t calibValue = (uint32_t)(((*(uint64_t*)0x806020) >> 19 ) & 0x3fffff);
    253a:	4b33      	ldr	r3, [pc, #204]	; (2608 <.LLST17+0x22>)
    253c:	685a      	ldr	r2, [r3, #4]
    253e:	0352      	lsls	r2, r2, #13
    2540:	681b      	ldr	r3, [r3, #0]
    2542:	0cdb      	lsrs	r3, r3, #19
    2544:	4313      	orrs	r3, r2
    2546:	029b      	lsls	r3, r3, #10
    2548:	0a9b      	lsrs	r3, r3, #10

0000254a <.LVL0>:
    OSCCTRL_REGS->OSCCTRL_CAL48M = calibValue;
    254a:	4a30      	ldr	r2, [pc, #192]	; (260c <.LLST17+0x26>)
    254c:	6393      	str	r3, [r2, #56]	; 0x38
    OSCCTRL_REGS->OSCCTRL_OSC48MDIV = OSCCTRL_OSC48MDIV_DIV(0);
    254e:	2300      	movs	r3, #0

00002550 <.LVL1>:
    2550:	7553      	strb	r3, [r2, #21]

00002552 <.LVL2>:
    while((OSCCTRL_REGS->OSCCTRL_OSC48MSYNCBUSY & OSCCTRL_OSC48MSYNCBUSY_OSC48MDIV_Msk) == OSCCTRL_OSC48MSYNCBUSY_OSC48MDIV_Msk)
    2552:	0011      	movs	r1, r2
    2554:	2204      	movs	r2, #4
    2556:	698b      	ldr	r3, [r1, #24]
    2558:	421a      	tst	r2, r3
    255a:	d1fc      	bne.n	2556 <.LVL2+0x4>
    while((OSCCTRL_REGS->OSCCTRL_STATUS & OSCCTRL_STATUS_OSC48MRDY_Msk) != OSCCTRL_STATUS_OSC48MRDY_Msk)
    255c:	492b      	ldr	r1, [pc, #172]	; (260c <.LLST17+0x26>)
    255e:	2210      	movs	r2, #16
    2560:	68cb      	ldr	r3, [r1, #12]
    2562:	421a      	tst	r2, r3
    2564:	d0fc      	beq.n	2560 <.LVL2+0xe>

00002566 <.LBB10>:
	OSC32KCTRL_REGS->OSC32KCTRL_OSC32K = 0x0;
    2566:	4b2a      	ldr	r3, [pc, #168]	; (2610 <.LLST17+0x2a>)
    2568:	2200      	movs	r2, #0
    256a:	619a      	str	r2, [r3, #24]
	OSC32KCTRL_REGS->OSC32KCTRL_RTCCTRL = OSC32KCTRL_RTCCTRL_RTCSEL(0);
    256c:	611a      	str	r2, [r3, #16]

0000256e <.LBB12>:
    GCLK_REGS->GCLK_GENCTRL[0] = GCLK_GENCTRL_DIV(1) | GCLK_GENCTRL_SRC(6) | GCLK_GENCTRL_GENEN_Msk;
    256e:	4a29      	ldr	r2, [pc, #164]	; (2614 <.LLST17+0x2e>)
    2570:	4b29      	ldr	r3, [pc, #164]	; (2618 <.LLST17+0x32>)
    2572:	621a      	str	r2, [r3, #32]
    while((GCLK_REGS->GCLK_SYNCBUSY & GCLK_SYNCBUSY_GENCTRL0_Msk) == GCLK_SYNCBUSY_GENCTRL0_Msk)
    2574:	0019      	movs	r1, r3
    2576:	2204      	movs	r2, #4
    2578:	684b      	ldr	r3, [r1, #4]
    257a:	421a      	tst	r2, r3
    257c:	d1fc      	bne.n	2578 <.LBB12+0xa>

0000257e <.LBE12>:
   GCLK0_Initialize();



	/* Selection of the Generator and write Lock for EIC */
    GCLK_REGS->GCLK_PCHCTRL[2] = GCLK_PCHCTRL_GEN(0x0)  | GCLK_PCHCTRL_CHEN_Msk;
    257e:	2140      	movs	r1, #64	; 0x40
    2580:	2388      	movs	r3, #136	; 0x88
    2582:	4a25      	ldr	r2, [pc, #148]	; (2618 <.LLST17+0x32>)
    2584:	50d1      	str	r1, [r2, r3]

    while ((GCLK_REGS->GCLK_PCHCTRL[2] & GCLK_PCHCTRL_CHEN_Msk) != GCLK_PCHCTRL_CHEN_Msk)
    2586:	0010      	movs	r0, r2
    2588:	3148      	adds	r1, #72	; 0x48
    258a:	2240      	movs	r2, #64	; 0x40
    258c:	5843      	ldr	r3, [r0, r1]
    258e:	421a      	tst	r2, r3
    2590:	d0fc      	beq.n	258c <.LBE12+0xe>
    {
        /* Wait for synchronization */
    }
	/* Selection of the Generator and write Lock for EVSYS_0 */
    GCLK_REGS->GCLK_PCHCTRL[6] = GCLK_PCHCTRL_GEN(0x0)  | GCLK_PCHCTRL_CHEN_Msk;
    2592:	2140      	movs	r1, #64	; 0x40
    2594:	2398      	movs	r3, #152	; 0x98
    2596:	4a20      	ldr	r2, [pc, #128]	; (2618 <.LLST17+0x32>)
    2598:	50d1      	str	r1, [r2, r3]

    while ((GCLK_REGS->GCLK_PCHCTRL[6] & GCLK_PCHCTRL_CHEN_Msk) != GCLK_PCHCTRL_CHEN_Msk)
    259a:	0010      	movs	r0, r2
    259c:	3158      	adds	r1, #88	; 0x58
    259e:	2240      	movs	r2, #64	; 0x40
    25a0:	5843      	ldr	r3, [r0, r1]
    25a2:	421a      	tst	r2, r3
    25a4:	d0fc      	beq.n	25a0 <.LBE12+0x22>
    {
        /* Wait for synchronization */
    }
	/* Selection of the Generator and write Lock for EVSYS_1 */
    GCLK_REGS->GCLK_PCHCTRL[7] = GCLK_PCHCTRL_GEN(0x0)  | GCLK_PCHCTRL_CHEN_Msk;
    25a6:	2140      	movs	r1, #64	; 0x40
    25a8:	239c      	movs	r3, #156	; 0x9c
    25aa:	4a1b      	ldr	r2, [pc, #108]	; (2618 <.LLST17+0x32>)
    25ac:	50d1      	str	r1, [r2, r3]

    while ((GCLK_REGS->GCLK_PCHCTRL[7] & GCLK_PCHCTRL_CHEN_Msk) != GCLK_PCHCTRL_CHEN_Msk)
    25ae:	0010      	movs	r0, r2
    25b0:	315c      	adds	r1, #92	; 0x5c
    25b2:	2240      	movs	r2, #64	; 0x40
    25b4:	5843      	ldr	r3, [r0, r1]
    25b6:	421a      	tst	r2, r3
    25b8:	d0fc      	beq.n	25b4 <.LLST18+0x13>
    {
        /* Wait for synchronization */
    }
	/* Selection of the Generator and write Lock for SERCOM3_CORE */
    GCLK_REGS->GCLK_PCHCTRL[22] = GCLK_PCHCTRL_GEN(0x0)  | GCLK_PCHCTRL_CHEN_Msk;
    25ba:	2140      	movs	r1, #64	; 0x40
    25bc:	23d8      	movs	r3, #216	; 0xd8
    25be:	4a16      	ldr	r2, [pc, #88]	; (2618 <.LLST17+0x32>)
    25c0:	50d1      	str	r1, [r2, r3]

    while ((GCLK_REGS->GCLK_PCHCTRL[22] & GCLK_PCHCTRL_CHEN_Msk) != GCLK_PCHCTRL_CHEN_Msk)
    25c2:	0010      	movs	r0, r2
    25c4:	3198      	adds	r1, #152	; 0x98
    25c6:	2240      	movs	r2, #64	; 0x40
    25c8:	5843      	ldr	r3, [r0, r1]
    25ca:	421a      	tst	r2, r3
    25cc:	d0fc      	beq.n	25c8 <.LLST18+0x27>
    {
        /* Wait for synchronization */
    }
	/* Selection of the Generator and write Lock for TCC0 TCC1 */
    GCLK_REGS->GCLK_PCHCTRL[28] = GCLK_PCHCTRL_GEN(0x0)  | GCLK_PCHCTRL_CHEN_Msk;
    25ce:	2140      	movs	r1, #64	; 0x40
    25d0:	23f0      	movs	r3, #240	; 0xf0
    25d2:	4a11      	ldr	r2, [pc, #68]	; (2618 <.LLST17+0x32>)
    25d4:	50d1      	str	r1, [r2, r3]

    while ((GCLK_REGS->GCLK_PCHCTRL[28] & GCLK_PCHCTRL_CHEN_Msk) != GCLK_PCHCTRL_CHEN_Msk)
    25d6:	0010      	movs	r0, r2
    25d8:	31b0      	adds	r1, #176	; 0xb0
    25da:	2240      	movs	r2, #64	; 0x40
    25dc:	5843      	ldr	r3, [r0, r1]
    25de:	421a      	tst	r2, r3
    25e0:	d0fc      	beq.n	25dc <.LLST18+0x3b>
    {
        /* Wait for synchronization */
    }
	/* Selection of the Generator and write Lock for ADC1 */
    GCLK_REGS->GCLK_PCHCTRL[34] = GCLK_PCHCTRL_GEN(0x0)  | GCLK_PCHCTRL_CHEN_Msk;
    25e2:	2140      	movs	r1, #64	; 0x40
    25e4:	2384      	movs	r3, #132	; 0x84
    25e6:	005b      	lsls	r3, r3, #1
    25e8:	4a0b      	ldr	r2, [pc, #44]	; (2618 <.LLST17+0x32>)
    25ea:	50d1      	str	r1, [r2, r3]

    while ((GCLK_REGS->GCLK_PCHCTRL[34] & GCLK_PCHCTRL_CHEN_Msk) != GCLK_PCHCTRL_CHEN_Msk)
    25ec:	0010      	movs	r0, r2
    25ee:	0019      	movs	r1, r3
    25f0:	2240      	movs	r2, #64	; 0x40
    25f2:	5843      	ldr	r3, [r0, r1]
    25f4:	421a      	tst	r2, r3
    25f6:	d0fc      	beq.n	25f2 <.LLST17+0xc>
    {
        /* Wait for synchronization */
    }

    /* Configure the AHB Bridge Clocks */
    MCLK_REGS->MCLK_AHBMASK = 0x1cff;
    25f8:	4b08      	ldr	r3, [pc, #32]	; (261c <.LLST17+0x36>)
    25fa:	4a09      	ldr	r2, [pc, #36]	; (2620 <.LLST17+0x3a>)
    25fc:	611a      	str	r2, [r3, #16]

    /* Configure the APBC Bridge Clocks */
    MCLK_REGS->MCLK_APBCMASK = 0x40211;
    25fe:	4a09      	ldr	r2, [pc, #36]	; (2624 <.LLST17+0x3e>)
    2600:	61da      	str	r2, [r3, #28]

}
    2602:	4770      	bx	lr
    2604:	41004000 	.word	0x41004000
    2608:	00806020 	.word	0x00806020
    260c:	40001000 	.word	0x40001000
    2610:	40001400 	.word	0x40001400
    2614:	00010106 	.word	0x00010106
    2618:	40001c00 	.word	0x40001c00
    261c:	40000800 	.word	0x40000800
    2620:	00001cff 	.word	0x00001cff
    2624:	00040211 	.word	0x00040211

Disassembly of section .text%28:

00002628 <Common_Init>:
    2628:	4770      	bx	lr

0000262a <Common_Update>:
    262a:	4770      	bx	lr

0000262c <Common_Load>:
    262c:	2000      	movs	r0, #0
    262e:	4770      	bx	lr

00002630 <Common_Save>:
    2630:	1e50      	subs	r0, r2, #1
    2632:	4182      	sbcs	r2, r0
    2634:	b210      	sxth	r0, r2
    2636:	4770      	bx	lr

00002638 <Common_GetAddress>:
    2638:	2000      	movs	r0, #0
    263a:	4770      	bx	lr

0000263c <getAbsValI8>:
    263c:	237f      	movs	r3, #127	; 0x7f
    263e:	0002      	movs	r2, r0
    2640:	3280      	adds	r2, #128	; 0x80
    2642:	d001      	beq.n	2648 <getAbsValI8+0xc>
    2644:	1e03      	subs	r3, r0, #0
    2646:	db01      	blt.n	264c <.LLST1+0x1>
    2648:	0018      	movs	r0, r3
    264a:	4770      	bx	lr
    264c:	4240      	negs	r0, r0
    264e:	b243      	sxtb	r3, r0
    2650:	e7fa      	b.n	2648 <getAbsValI8+0xc>

00002652 <getAbsValI16>:
    2652:	4b05      	ldr	r3, [pc, #20]	; (2668 <getAbsValI16+0x16>)
    2654:	4298      	cmp	r0, r3
    2656:	d004      	beq.n	2662 <getAbsValI16+0x10>
    2658:	1e03      	subs	r3, r0, #0
    265a:	da03      	bge.n	2664 <getAbsValI16+0x12>
    265c:	4240      	negs	r0, r0
    265e:	b203      	sxth	r3, r0
    2660:	e000      	b.n	2664 <getAbsValI16+0x12>
    2662:	4b02      	ldr	r3, [pc, #8]	; (266c <getAbsValI16+0x1a>)
    2664:	0018      	movs	r0, r3
    2666:	4770      	bx	lr
    2668:	ffff8000 	.word	0xffff8000
    266c:	00007fff 	.word	0x00007fff

00002670 <getAbsValI32>:
    2670:	2380      	movs	r3, #128	; 0x80
    2672:	061b      	lsls	r3, r3, #24
    2674:	4298      	cmp	r0, r3
    2676:	d003      	beq.n	2680 <.LLST2+0x9>
    2678:	17c3      	asrs	r3, r0, #31
    267a:	18c0      	adds	r0, r0, r3
    267c:	4058      	eors	r0, r3
    267e:	4770      	bx	lr
    2680:	4800      	ldr	r0, [pc, #0]	; (2684 <.LLST2+0xd>)
    2682:	e7fc      	b.n	267e <.LLST2+0x7>
    2684:	7fffffff 	.word	0x7fffffff

00002688 <getAbsValI64>:
    2688:	b530      	push	{r4, r5, lr}
    268a:	2800      	cmp	r0, #0
    268c:	d00a      	beq.n	26a4 <getAbsValI64+0x1c>
    268e:	17cc      	asrs	r4, r1, #31
    2690:	0025      	movs	r5, r4
    2692:	4060      	eors	r0, r4
    2694:	0002      	movs	r2, r0
    2696:	4061      	eors	r1, r4
    2698:	000b      	movs	r3, r1
    269a:	1b12      	subs	r2, r2, r4
    269c:	41ab      	sbcs	r3, r5
    269e:	0010      	movs	r0, r2
    26a0:	0019      	movs	r1, r3
    26a2:	bd30      	pop	{r4, r5, pc}
    26a4:	2380      	movs	r3, #128	; 0x80
    26a6:	061b      	lsls	r3, r3, #24
    26a8:	4299      	cmp	r1, r3
    26aa:	d1f0      	bne.n	268e <getAbsValI64+0x6>
    26ac:	2201      	movs	r2, #1
    26ae:	4252      	negs	r2, r2
    26b0:	4b00      	ldr	r3, [pc, #0]	; (26b4 <.LLST3+0x7>)
    26b2:	e7f4      	b.n	269e <getAbsValI64+0x16>
    26b4:	7fffffff 	.word	0x7fffffff

000026b8 <getAbsValR32>:
    26b8:	b510      	push	{r4, lr}
    26ba:	1c04      	adds	r4, r0, #0
    26bc:	2100      	movs	r1, #0
    26be:	f000 fae7 	bl	2c90 <__aeabi_fcmplt>
    26c2:	2800      	cmp	r0, #0
    26c4:	d101      	bne.n	26ca <getAbsValR32+0x12>
    26c6:	1c20      	adds	r0, r4, #0
    26c8:	bd10      	pop	{r4, pc}
    26ca:	2380      	movs	r3, #128	; 0x80
    26cc:	061b      	lsls	r3, r3, #24
    26ce:	469c      	mov	ip, r3
    26d0:	4464      	add	r4, ip
    26d2:	e7f8      	b.n	26c6 <getAbsValR32+0xe>

000026d4 <getAbsValR64>:
    26d4:	b570      	push	{r4, r5, r6, lr}
    26d6:	0005      	movs	r5, r0
    26d8:	000c      	movs	r4, r1
    26da:	2200      	movs	r2, #0
    26dc:	2300      	movs	r3, #0
    26de:	0028      	movs	r0, r5
    26e0:	0021      	movs	r1, r4
    26e2:	f000 fa61 	bl	2ba8 <__aeabi_dcmplt>
    26e6:	2800      	cmp	r0, #0
    26e8:	d102      	bne.n	26f0 <.LLST4+0x1a>
    26ea:	0028      	movs	r0, r5
    26ec:	0021      	movs	r1, r4
    26ee:	bd70      	pop	{r4, r5, r6, pc}
    26f0:	2380      	movs	r3, #128	; 0x80
    26f2:	061b      	lsls	r3, r3, #24
    26f4:	469c      	mov	ip, r3
    26f6:	4464      	add	r4, ip
    26f8:	e7f7      	b.n	26ea <.LLST4+0x14>

000026fa <.LFE10>:
    26fa:	46c0      	nop			; (mov r8, r8)

Disassembly of section .text.__register_exitproc%29:

000026fc <__register_exitproc>:
    26fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

000026fe <.LCFI0>:
    26fe:	46de      	mov	lr, fp
    2700:	469b      	mov	fp, r3
    2702:	4b31      	ldr	r3, [pc, #196]	; (27c8 <.LVL20+0x6>)

00002704 <.LVL1>:
    2704:	4645      	mov	r5, r8
    2706:	681c      	ldr	r4, [r3, #0]
    2708:	23a4      	movs	r3, #164	; 0xa4
    270a:	464e      	mov	r6, r9
    270c:	4657      	mov	r7, sl
    270e:	005b      	lsls	r3, r3, #1
    2710:	b5e0      	push	{r5, r6, r7, lr}

00002712 <.LCFI1>:
    2712:	0005      	movs	r5, r0
    2714:	58e0      	ldr	r0, [r4, r3]

00002716 <.LVL2>:
    2716:	000e      	movs	r6, r1
    2718:	4690      	mov	r8, r2
    271a:	2800      	cmp	r0, #0
    271c:	d04b      	beq.n	27b6 <.LVL16>
    271e:	6843      	ldr	r3, [r0, #4]
    2720:	2b1f      	cmp	r3, #31
    2722:	dc0d      	bgt.n	2740 <.LVL7>
    2724:	1c5c      	adds	r4, r3, #1
    2726:	2d00      	cmp	r5, #0
    2728:	d121      	bne.n	276e <.LVL10>

0000272a <.LVL3>:
    272a:	3302      	adds	r3, #2
    272c:	009b      	lsls	r3, r3, #2
    272e:	6044      	str	r4, [r0, #4]
    2730:	501e      	str	r6, [r3, r0]
    2732:	2000      	movs	r0, #0

00002734 <.LVL4>:
    2734:	bc3c      	pop	{r2, r3, r4, r5}
    2736:	4690      	mov	r8, r2
    2738:	4699      	mov	r9, r3
    273a:	46a2      	mov	sl, r4
    273c:	46ab      	mov	fp, r5
    273e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00002740 <.LVL7>:
    2740:	4b22      	ldr	r3, [pc, #136]	; (27cc <.LLST25+0x2>)
    2742:	2b00      	cmp	r3, #0
    2744:	d03c      	beq.n	27c0 <.LVL19>
    2746:	20c8      	movs	r0, #200	; 0xc8

00002748 <.LVL8>:
    2748:	0040      	lsls	r0, r0, #1
    274a:	e000      	b.n	274e <.LVL9>
    274c:	bf00      	nop

0000274e <.LVL9>:
    274e:	2800      	cmp	r0, #0
    2750:	d036      	beq.n	27c0 <.LVL19>
    2752:	22a4      	movs	r2, #164	; 0xa4
    2754:	2300      	movs	r3, #0
    2756:	0052      	lsls	r2, r2, #1
    2758:	58a1      	ldr	r1, [r4, r2]
    275a:	6043      	str	r3, [r0, #4]
    275c:	6001      	str	r1, [r0, #0]
    275e:	50a0      	str	r0, [r4, r2]
    2760:	3240      	adds	r2, #64	; 0x40
    2762:	5083      	str	r3, [r0, r2]
    2764:	3204      	adds	r2, #4
    2766:	5083      	str	r3, [r0, r2]
    2768:	2401      	movs	r4, #1
    276a:	2d00      	cmp	r5, #0
    276c:	d0dd      	beq.n	272a <.LVL3>

0000276e <.LVL10>:
    276e:	009a      	lsls	r2, r3, #2
    2770:	4691      	mov	r9, r2
    2772:	4481      	add	r9, r0
    2774:	4642      	mov	r2, r8
    2776:	2188      	movs	r1, #136	; 0x88
    2778:	464f      	mov	r7, r9
    277a:	507a      	str	r2, [r7, r1]
    277c:	22c4      	movs	r2, #196	; 0xc4
    277e:	0052      	lsls	r2, r2, #1
    2780:	4690      	mov	r8, r2

00002782 <.LVL11>:
    2782:	4480      	add	r8, r0
    2784:	4642      	mov	r2, r8
    2786:	3987      	subs	r1, #135	; 0x87

00002788 <.LVL12>:
    2788:	4099      	lsls	r1, r3
    278a:	6812      	ldr	r2, [r2, #0]
    278c:	468a      	mov	sl, r1
    278e:	430a      	orrs	r2, r1
    2790:	4694      	mov	ip, r2
    2792:	4642      	mov	r2, r8
    2794:	4661      	mov	r1, ip
    2796:	6011      	str	r1, [r2, #0]

00002798 <.LVL13>:
    2798:	2284      	movs	r2, #132	; 0x84
    279a:	4649      	mov	r1, r9
    279c:	465f      	mov	r7, fp
    279e:	0052      	lsls	r2, r2, #1
    27a0:	508f      	str	r7, [r1, r2]
    27a2:	2d02      	cmp	r5, #2
    27a4:	d1c1      	bne.n	272a <.LVL3>

000027a6 <.LVL14>:
    27a6:	0002      	movs	r2, r0
    27a8:	4655      	mov	r5, sl

000027aa <.LVL15>:
    27aa:	328d      	adds	r2, #141	; 0x8d
    27ac:	32ff      	adds	r2, #255	; 0xff
    27ae:	6811      	ldr	r1, [r2, #0]
    27b0:	430d      	orrs	r5, r1
    27b2:	6015      	str	r5, [r2, #0]
    27b4:	e7b9      	b.n	272a <.LVL3>

000027b6 <.LVL16>:
    27b6:	0020      	movs	r0, r4

000027b8 <.LVL17>:
    27b8:	304d      	adds	r0, #77	; 0x4d
    27ba:	30ff      	adds	r0, #255	; 0xff

000027bc <.LVL18>:
    27bc:	50e0      	str	r0, [r4, r3]
    27be:	e7ae      	b.n	271e <.LVL2+0x8>

000027c0 <.LVL19>:
    27c0:	2001      	movs	r0, #1

000027c2 <.LVL20>:
    27c2:	4240      	negs	r0, r0
    27c4:	e7b6      	b.n	2734 <.LVL4>
    27c6:	46c0      	nop			; (mov r8, r8)
    27c8:	00003680 	.word	0x00003680
    27cc:	00000000 	.word	0x00000000

Disassembly of section .text%30:

000027d0 <__gedf2>:
    27d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    27d2:	4645      	mov	r5, r8
    27d4:	46de      	mov	lr, fp
    27d6:	4657      	mov	r7, sl
    27d8:	464e      	mov	r6, r9
    27da:	b5e0      	push	{r5, r6, r7, lr}
    27dc:	031f      	lsls	r7, r3, #12
    27de:	0b3d      	lsrs	r5, r7, #12
    27e0:	4f2c      	ldr	r7, [pc, #176]	; (2894 <.LLST3+0x16>)
    27e2:	030e      	lsls	r6, r1, #12
    27e4:	004c      	lsls	r4, r1, #1
    27e6:	46ab      	mov	fp, r5
    27e8:	005d      	lsls	r5, r3, #1
    27ea:	4684      	mov	ip, r0
    27ec:	0b36      	lsrs	r6, r6, #12
    27ee:	0d64      	lsrs	r4, r4, #21
    27f0:	0fc9      	lsrs	r1, r1, #31
    27f2:	4690      	mov	r8, r2
    27f4:	0d6d      	lsrs	r5, r5, #21
    27f6:	0fdb      	lsrs	r3, r3, #31
    27f8:	42bc      	cmp	r4, r7
    27fa:	d02a      	beq.n	2852 <.LLST2>
    27fc:	4f25      	ldr	r7, [pc, #148]	; (2894 <.LLST3+0x16>)
    27fe:	42bd      	cmp	r5, r7
    2800:	d02d      	beq.n	285e <.LLST2+0xc>
    2802:	2c00      	cmp	r4, #0
    2804:	d10f      	bne.n	2826 <.LLST1+0xf>
    2806:	4330      	orrs	r0, r6
    2808:	0007      	movs	r7, r0
    280a:	4681      	mov	r9, r0
    280c:	4278      	negs	r0, r7
    280e:	4178      	adcs	r0, r7
    2810:	b2c0      	uxtb	r0, r0
    2812:	2d00      	cmp	r5, #0
    2814:	d117      	bne.n	2846 <.LLST1+0x2f>
    2816:	465f      	mov	r7, fp
    2818:	433a      	orrs	r2, r7
    281a:	d114      	bne.n	2846 <.LLST1+0x2f>
    281c:	464b      	mov	r3, r9
    281e:	2000      	movs	r0, #0
    2820:	2b00      	cmp	r3, #0
    2822:	d00a      	beq.n	283a <.LLST1+0x23>
    2824:	e006      	b.n	2834 <.LLST1+0x1d>
    2826:	2d00      	cmp	r5, #0
    2828:	d102      	bne.n	2830 <.LLST1+0x19>
    282a:	4658      	mov	r0, fp
    282c:	4302      	orrs	r2, r0
    282e:	d001      	beq.n	2834 <.LLST1+0x1d>
    2830:	4299      	cmp	r1, r3
    2832:	d018      	beq.n	2866 <.Ldebug_abbrev0+0x2>
    2834:	4248      	negs	r0, r1
    2836:	2101      	movs	r1, #1
    2838:	4308      	orrs	r0, r1
    283a:	bc3c      	pop	{r2, r3, r4, r5}
    283c:	4690      	mov	r8, r2
    283e:	4699      	mov	r9, r3
    2840:	46a2      	mov	sl, r4
    2842:	46ab      	mov	fp, r5
    2844:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2846:	2800      	cmp	r0, #0
    2848:	d0f2      	beq.n	2830 <.LLST1+0x19>
    284a:	2001      	movs	r0, #1
    284c:	3b01      	subs	r3, #1
    284e:	4318      	orrs	r0, r3
    2850:	e7f3      	b.n	283a <.LLST1+0x23>
    2852:	0037      	movs	r7, r6
    2854:	4307      	orrs	r7, r0
    2856:	d0d1      	beq.n	27fc <.LLST0+0x1f>
    2858:	2002      	movs	r0, #2
    285a:	4240      	negs	r0, r0
    285c:	e7ed      	b.n	283a <.LLST1+0x23>
    285e:	465f      	mov	r7, fp
    2860:	4317      	orrs	r7, r2
    2862:	d0ce      	beq.n	2802 <.LLST0+0x25>
    2864:	e7f8      	b.n	2858 <.LLST2+0x6>
    2866:	42ac      	cmp	r4, r5
    2868:	dce4      	bgt.n	2834 <.LLST1+0x1d>
    286a:	da03      	bge.n	2874 <.Ldebug_abbrev0+0x10>
    286c:	1e48      	subs	r0, r1, #1
    286e:	2101      	movs	r1, #1
    2870:	4308      	orrs	r0, r1
    2872:	e7e2      	b.n	283a <.LLST1+0x23>
    2874:	455e      	cmp	r6, fp
    2876:	d8dd      	bhi.n	2834 <.LLST1+0x1d>
    2878:	d006      	beq.n	2888 <.LLST3+0xa>
    287a:	2000      	movs	r0, #0
    287c:	455e      	cmp	r6, fp
    287e:	d2dc      	bcs.n	283a <.LLST1+0x23>
    2880:	2301      	movs	r3, #1
    2882:	1e48      	subs	r0, r1, #1
    2884:	4318      	orrs	r0, r3
    2886:	e7d8      	b.n	283a <.LLST1+0x23>
    2888:	45c4      	cmp	ip, r8
    288a:	d8d3      	bhi.n	2834 <.LLST1+0x1d>
    288c:	2000      	movs	r0, #0
    288e:	45c4      	cmp	ip, r8
    2890:	d3f6      	bcc.n	2880 <.LLST3+0x2>
    2892:	e7d2      	b.n	283a <.LLST1+0x23>
    2894:	000007ff 	.word	0x000007ff

00002898 <__ledf2>:
    2898:	b5f0      	push	{r4, r5, r6, r7, lr}
    289a:	464e      	mov	r6, r9
    289c:	4645      	mov	r5, r8
    289e:	46de      	mov	lr, fp
    28a0:	4657      	mov	r7, sl
    28a2:	005c      	lsls	r4, r3, #1
    28a4:	b5e0      	push	{r5, r6, r7, lr}
    28a6:	031f      	lsls	r7, r3, #12
    28a8:	0fdb      	lsrs	r3, r3, #31
    28aa:	4699      	mov	r9, r3
    28ac:	4b2a      	ldr	r3, [pc, #168]	; (2958 <.LLST6+0x2>)

000028ae <.LBB4>:
    28ae:	030e      	lsls	r6, r1, #12
    28b0:	004d      	lsls	r5, r1, #1
    28b2:	0fc9      	lsrs	r1, r1, #31
    28b4:	4684      	mov	ip, r0
    28b6:	0b36      	lsrs	r6, r6, #12
    28b8:	0d6d      	lsrs	r5, r5, #21
    28ba:	468b      	mov	fp, r1

000028bc <.LBE4>:
    28bc:	4690      	mov	r8, r2
    28be:	0b3f      	lsrs	r7, r7, #12
    28c0:	0d64      	lsrs	r4, r4, #21
    28c2:	429d      	cmp	r5, r3
    28c4:	d020      	beq.n	2908 <.Ldebug_line0+0x27>
    28c6:	4b24      	ldr	r3, [pc, #144]	; (2958 <.LLST6+0x2>)
    28c8:	429c      	cmp	r4, r3
    28ca:	d022      	beq.n	2912 <.Ldebug_line0+0x31>
    28cc:	2d00      	cmp	r5, #0
    28ce:	d112      	bne.n	28f6 <.Ldebug_line0+0x15>
    28d0:	4330      	orrs	r0, r6
    28d2:	4243      	negs	r3, r0
    28d4:	4143      	adcs	r3, r0
    28d6:	b2db      	uxtb	r3, r3
    28d8:	2c00      	cmp	r4, #0
    28da:	d01f      	beq.n	291c <.Ldebug_line0+0x3b>
    28dc:	2b00      	cmp	r3, #0
    28de:	d00c      	beq.n	28fa <.Ldebug_line0+0x19>
    28e0:	464b      	mov	r3, r9
    28e2:	2001      	movs	r0, #1
    28e4:	3b01      	subs	r3, #1
    28e6:	4303      	orrs	r3, r0
    28e8:	0018      	movs	r0, r3
    28ea:	bc3c      	pop	{r2, r3, r4, r5}
    28ec:	4690      	mov	r8, r2
    28ee:	4699      	mov	r9, r3
    28f0:	46a2      	mov	sl, r4
    28f2:	46ab      	mov	fp, r5
    28f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    28f6:	2c00      	cmp	r4, #0
    28f8:	d016      	beq.n	2928 <.Ldebug_line0+0x47>
    28fa:	45cb      	cmp	fp, r9
    28fc:	d017      	beq.n	292e <.Ldebug_line0+0x4d>
    28fe:	465b      	mov	r3, fp
    2900:	4259      	negs	r1, r3
    2902:	2301      	movs	r3, #1
    2904:	430b      	orrs	r3, r1
    2906:	e7ef      	b.n	28e8 <.Ldebug_line0+0x7>
    2908:	0031      	movs	r1, r6
    290a:	2302      	movs	r3, #2
    290c:	4301      	orrs	r1, r0
    290e:	d1eb      	bne.n	28e8 <.Ldebug_line0+0x7>
    2910:	e7d9      	b.n	28c6 <.LBE4+0xa>
    2912:	0039      	movs	r1, r7
    2914:	2302      	movs	r3, #2
    2916:	4311      	orrs	r1, r2
    2918:	d1e6      	bne.n	28e8 <.Ldebug_line0+0x7>
    291a:	e7d7      	b.n	28cc <.LLST5+0x3>
    291c:	433a      	orrs	r2, r7
    291e:	d1dd      	bne.n	28dc <.LLST5+0x13>
    2920:	2300      	movs	r3, #0
    2922:	2800      	cmp	r0, #0
    2924:	d0e0      	beq.n	28e8 <.Ldebug_line0+0x7>
    2926:	e7ea      	b.n	28fe <.Ldebug_line0+0x1d>
    2928:	433a      	orrs	r2, r7
    292a:	d1e6      	bne.n	28fa <.Ldebug_line0+0x19>
    292c:	e7e7      	b.n	28fe <.Ldebug_line0+0x1d>
    292e:	42a5      	cmp	r5, r4
    2930:	dce5      	bgt.n	28fe <.Ldebug_line0+0x1d>
    2932:	db05      	blt.n	2940 <.Ldebug_line0+0x5f>
    2934:	42be      	cmp	r6, r7
    2936:	d8e2      	bhi.n	28fe <.Ldebug_line0+0x1d>
    2938:	d007      	beq.n	294a <.Ldebug_line0+0x69>
    293a:	2300      	movs	r3, #0
    293c:	42be      	cmp	r6, r7
    293e:	d2d3      	bcs.n	28e8 <.Ldebug_line0+0x7>
    2940:	4659      	mov	r1, fp
    2942:	2301      	movs	r3, #1
    2944:	3901      	subs	r1, #1
    2946:	430b      	orrs	r3, r1
    2948:	e7ce      	b.n	28e8 <.Ldebug_line0+0x7>
    294a:	45c4      	cmp	ip, r8
    294c:	d8d7      	bhi.n	28fe <.Ldebug_line0+0x1d>
    294e:	2300      	movs	r3, #0
    2950:	45c4      	cmp	ip, r8
    2952:	d3f5      	bcc.n	2940 <.Ldebug_line0+0x5f>
    2954:	e7c8      	b.n	28e8 <.Ldebug_line0+0x7>
    2956:	46c0      	nop			; (mov r8, r8)
    2958:	000007ff 	.word	0x000007ff

Disassembly of section .text.__pic32c_data_initialization%32:

0000295c <__pic32c_data_initialization>:
    295c:	4a20      	ldr	r2, [pc, #128]	; (29e0 <.Ldebug_abbrev0+0x11>)
    295e:	4b21      	ldr	r3, [pc, #132]	; (29e4 <.LLST11+0x1>)
    2960:	b570      	push	{r4, r5, r6, lr}
    2962:	2100      	movs	r1, #0
    2964:	4293      	cmp	r3, r2
    2966:	d203      	bcs.n	2970 <.LLST7+0x7>
    2968:	7019      	strb	r1, [r3, #0]
    296a:	3301      	adds	r3, #1
    296c:	4293      	cmp	r3, r2
    296e:	d1fb      	bne.n	2968 <__pic32c_data_initialization+0xc>
    2970:	2500      	movs	r5, #0
    2972:	2603      	movs	r6, #3
    2974:	481c      	ldr	r0, [pc, #112]	; (29e8 <.LLST11+0x5>)
    2976:	6803      	ldr	r3, [r0, #0]
    2978:	6841      	ldr	r1, [r0, #4]
    297a:	2b00      	cmp	r3, #0
    297c:	d118      	bne.n	29b0 <.LLST9+0xb>
    297e:	2900      	cmp	r1, #0
    2980:	d02d      	beq.n	29de <.Ldebug_abbrev0+0xf>
    2982:	6883      	ldr	r3, [r0, #8]
    2984:	300c      	adds	r0, #12
    2986:	2b00      	cmp	r3, #0
    2988:	d018      	beq.n	29bc <.LLST9+0x17>
    298a:	2300      	movs	r3, #0
    298c:	2200      	movs	r2, #0
    298e:	5c84      	ldrb	r4, [r0, r2]
    2990:	549c      	strb	r4, [r3, r2]
    2992:	3201      	adds	r2, #1
    2994:	428a      	cmp	r2, r1
    2996:	d3fa      	bcc.n	298e <.Ldebug_abbrev0+0x11>
    2998:	0033      	movs	r3, r6
    299a:	400b      	ands	r3, r1
    299c:	1e5a      	subs	r2, r3, #1
    299e:	4193      	sbcs	r3, r2
    29a0:	0889      	lsrs	r1, r1, #2
    29a2:	1859      	adds	r1, r3, r1
    29a4:	0089      	lsls	r1, r1, #2
    29a6:	1840      	adds	r0, r0, r1
    29a8:	6803      	ldr	r3, [r0, #0]
    29aa:	6841      	ldr	r1, [r0, #4]
    29ac:	2b00      	cmp	r3, #0
    29ae:	d0e6      	beq.n	297e <.Ldebug_abbrev0+0x1>
    29b0:	6882      	ldr	r2, [r0, #8]
    29b2:	300c      	adds	r0, #12
    29b4:	2a00      	cmp	r2, #0
    29b6:	d107      	bne.n	29c8 <.LLST10+0x5>
    29b8:	2900      	cmp	r1, #0
    29ba:	d0dc      	beq.n	2976 <.LLST7+0xd>
    29bc:	1859      	adds	r1, r3, r1
    29be:	701d      	strb	r5, [r3, #0]
    29c0:	3301      	adds	r3, #1
    29c2:	428b      	cmp	r3, r1
    29c4:	d1fb      	bne.n	29be <.LLST9+0x19>
    29c6:	e7d6      	b.n	2976 <.LLST7+0xd>
    29c8:	2900      	cmp	r1, #0
    29ca:	d1df      	bne.n	298c <.Ldebug_abbrev0+0xf>
    29cc:	0033      	movs	r3, r6
    29ce:	400b      	ands	r3, r1
    29d0:	1e5a      	subs	r2, r3, #1
    29d2:	4193      	sbcs	r3, r2
    29d4:	0889      	lsrs	r1, r1, #2
    29d6:	1859      	adds	r1, r3, r1
    29d8:	0089      	lsls	r1, r1, #2
    29da:	1840      	adds	r0, r0, r1
    29dc:	e7e4      	b.n	29a8 <.LLST9+0x3>
    29de:	bd70      	pop	{r4, r5, r6, pc}
    29e0:	20002188 	.word	0x20002188
    29e4:	20000000 	.word	0x20000000
    29e8:	00000cb8 	.word	0x00000cb8

Disassembly of section .text.EIC_Initialize%33:

000029ec <EIC_Initialize>:
/* EIC Channel Callback object */
EIC_CALLBACK_OBJ    eicCallbackObject[EXTINT_COUNT];


void EIC_Initialize (void)
{
    29ec:	b510      	push	{r4, lr}

000029ee <.LCFI0>:
    /* Reset all registers in the EIC module to their initial state and
	   EIC will be disabled. */
    EIC_REGS->EIC_CTRLA |= EIC_CTRLA_SWRST_Msk;
    29ee:	4a1f      	ldr	r2, [pc, #124]	; (2a6c <.LLST16+0x28>)
    29f0:	7813      	ldrb	r3, [r2, #0]
    29f2:	2101      	movs	r1, #1
    29f4:	430b      	orrs	r3, r1
    29f6:	7013      	strb	r3, [r2, #0]

    while((EIC_REGS->EIC_SYNCBUSY & EIC_SYNCBUSY_SWRST_Msk) == EIC_SYNCBUSY_SWRST_Msk)
    29f8:	0011      	movs	r1, r2
    29fa:	2201      	movs	r2, #1
    29fc:	684b      	ldr	r3, [r1, #4]
    29fe:	421a      	tst	r2, r3
    2a00:	d1fc      	bne.n	29fc <.LLST12+0x5>
    /* EIC is by default clocked by GCLK */

    /* NMI Control register */

    /* Interrupt sense type and filter control for EXTINT channels 0 to 7*/
    EIC_REGS->EIC_CONFIG[0] =  EIC_CONFIG_SENSE0_RISE  |
    2a02:	491a      	ldr	r1, [pc, #104]	; (2a6c <.LLST16+0x28>)
    2a04:	4b1a      	ldr	r3, [pc, #104]	; (2a70 <.LLST17>)
    2a06:	61cb      	str	r3, [r1, #28]
                              EIC_CONFIG_SENSE5_NONE  |
                              EIC_CONFIG_SENSE6_NONE  |
                              EIC_CONFIG_SENSE7_NONE ;

    /* Interrupt sense type and filter control for EXTINT channels 8 to 15 */
    EIC_REGS->EIC_CONFIG[1] =  EIC_CONFIG_SENSE0_NONE  |
    2a08:	23a0      	movs	r3, #160	; 0xa0
    2a0a:	05db      	lsls	r3, r3, #23
    2a0c:	620b      	str	r3, [r1, #32]
                              EIC_CONFIG_SENSE7_LOW ;



    /* Event Control Output enable */
    EIC_REGS->EIC_EVCTRL = 0x4;
    2a0e:	2304      	movs	r3, #4
    2a10:	608b      	str	r3, [r1, #8]


    /* External Interrupt enable*/
    EIC_REGS->EIC_INTENSET = 0x5;
    2a12:	3301      	adds	r3, #1
    2a14:	610b      	str	r3, [r1, #16]

    /* Callbacks for enabled interrupts */
    eicCallbackObject[0].eicPinNo = EIC_PIN_0;
    2a16:	4b17      	ldr	r3, [pc, #92]	; (2a74 <.LLST17+0x4>)
    2a18:	2200      	movs	r2, #0
    2a1a:	721a      	strb	r2, [r3, #8]
    eicCallbackObject[1].eicPinNo = EIC_PIN_MAX;
    2a1c:	3210      	adds	r2, #16
    2a1e:	751a      	strb	r2, [r3, #20]
    eicCallbackObject[2].eicPinNo = EIC_PIN_2;
    2a20:	2402      	movs	r4, #2
    2a22:	2020      	movs	r0, #32
    2a24:	541c      	strb	r4, [r3, r0]
    eicCallbackObject[3].eicPinNo = EIC_PIN_MAX;
    2a26:	300c      	adds	r0, #12
    2a28:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[4].eicPinNo = EIC_PIN_MAX;
    2a2a:	300c      	adds	r0, #12
    2a2c:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[5].eicPinNo = EIC_PIN_MAX;
    2a2e:	300c      	adds	r0, #12
    2a30:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[6].eicPinNo = EIC_PIN_MAX;
    2a32:	300c      	adds	r0, #12
    2a34:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[7].eicPinNo = EIC_PIN_MAX;
    2a36:	300c      	adds	r0, #12
    2a38:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[8].eicPinNo = EIC_PIN_MAX;
    2a3a:	300c      	adds	r0, #12
    2a3c:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[9].eicPinNo = EIC_PIN_MAX;
    2a3e:	300c      	adds	r0, #12
    2a40:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[10].eicPinNo = EIC_PIN_MAX;
    2a42:	300c      	adds	r0, #12
    2a44:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[11].eicPinNo = EIC_PIN_MAX;
    2a46:	300c      	adds	r0, #12
    2a48:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[12].eicPinNo = EIC_PIN_MAX;
    2a4a:	300c      	adds	r0, #12
    2a4c:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[13].eicPinNo = EIC_PIN_MAX;
    2a4e:	300c      	adds	r0, #12
    2a50:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[14].eicPinNo = EIC_PIN_MAX;
    2a52:	300c      	adds	r0, #12
    2a54:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[15].eicPinNo = EIC_PIN_MAX;
    2a56:	300c      	adds	r0, #12
    2a58:	541a      	strb	r2, [r3, r0]
    /* Enable the EIC */
    EIC_REGS->EIC_CTRLA |= EIC_CTRLA_ENABLE_Msk;
    2a5a:	780b      	ldrb	r3, [r1, #0]
    2a5c:	3a0e      	subs	r2, #14
    2a5e:	4313      	orrs	r3, r2
    2a60:	700b      	strb	r3, [r1, #0]

    while((EIC_REGS->EIC_SYNCBUSY & EIC_SYNCBUSY_ENABLE_Msk) == EIC_SYNCBUSY_ENABLE_Msk)
    2a62:	684b      	ldr	r3, [r1, #4]
    2a64:	421a      	tst	r2, r3
    2a66:	d1fc      	bne.n	2a62 <.LLST16+0x1e>
    {
        /* Wait for sync */
    }
}
    2a68:	bd10      	pop	{r4, pc}
    2a6a:	46c0      	nop			; (mov r8, r8)
    2a6c:	40002800 	.word	0x40002800
    2a70:	00000501 	.word	0x00000501
    2a74:	20000008 	.word	0x20000008

Disassembly of section .text%34:

00002a78 <__lesf2>:
    2a78:	b5f0      	push	{r4, r5, r6, r7, lr}
    2a7a:	0042      	lsls	r2, r0, #1
    2a7c:	024d      	lsls	r5, r1, #9
    2a7e:	004c      	lsls	r4, r1, #1
    2a80:	0246      	lsls	r6, r0, #9
    2a82:	0a76      	lsrs	r6, r6, #9
    2a84:	0e12      	lsrs	r2, r2, #24
    2a86:	0fc3      	lsrs	r3, r0, #31
    2a88:	0a6d      	lsrs	r5, r5, #9
    2a8a:	0e24      	lsrs	r4, r4, #24
    2a8c:	0fc9      	lsrs	r1, r1, #31
    2a8e:	2aff      	cmp	r2, #255	; 0xff
    2a90:	d016      	beq.n	2ac0 <.LLST20+0x15>
    2a92:	2cff      	cmp	r4, #255	; 0xff
    2a94:	d018      	beq.n	2ac8 <.LLST20+0x1d>
    2a96:	2a00      	cmp	r2, #0
    2a98:	d10a      	bne.n	2ab0 <.LLST20+0x5>
    2a9a:	4270      	negs	r0, r6
    2a9c:	4170      	adcs	r0, r6
    2a9e:	b2c0      	uxtb	r0, r0
    2aa0:	2c00      	cmp	r4, #0
    2aa2:	d015      	beq.n	2ad0 <.LLST20+0x25>
    2aa4:	2800      	cmp	r0, #0
    2aa6:	d005      	beq.n	2ab4 <.LLST20+0x9>
    2aa8:	2001      	movs	r0, #1
    2aaa:	3901      	subs	r1, #1
    2aac:	4308      	orrs	r0, r1
    2aae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2ab0:	2c00      	cmp	r4, #0
    2ab2:	d013      	beq.n	2adc <.LLST21+0x8>
    2ab4:	4299      	cmp	r1, r3
    2ab6:	d014      	beq.n	2ae2 <.LLST21+0xe>
    2ab8:	2001      	movs	r0, #1
    2aba:	425b      	negs	r3, r3
    2abc:	4318      	orrs	r0, r3
    2abe:	e7f6      	b.n	2aae <.LLST20+0x3>
    2ac0:	2002      	movs	r0, #2
    2ac2:	2e00      	cmp	r6, #0
    2ac4:	d1f3      	bne.n	2aae <.LLST20+0x3>
    2ac6:	e7e4      	b.n	2a92 <.LLST18+0xe>
    2ac8:	2002      	movs	r0, #2
    2aca:	2d00      	cmp	r5, #0
    2acc:	d1ef      	bne.n	2aae <.LLST20+0x3>
    2ace:	e7e2      	b.n	2a96 <.LLST18+0x12>
    2ad0:	2d00      	cmp	r5, #0
    2ad2:	d1e7      	bne.n	2aa4 <.LLST19+0xc>
    2ad4:	2000      	movs	r0, #0
    2ad6:	2e00      	cmp	r6, #0
    2ad8:	d0e9      	beq.n	2aae <.LLST20+0x3>
    2ada:	e7ed      	b.n	2ab8 <.LLST20+0xd>
    2adc:	2d00      	cmp	r5, #0
    2ade:	d1e9      	bne.n	2ab4 <.LLST20+0x9>
    2ae0:	e7ea      	b.n	2ab8 <.LLST20+0xd>
    2ae2:	42a2      	cmp	r2, r4
    2ae4:	dc06      	bgt.n	2af4 <.LLST22+0x1>
    2ae6:	dbdf      	blt.n	2aa8 <.LLST19+0x10>
    2ae8:	42ae      	cmp	r6, r5
    2aea:	d803      	bhi.n	2af4 <.LLST22+0x1>
    2aec:	2000      	movs	r0, #0
    2aee:	42ae      	cmp	r6, r5
    2af0:	d3da      	bcc.n	2aa8 <.LLST19+0x10>
    2af2:	e7dc      	b.n	2aae <.LLST20+0x3>
    2af4:	2001      	movs	r0, #1
    2af6:	4249      	negs	r1, r1
    2af8:	4308      	orrs	r0, r1
    2afa:	e7d8      	b.n	2aae <.LLST20+0x3>

00002afc <__gesf2>:
    2afc:	b5f0      	push	{r4, r5, r6, r7, lr}
    2afe:	0042      	lsls	r2, r0, #1
    2b00:	0245      	lsls	r5, r0, #9
    2b02:	024c      	lsls	r4, r1, #9
    2b04:	0fc3      	lsrs	r3, r0, #31
    2b06:	0048      	lsls	r0, r1, #1
    2b08:	0a6d      	lsrs	r5, r5, #9
    2b0a:	0e12      	lsrs	r2, r2, #24
    2b0c:	0a64      	lsrs	r4, r4, #9
    2b0e:	0e00      	lsrs	r0, r0, #24
    2b10:	0fc9      	lsrs	r1, r1, #31
    2b12:	2aff      	cmp	r2, #255	; 0xff
    2b14:	d01e      	beq.n	2b54 <.LLST3+0xb>
    2b16:	28ff      	cmp	r0, #255	; 0xff
    2b18:	d021      	beq.n	2b5e <.LLST3+0x15>
    2b1a:	2a00      	cmp	r2, #0
    2b1c:	d10a      	bne.n	2b34 <.LLST23+0x17>
    2b1e:	426e      	negs	r6, r5
    2b20:	416e      	adcs	r6, r5
    2b22:	b2f6      	uxtb	r6, r6
    2b24:	2800      	cmp	r0, #0
    2b26:	d10f      	bne.n	2b48 <.LLST23+0x2b>
    2b28:	2c00      	cmp	r4, #0
    2b2a:	d10d      	bne.n	2b48 <.LLST23+0x2b>
    2b2c:	2000      	movs	r0, #0
    2b2e:	2d00      	cmp	r5, #0
    2b30:	d009      	beq.n	2b46 <.LLST23+0x29>
    2b32:	e005      	b.n	2b40 <.LLST23+0x23>
    2b34:	2800      	cmp	r0, #0
    2b36:	d101      	bne.n	2b3c <.LLST23+0x1f>
    2b38:	2c00      	cmp	r4, #0
    2b3a:	d001      	beq.n	2b40 <.LLST23+0x23>
    2b3c:	428b      	cmp	r3, r1
    2b3e:	d011      	beq.n	2b64 <.LLST3+0x1b>
    2b40:	2101      	movs	r1, #1
    2b42:	4258      	negs	r0, r3
    2b44:	4308      	orrs	r0, r1
    2b46:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2b48:	2e00      	cmp	r6, #0
    2b4a:	d0f7      	beq.n	2b3c <.LLST23+0x1f>
    2b4c:	2001      	movs	r0, #1
    2b4e:	3901      	subs	r1, #1
    2b50:	4308      	orrs	r0, r1
    2b52:	e7f8      	b.n	2b46 <.LLST23+0x29>
    2b54:	2d00      	cmp	r5, #0
    2b56:	d0de      	beq.n	2b16 <__gesf2+0x1a>
    2b58:	2002      	movs	r0, #2
    2b5a:	4240      	negs	r0, r0
    2b5c:	e7f3      	b.n	2b46 <.LLST23+0x29>
    2b5e:	2c00      	cmp	r4, #0
    2b60:	d0db      	beq.n	2b1a <__gesf2+0x1e>
    2b62:	e7f9      	b.n	2b58 <.LLST3+0xf>
    2b64:	4282      	cmp	r2, r0
    2b66:	dceb      	bgt.n	2b40 <.LLST23+0x23>
    2b68:	db04      	blt.n	2b74 <.LLST2+0xa>
    2b6a:	42a5      	cmp	r5, r4
    2b6c:	d8e8      	bhi.n	2b40 <.LLST23+0x23>
    2b6e:	2000      	movs	r0, #0
    2b70:	42a5      	cmp	r5, r4
    2b72:	d2e8      	bcs.n	2b46 <.LLST23+0x29>
    2b74:	2101      	movs	r1, #1
    2b76:	1e58      	subs	r0, r3, #1
    2b78:	4308      	orrs	r0, r1
    2b7a:	e7e4      	b.n	2b46 <.LLST23+0x29>

00002b7c <__aeabi_cdrcmple>:
    2b7c:	4684      	mov	ip, r0
    2b7e:	1c10      	adds	r0, r2, #0
    2b80:	4662      	mov	r2, ip
    2b82:	468c      	mov	ip, r1
    2b84:	1c19      	adds	r1, r3, #0
    2b86:	4663      	mov	r3, ip
    2b88:	e000      	b.n	2b8c <__aeabi_cdcmpeq>
    2b8a:	46c0      	nop			; (mov r8, r8)

00002b8c <__aeabi_cdcmpeq>:
    2b8c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    2b8e:	f7ff fe83 	bl	2898 <__ledf2>
    2b92:	2800      	cmp	r0, #0
    2b94:	d401      	bmi.n	2b9a <__aeabi_cdcmpeq+0xe>
    2b96:	2100      	movs	r1, #0
    2b98:	42c8      	cmn	r0, r1
    2b9a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00002b9c <__aeabi_dcmpeq>:
    2b9c:	b510      	push	{r4, lr}
    2b9e:	f000 f89f 	bl	2ce0 <__eqdf2>
    2ba2:	4240      	negs	r0, r0
    2ba4:	3001      	adds	r0, #1
    2ba6:	bd10      	pop	{r4, pc}

00002ba8 <__aeabi_dcmplt>:
    2ba8:	b510      	push	{r4, lr}
    2baa:	f7ff fe75 	bl	2898 <__ledf2>
    2bae:	2800      	cmp	r0, #0
    2bb0:	db01      	blt.n	2bb6 <.LLST0+0xa>
    2bb2:	2000      	movs	r0, #0
    2bb4:	bd10      	pop	{r4, pc}
    2bb6:	2001      	movs	r0, #1
    2bb8:	bd10      	pop	{r4, pc}
    2bba:	46c0      	nop			; (mov r8, r8)

00002bbc <__aeabi_dcmple>:
    2bbc:	b510      	push	{r4, lr}
    2bbe:	f7ff fe6b 	bl	2898 <__ledf2>
    2bc2:	2800      	cmp	r0, #0
    2bc4:	dd01      	ble.n	2bca <__aeabi_dcmple+0xe>
    2bc6:	2000      	movs	r0, #0
    2bc8:	bd10      	pop	{r4, pc}
    2bca:	2001      	movs	r0, #1
    2bcc:	bd10      	pop	{r4, pc}
    2bce:	46c0      	nop			; (mov r8, r8)

00002bd0 <__aeabi_dcmpgt>:
    2bd0:	b510      	push	{r4, lr}
    2bd2:	f7ff fdfd 	bl	27d0 <.LFE0>
    2bd6:	2800      	cmp	r0, #0
    2bd8:	dc01      	bgt.n	2bde <__aeabi_dcmpgt+0xe>
    2bda:	2000      	movs	r0, #0
    2bdc:	bd10      	pop	{r4, pc}
    2bde:	2001      	movs	r0, #1
    2be0:	bd10      	pop	{r4, pc}
    2be2:	46c0      	nop			; (mov r8, r8)

00002be4 <__aeabi_dcmpge>:
    2be4:	b510      	push	{r4, lr}
    2be6:	f7ff fdf3 	bl	27d0 <.LFE0>
    2bea:	2800      	cmp	r0, #0
    2bec:	da01      	bge.n	2bf2 <.LLST8+0x5>
    2bee:	2000      	movs	r0, #0
    2bf0:	bd10      	pop	{r4, pc}
    2bf2:	2001      	movs	r0, #1
    2bf4:	bd10      	pop	{r4, pc}

00002bf6 <L0>:
    2bf6:	46c0      	nop			; (mov r8, r8)

Disassembly of section .text.SERCOM3_USART_Read%37:

00002bf8 <SERCOM3_USART_Read>:

    SERCOM3_REGS->USART_INT.SERCOM_DATA = data;
}

bool SERCOM3_USART_Read( void *buffer, const size_t size )
{
    2bf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

00002bfa <.LCFI2>:
    2bfa:	46ce      	mov	lr, r9
    2bfc:	4647      	mov	r7, r8
    2bfe:	b580      	push	{r7, lr}

00002c00 <.LCFI3>:
    2c00:	4680      	mov	r8, r0
    2c02:	000f      	movs	r7, r1

00002c04 <.LVL51>:
    uint8_t *pu8Data       = (uint8_t*)buffer;
    uint8_t u8dummyData    = 0;
    uint32_t u32Length     = size;
    uint32_t processedSize = 0;

    if(pu8Data != NULL)
    2c04:	2800      	cmp	r0, #0
    2c06:	d02a      	beq.n	2c5e <.LVL63>
    {
        /* Checks for error before receiving */
        if(SERCOM3_USART_ErrorGet() != USART_ERROR_NONE)
    2c08:	4b16      	ldr	r3, [pc, #88]	; (2c64 <.LVL64+0x4>)
    2c0a:	4798      	blx	r3

00002c0c <.LVL52>:
    2c0c:	2800      	cmp	r0, #0
    2c0e:	d00d      	beq.n	2c2c <.LVL53+0x8>
        {
            /* Clear all error flags */
            SERCOM3_REGS->USART_INT.SERCOM_INTFLAG = SERCOM_USART_INT_INTFLAG_ERROR_Msk;
    2c10:	4b15      	ldr	r3, [pc, #84]	; (2c68 <.LVL64+0x8>)
    2c12:	2280      	movs	r2, #128	; 0x80
    2c14:	761a      	strb	r2, [r3, #24]

            /* Clear error statuses */
            SERCOM3_REGS->USART_INT.SERCOM_STATUS = SERCOM_USART_INT_STATUS_Msk;
    2c16:	3a01      	subs	r2, #1
    2c18:	835a      	strh	r2, [r3, #26]

            /* Flush existing error bytes from the RX FIFO */
            while((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_RXC_Msk) == SERCOM_USART_INT_INTFLAG_RXC_Msk)
    2c1a:	7e1b      	ldrb	r3, [r3, #24]
    2c1c:	075b      	lsls	r3, r3, #29
    2c1e:	d505      	bpl.n	2c2c <.LVL53+0x8>
            {
                u8dummyData = SERCOM3_REGS->USART_INT.SERCOM_DATA;
    2c20:	4b11      	ldr	r3, [pc, #68]	; (2c68 <.LVL64+0x8>)
            while((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_RXC_Msk) == SERCOM_USART_INT_INTFLAG_RXC_Msk)
    2c22:	2104      	movs	r1, #4

00002c24 <.LVL53>:
                u8dummyData = SERCOM3_REGS->USART_INT.SERCOM_DATA;
    2c24:	8d1a      	ldrh	r2, [r3, #40]	; 0x28
            while((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_RXC_Msk) == SERCOM_USART_INT_INTFLAG_RXC_Msk)
    2c26:	7e1a      	ldrb	r2, [r3, #24]
    2c28:	420a      	tst	r2, r1
    2c2a:	d1fb      	bne.n	2c24 <.LVL53>
{
    2c2c:	2600      	movs	r6, #0
        }

        while(u32Length--)
        {
            /* Check if USART has new data */
            while((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_RXC_Msk) != SERCOM_USART_INT_INTFLAG_RXC_Msk);
    2c2e:	4c0e      	ldr	r4, [pc, #56]	; (2c68 <.LVL64+0x8>)
    2c30:	2504      	movs	r5, #4

            /* Read data from USART module */
            *pu8Data++ = SERCOM3_REGS->USART_INT.SERCOM_DATA;
            processedSize++;

            if(SERCOM3_USART_ErrorGet() != USART_ERROR_NONE)
    2c32:	4b0c      	ldr	r3, [pc, #48]	; (2c64 <.LVL64+0x4>)
    2c34:	4699      	mov	r9, r3

00002c36 <.LVL54>:
        while(u32Length--)
    2c36:	42be      	cmp	r6, r7
    2c38:	d009      	beq.n	2c4e <.LVL58>
            while((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_RXC_Msk) != SERCOM_USART_INT_INTFLAG_RXC_Msk);
    2c3a:	7e23      	ldrb	r3, [r4, #24]
    2c3c:	422b      	tst	r3, r5
    2c3e:	d0fc      	beq.n	2c3a <.LVL54+0x4>

00002c40 <.LVL55>:
            *pu8Data++ = SERCOM3_REGS->USART_INT.SERCOM_DATA;
    2c40:	8d23      	ldrh	r3, [r4, #40]	; 0x28
    2c42:	4642      	mov	r2, r8
    2c44:	5593      	strb	r3, [r2, r6]
            processedSize++;
    2c46:	3601      	adds	r6, #1

00002c48 <.LVL56>:
            if(SERCOM3_USART_ErrorGet() != USART_ERROR_NONE)
    2c48:	47c8      	blx	r9

00002c4a <.LVL57>:
    2c4a:	2800      	cmp	r0, #0
    2c4c:	d0f3      	beq.n	2c36 <.LVL54>

00002c4e <.LVL58>:
            {
                break;
            }
        }

        if(size == processedSize)
    2c4e:	1bf6      	subs	r6, r6, r7

00002c50 <.LVL59>:
    2c50:	4270      	negs	r0, r6
    2c52:	4170      	adcs	r0, r6
    2c54:	b2c0      	uxtb	r0, r0

00002c56 <.LVL60>:
            readStatus = true;
        }
    }

    return readStatus;
}
    2c56:	bc0c      	pop	{r2, r3}
    2c58:	4690      	mov	r8, r2
    2c5a:	4699      	mov	r9, r3
    2c5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00002c5e <.LVL63>:
    bool readStatus        = false;
    2c5e:	2000      	movs	r0, #0

00002c60 <.LVL64>:
    2c60:	e7f9      	b.n	2c56 <.LVL60>
    2c62:	46c0      	nop			; (mov r8, r8)
    2c64:	000035ed 	.word	0x000035ed
    2c68:	42001000 	.word	0x42001000

Disassembly of section .text%38:

00002c6c <__aeabi_cfrcmple>:
    2c6c:	4684      	mov	ip, r0
    2c6e:	1c08      	adds	r0, r1, #0
    2c70:	4661      	mov	r1, ip
    2c72:	e7ff      	b.n	2c74 <__aeabi_cfcmpeq>

00002c74 <__aeabi_cfcmpeq>:
    2c74:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    2c76:	f7ff feff 	bl	2a78 <.LFE47>
    2c7a:	2800      	cmp	r0, #0
    2c7c:	d401      	bmi.n	2c82 <.Ldebug_line0+0x7>
    2c7e:	2100      	movs	r1, #0
    2c80:	42c8      	cmn	r0, r1
    2c82:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00002c84 <__aeabi_fcmpeq>:
    2c84:	b510      	push	{r4, lr}
    2c86:	f000 fa55 	bl	3134 <__eqsf2>
    2c8a:	4240      	negs	r0, r0
    2c8c:	3001      	adds	r0, #1
    2c8e:	bd10      	pop	{r4, pc}

00002c90 <__aeabi_fcmplt>:
    2c90:	b510      	push	{r4, lr}
    2c92:	f7ff fef1 	bl	2a78 <.LFE47>
    2c96:	2800      	cmp	r0, #0
    2c98:	db01      	blt.n	2c9e <.LLST30+0x9>
    2c9a:	2000      	movs	r0, #0
    2c9c:	bd10      	pop	{r4, pc}
    2c9e:	2001      	movs	r0, #1
    2ca0:	bd10      	pop	{r4, pc}
    2ca2:	46c0      	nop			; (mov r8, r8)

00002ca4 <__aeabi_fcmple>:
    2ca4:	b510      	push	{r4, lr}
    2ca6:	f7ff fee7 	bl	2a78 <.LFE47>
    2caa:	2800      	cmp	r0, #0
    2cac:	dd01      	ble.n	2cb2 <.LLST5+0x9>
    2cae:	2000      	movs	r0, #0
    2cb0:	bd10      	pop	{r4, pc}
    2cb2:	2001      	movs	r0, #1
    2cb4:	bd10      	pop	{r4, pc}
    2cb6:	46c0      	nop			; (mov r8, r8)

00002cb8 <__aeabi_fcmpgt>:
    2cb8:	b510      	push	{r4, lr}
    2cba:	f7ff ff1f 	bl	2afc <__gesf2>
    2cbe:	2800      	cmp	r0, #0
    2cc0:	dc01      	bgt.n	2cc6 <__aeabi_fcmpgt+0xe>
    2cc2:	2000      	movs	r0, #0
    2cc4:	bd10      	pop	{r4, pc}
    2cc6:	2001      	movs	r0, #1
    2cc8:	bd10      	pop	{r4, pc}
    2cca:	46c0      	nop			; (mov r8, r8)

00002ccc <__aeabi_fcmpge>:
    2ccc:	b510      	push	{r4, lr}
    2cce:	f7ff ff15 	bl	2afc <__gesf2>
    2cd2:	2800      	cmp	r0, #0
    2cd4:	da01      	bge.n	2cda <__aeabi_fcmpge+0xe>
    2cd6:	2000      	movs	r0, #0
    2cd8:	bd10      	pop	{r4, pc}
    2cda:	2001      	movs	r0, #1
    2cdc:	bd10      	pop	{r4, pc}

00002cde <L0>:
    2cde:	46c0      	nop			; (mov r8, r8)

00002ce0 <__eqdf2>:
    2ce0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2ce2:	464f      	mov	r7, r9
    2ce4:	4646      	mov	r6, r8
    2ce6:	46d6      	mov	lr, sl
    2ce8:	005c      	lsls	r4, r3, #1
    2cea:	b5c0      	push	{r6, r7, lr}
    2cec:	031f      	lsls	r7, r3, #12
    2cee:	0fdb      	lsrs	r3, r3, #31
    2cf0:	469a      	mov	sl, r3
    2cf2:	4b17      	ldr	r3, [pc, #92]	; (2d50 <.Ldebug_abbrev0+0x5>)
    2cf4:	030e      	lsls	r6, r1, #12
    2cf6:	004d      	lsls	r5, r1, #1
    2cf8:	4684      	mov	ip, r0
    2cfa:	4680      	mov	r8, r0
    2cfc:	0b36      	lsrs	r6, r6, #12
    2cfe:	0d6d      	lsrs	r5, r5, #21
    2d00:	0fc9      	lsrs	r1, r1, #31
    2d02:	4691      	mov	r9, r2
    2d04:	0b3f      	lsrs	r7, r7, #12
    2d06:	0d64      	lsrs	r4, r4, #21
    2d08:	2001      	movs	r0, #1
    2d0a:	429d      	cmp	r5, r3
    2d0c:	d008      	beq.n	2d20 <.LLST3+0x16>
    2d0e:	429c      	cmp	r4, r3
    2d10:	d001      	beq.n	2d16 <.LLST3+0xc>
    2d12:	42a5      	cmp	r5, r4
    2d14:	d00b      	beq.n	2d2e <.LLST3+0x24>
    2d16:	bc1c      	pop	{r2, r3, r4}
    2d18:	4690      	mov	r8, r2
    2d1a:	4699      	mov	r9, r3
    2d1c:	46a2      	mov	sl, r4
    2d1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2d20:	4663      	mov	r3, ip
    2d22:	4333      	orrs	r3, r6
    2d24:	d1f7      	bne.n	2d16 <.LLST3+0xc>
    2d26:	42ac      	cmp	r4, r5
    2d28:	d1f5      	bne.n	2d16 <.LLST3+0xc>
    2d2a:	433a      	orrs	r2, r7
    2d2c:	d1f3      	bne.n	2d16 <.LLST3+0xc>
    2d2e:	2001      	movs	r0, #1
    2d30:	42be      	cmp	r6, r7
    2d32:	d1f0      	bne.n	2d16 <.LLST3+0xc>
    2d34:	45c8      	cmp	r8, r9
    2d36:	d1ee      	bne.n	2d16 <.LLST3+0xc>
    2d38:	4551      	cmp	r1, sl
    2d3a:	d007      	beq.n	2d4c <.Ldebug_abbrev0+0x1>
    2d3c:	2d00      	cmp	r5, #0
    2d3e:	d1ea      	bne.n	2d16 <.LLST3+0xc>
    2d40:	4663      	mov	r3, ip
    2d42:	431e      	orrs	r6, r3
    2d44:	0030      	movs	r0, r6
    2d46:	1e46      	subs	r6, r0, #1
    2d48:	41b0      	sbcs	r0, r6
    2d4a:	e7e4      	b.n	2d16 <.LLST3+0xc>
    2d4c:	2000      	movs	r0, #0
    2d4e:	e7e2      	b.n	2d16 <.LLST3+0xc>
    2d50:	000007ff 	.word	0x000007ff

Disassembly of section .text.PORT_Initialize%40:

00002d54 <PORT_Initialize>:
  Remarks:
    Refer plib_port.h file for more information.
*/

void PORT_Initialize(void)
{
    2d54:	b530      	push	{r4, r5, lr}

00002d56 <.LCFI0>:
   /************************** GROUP 0 Initialization *************************/
   PORT_REGS->GROUP[0].PORT_PINCFG[5] = 0x1;
    2d56:	2382      	movs	r3, #130	; 0x82
    2d58:	05db      	lsls	r3, r3, #23
    2d5a:	2201      	movs	r2, #1
    2d5c:	2145      	movs	r1, #69	; 0x45
    2d5e:	545a      	strb	r2, [r3, r1]
   PORT_REGS->GROUP[0].PORT_PINCFG[10] = 0x1;
    2d60:	3105      	adds	r1, #5
    2d62:	545a      	strb	r2, [r3, r1]
   PORT_REGS->GROUP[0].PORT_PINCFG[11] = 0x2;
    2d64:	3948      	subs	r1, #72	; 0x48
    2d66:	204b      	movs	r0, #75	; 0x4b
    2d68:	5419      	strb	r1, [r3, r0]
   PORT_REGS->GROUP[0].PORT_PINCFG[14] = 0x1;
    2d6a:	3003      	adds	r0, #3
    2d6c:	541a      	strb	r2, [r3, r0]
   PORT_REGS->GROUP[0].PORT_PINCFG[15] = 0x1;
    2d6e:	3001      	adds	r0, #1
    2d70:	541a      	strb	r2, [r3, r0]
   PORT_REGS->GROUP[0].PORT_PINCFG[16] = 0x1;
    2d72:	3001      	adds	r0, #1
    2d74:	541a      	strb	r2, [r3, r0]
   PORT_REGS->GROUP[0].PORT_PINCFG[18] = 0x1;
    2d76:	3002      	adds	r0, #2
    2d78:	541a      	strb	r2, [r3, r0]
   PORT_REGS->GROUP[0].PORT_PINCFG[22] = 0x1;
    2d7a:	3004      	adds	r0, #4
    2d7c:	541a      	strb	r2, [r3, r0]
   PORT_REGS->GROUP[0].PORT_PINCFG[23] = 0x1;
    2d7e:	3001      	adds	r0, #1
    2d80:	541a      	strb	r2, [r3, r0]

   PORT_REGS->GROUP[0].PORT_PMUX[2] = 0x40;
    2d82:	2440      	movs	r4, #64	; 0x40
    2d84:	3825      	subs	r0, #37	; 0x25
    2d86:	541c      	strb	r4, [r3, r0]
   PORT_REGS->GROUP[0].PORT_PMUX[5] = 0x5;
    2d88:	382d      	subs	r0, #45	; 0x2d
    2d8a:	3c0b      	subs	r4, #11
    2d8c:	5518      	strb	r0, [r3, r4]
   PORT_REGS->GROUP[0].PORT_PMUX[7] = 0x55;
    2d8e:	2555      	movs	r5, #85	; 0x55
    2d90:	3402      	adds	r4, #2
    2d92:	551d      	strb	r5, [r3, r4]
   PORT_REGS->GROUP[0].PORT_PMUX[8] = 0x5;
    2d94:	3401      	adds	r4, #1
    2d96:	5518      	strb	r0, [r3, r4]
   PORT_REGS->GROUP[0].PORT_PMUX[11] = 0x22;
    2d98:	3c16      	subs	r4, #22
    2d9a:	3036      	adds	r0, #54	; 0x36
    2d9c:	541c      	strb	r4, [r3, r0]
   /************************** GROUP 1 Initialization *************************/
   PORT_REGS->GROUP[1].PORT_DIR = 0x3000;
    2d9e:	24c0      	movs	r4, #192	; 0xc0
    2da0:	01a4      	lsls	r4, r4, #6
    2da2:	3045      	adds	r0, #69	; 0x45
    2da4:	501c      	str	r4, [r3, r0]
   PORT_REGS->GROUP[1].PORT_PINCFG[0] = 0x1;
    2da6:	3040      	adds	r0, #64	; 0x40
    2da8:	541a      	strb	r2, [r3, r0]
   PORT_REGS->GROUP[1].PORT_PINCFG[16] = 0x1;
    2daa:	3010      	adds	r0, #16
    2dac:	541a      	strb	r2, [r3, r0]
   PORT_REGS->GROUP[1].PORT_PINCFG[30] = 0x1;
    2dae:	300e      	adds	r0, #14
    2db0:	541a      	strb	r2, [r3, r0]
   PORT_REGS->GROUP[1].PORT_PINCFG[31] = 0x2;
    2db2:	3001      	adds	r0, #1
    2db4:	5419      	strb	r1, [r3, r0]

   PORT_REGS->GROUP[1].PORT_PMUX[0] = 0x1;
    2db6:	31ae      	adds	r1, #174	; 0xae
    2db8:	545a      	strb	r2, [r3, r1]
   PORT_REGS->GROUP[1].PORT_PMUX[15] = 0x4;
    2dba:	39ac      	subs	r1, #172	; 0xac
    2dbc:	32be      	adds	r2, #190	; 0xbe
    2dbe:	5499      	strb	r1, [r3, r2]
}
    2dc0:	bd30      	pop	{r4, r5, pc}

Disassembly of section .text.motorcontrol_vars_init%41:

00002dc4 <motorcontrol_vars_init>:
{
    2dc4:	b510      	push	{r4, lr}

00002dc6 <.LCFI0>:
  state_run = 0;
    2dc6:	2300      	movs	r3, #0
    2dc8:	4a0d      	ldr	r2, [pc, #52]	; (2e00 <.LLST16+0x30>)
    2dca:	7013      	strb	r3, [r2, #0]
  state_halt = 1;
    2dcc:	2201      	movs	r2, #1
    2dce:	490d      	ldr	r1, [pc, #52]	; (2e04 <.LLST17>)
    2dd0:	700a      	strb	r2, [r1, #0]
  ext_speed_ref_rpm = 0;
    2dd2:	2100      	movs	r1, #0
    2dd4:	480c      	ldr	r0, [pc, #48]	; (2e08 <.LLST17+0x4>)
    2dd6:	8003      	strh	r3, [r0, #0]
  set_speed = START_SPEED_DEFAULT;
    2dd8:	24c8      	movs	r4, #200	; 0xc8
    2dda:	480c      	ldr	r0, [pc, #48]	; (2e0c <.LLST17+0x8>)
    2ddc:	8004      	strh	r4, [r0, #0]
  direction_changed = 0;
    2dde:	480c      	ldr	r0, [pc, #48]	; (2e10 <.LLST17+0xc>)
    2de0:	7001      	strb	r1, [r0, #0]
  direction = 0;
    2de2:	480c      	ldr	r0, [pc, #48]	; (2e14 <.LLST17+0x10>)
    2de4:	2400      	movs	r4, #0
    2de6:	7004      	strb	r4, [r0, #0]
  ref_abs = 0;  
    2de8:	480b      	ldr	r0, [pc, #44]	; (2e18 <.LLST17+0x14>)
    2dea:	8003      	strh	r3, [r0, #0]
  sysph.ang = 0; 
    2dec:	480b      	ldr	r0, [pc, #44]	; (2e1c <.LLST17+0x18>)
    2dee:	8003      	strh	r3, [r0, #0]
  switch_state = 0;
    2df0:	4b0b      	ldr	r3, [pc, #44]	; (2e20 <.LLST17+0x1c>)
    2df2:	7019      	strb	r1, [r3, #0]
  acc_ramp = ACC_RAMP;
    2df4:	4b0b      	ldr	r3, [pc, #44]	; (2e24 <.LLST18+0x2>)
    2df6:	801a      	strh	r2, [r3, #0]
  dec_ramp = DEC_RAMP;
    2df8:	4b0b      	ldr	r3, [pc, #44]	; (2e28 <.LLST18+0x6>)
    2dfa:	801a      	strh	r2, [r3, #0]
}
    2dfc:	bd10      	pop	{r4, pc}
    2dfe:	46c0      	nop			; (mov r8, r8)
    2e00:	200000d1 	.word	0x200000d1
    2e04:	200000d6 	.word	0x200000d6
    2e08:	200000d2 	.word	0x200000d2
    2e0c:	20007ffc 	.word	0x20007ffc
    2e10:	200000d0 	.word	0x200000d0
    2e14:	20007eb2 	.word	0x20007eb2
    2e18:	200000ce 	.word	0x200000ce
    2e1c:	20007df0 	.word	0x20007df0
    2e20:	20007eb1 	.word	0x20007eb1
    2e24:	200000cc 	.word	0x200000cc
    2e28:	200000d4 	.word	0x200000d4

Disassembly of section .text.main%42:

00002e2c <main>:
// Section: Main Entry Point
// *****************************************************************************
// *****************************************************************************

int main ( void )
{
    2e2c:	b510      	push	{r4, lr}

00002e2e <.LCFI1>:
    /* Initialize all modules */
    SYS_Initialize ( NULL );
    2e2e:	2000      	movs	r0, #0
    2e30:	4b0c      	ldr	r3, [pc, #48]	; (2e64 <.LVL13+0x2>)
    2e32:	4798      	blx	r3

00002e34 <.LVL5>:
    ADC1_CallbackRegister((ADC_CALLBACK) ADC_ISR, (uintptr_t)NULL);
    2e34:	2100      	movs	r1, #0
    2e36:	480c      	ldr	r0, [pc, #48]	; (2e68 <.LLST19>)
    2e38:	4b0c      	ldr	r3, [pc, #48]	; (2e6c <.LLST19+0x4>)
    2e3a:	4798      	blx	r3

00002e3c <.LVL6>:
    EIC_CallbackRegister ((EIC_PIN)EIC_PIN_2, (EIC_CALLBACK) OC_FAULT_ISR,(uintptr_t)NULL);
    2e3c:	2200      	movs	r2, #0
    2e3e:	490c      	ldr	r1, [pc, #48]	; (2e70 <.LLST19+0x8>)
    2e40:	2002      	movs	r0, #2
    2e42:	4c0c      	ldr	r4, [pc, #48]	; (2e74 <.Ldebug_abbrev0+0x1>)
    2e44:	47a0      	blx	r4

00002e46 <.LVL7>:
    EIC_CallbackRegister ((EIC_PIN)EIC_PIN_0, (EIC_CALLBACK) motor_start_stop,(uintptr_t)NULL);
    2e46:	2200      	movs	r2, #0
    2e48:	490b      	ldr	r1, [pc, #44]	; (2e78 <.Ldebug_abbrev0+0x5>)
    2e4a:	2000      	movs	r0, #0
    2e4c:	47a0      	blx	r4

00002e4e <.LVL8>:
    motorcontrol_vars_init();
    2e4e:	4b0b      	ldr	r3, [pc, #44]	; (2e7c <.Ldebug_abbrev0+0x9>)
    2e50:	4798      	blx	r3

00002e52 <.LVL9>:
    ADC1_Enable();
    2e52:	4b0b      	ldr	r3, [pc, #44]	; (2e80 <.Ldebug_abbrev0+0xd>)
    2e54:	4798      	blx	r3

00002e56 <.LVL10>:
    X2CScope_Init();
    2e56:	4b0b      	ldr	r3, [pc, #44]	; (2e84 <.Ldebug_abbrev0+0x11>)
    2e58:	4798      	blx	r3

00002e5a <.LVL11>:
    TCC0_PWMStart();     
    2e5a:	4b0b      	ldr	r3, [pc, #44]	; (2e88 <.Ldebug_abbrev0+0x15>)
    2e5c:	4798      	blx	r3

00002e5e <.LVL12>:
    {
        
        
        /* Maintain state machines of all polled MPLAB Harmony modules. */
        SYS_Tasks ( );
        X2CScope_Communicate();
    2e5e:	4c0b      	ldr	r4, [pc, #44]	; (2e8c <.Ldebug_abbrev0+0x19>)
    2e60:	47a0      	blx	r4

00002e62 <.LVL13>:
    2e62:	e7fd      	b.n	2e60 <.LVL12+0x2>
    2e64:	00003051 	.word	0x00003051
    2e68:	000033e1 	.word	0x000033e1
    2e6c:	00003651 	.word	0x00003651
    2e70:	000034e5 	.word	0x000034e5
    2e74:	00003499 	.word	0x00003499
    2e78:	00003001 	.word	0x00003001
    2e7c:	00002dc5 	.word	0x00002dc5
    2e80:	000035a5 	.word	0x000035a5
    2e84:	0000346d 	.word	0x0000346d
    2e88:	0000356d 	.word	0x0000356d
    2e8c:	000024dd 	.word	0x000024dd

Disassembly of section .text%43:

00002e90 <__do_global_dtors_aux>:
    2e90:	b510      	push	{r4, lr}
    2e92:	4c06      	ldr	r4, [pc, #24]	; (2eac <.LLST20+0xe>)
    2e94:	7823      	ldrb	r3, [r4, #0]
    2e96:	2b00      	cmp	r3, #0
    2e98:	d107      	bne.n	2eaa <.LLST20+0xc>
    2e9a:	4b05      	ldr	r3, [pc, #20]	; (2eb0 <.LLST20+0x12>)
    2e9c:	2b00      	cmp	r3, #0
    2e9e:	d002      	beq.n	2ea6 <.LLST20+0x8>
    2ea0:	4804      	ldr	r0, [pc, #16]	; (2eb4 <.LLST20+0x16>)
    2ea2:	e000      	b.n	2ea6 <.LLST20+0x8>
    2ea4:	bf00      	nop
    2ea6:	2301      	movs	r3, #1
    2ea8:	7023      	strb	r3, [r4, #0]
    2eaa:	bd10      	pop	{r4, pc}
    2eac:	20007e24 	.word	0x20007e24
	...

00002eb8 <frame_dummy>:
    2eb8:	4b08      	ldr	r3, [pc, #32]	; (2edc <.LLST21+0x12>)
    2eba:	b510      	push	{r4, lr}
    2ebc:	2b00      	cmp	r3, #0
    2ebe:	d003      	beq.n	2ec8 <frame_dummy+0x10>
    2ec0:	4907      	ldr	r1, [pc, #28]	; (2ee0 <.LLST21+0x16>)
    2ec2:	4808      	ldr	r0, [pc, #32]	; (2ee4 <.LLST21+0x1a>)
    2ec4:	e000      	b.n	2ec8 <frame_dummy+0x10>
    2ec6:	bf00      	nop
    2ec8:	4807      	ldr	r0, [pc, #28]	; (2ee8 <.LLST21+0x1e>)
    2eca:	6803      	ldr	r3, [r0, #0]
    2ecc:	2b00      	cmp	r3, #0
    2ece:	d100      	bne.n	2ed2 <.LLST21+0x8>
    2ed0:	bd10      	pop	{r4, pc}
    2ed2:	4b06      	ldr	r3, [pc, #24]	; (2eec <.Ldebug_line0+0x2>)
    2ed4:	2b00      	cmp	r3, #0
    2ed6:	d0fb      	beq.n	2ed0 <.LLST21+0x6>
    2ed8:	4798      	blx	r3
    2eda:	e7f9      	b.n	2ed0 <.LLST21+0x6>
    2edc:	00000000 	.word	0x00000000
    2ee0:	20007e28 	.word	0x20007e28
	...

Disassembly of section .text.TCC0_PWMInitialize%44:

00002ef0 <TCC0_PWMInitialize>:

/* Initialize TCC module */
void TCC0_PWMInitialize(void)
{
    /* Reset TCC */
    TCC0_REGS->TCC_CTRLA = TCC_CTRLA_SWRST_Msk;
    2ef0:	2201      	movs	r2, #1
    2ef2:	4b12      	ldr	r3, [pc, #72]	; (2f3c <.LLST23+0x1d>)
    2ef4:	601a      	str	r2, [r3, #0]
    while (TCC0_REGS->TCC_SYNCBUSY & (TCC_SYNCBUSY_SWRST_Msk))
    2ef6:	0019      	movs	r1, r3
    2ef8:	688b      	ldr	r3, [r1, #8]
    2efa:	421a      	tst	r2, r3
    2efc:	d1fc      	bne.n	2ef8 <TCC0_PWMInitialize+0x8>
    {
        /* Wait for sync */
    }
    /* Clock prescaler */
    TCC0_REGS->TCC_CTRLA = TCC_CTRLA_PRESCALER_DIV1 ;
    2efe:	4b0f      	ldr	r3, [pc, #60]	; (2f3c <.LLST23+0x1d>)
    2f00:	2200      	movs	r2, #0
    2f02:	601a      	str	r2, [r3, #0]
    TCC0_REGS->TCC_WEXCTRL = TCC_WEXCTRL_OTMX(0U);
    2f04:	615a      	str	r2, [r3, #20]
    /* Dead time configurations */
    TCC0_REGS->TCC_WEXCTRL |= TCC_WEXCTRL_DTIEN0_Msk | TCC_WEXCTRL_DTIEN1_Msk | TCC_WEXCTRL_DTIEN2_Msk | TCC_WEXCTRL_DTIEN3_Msk
    2f06:	6958      	ldr	r0, [r3, #20]
    2f08:	490d      	ldr	r1, [pc, #52]	; (2f40 <.LLST23+0x21>)
    2f0a:	4301      	orrs	r1, r0
    2f0c:	6159      	str	r1, [r3, #20]
 	 	 | TCC_WEXCTRL_DTLS(48U) | TCC_WEXCTRL_DTHS(48U);

    TCC0_REGS->TCC_WAVE = TCC_WAVE_WAVEGEN_DSBOTTOM;
    2f0e:	2105      	movs	r1, #5
    2f10:	63d9      	str	r1, [r3, #60]	; 0x3c

    /* Configure duty cycle values */
    TCC0_REGS->TCC_CC[0] = 0U;
    2f12:	645a      	str	r2, [r3, #68]	; 0x44
    TCC0_REGS->TCC_CC[1] = 0U;
    2f14:	649a      	str	r2, [r3, #72]	; 0x48
    TCC0_REGS->TCC_CC[2] = 0U;
    2f16:	64da      	str	r2, [r3, #76]	; 0x4c
    TCC0_REGS->TCC_CC[3] = 0U;
    2f18:	651a      	str	r2, [r3, #80]	; 0x50
    TCC0_REGS->TCC_PER = 1199U;
    2f1a:	4a0a      	ldr	r2, [pc, #40]	; (2f44 <.LLST23+0x25>)
    2f1c:	641a      	str	r2, [r3, #64]	; 0x40

    /* Fault configurations */
    TCC0_REGS->TCC_EVCTRL = TCC_EVCTRL_TCEI0_Msk | TCC_EVCTRL_EVACT0_FAULT;
    2f1e:	4a0a      	ldr	r2, [pc, #40]	; (2f48 <.LLST23+0x29>)
    2f20:	621a      	str	r2, [r3, #32]
    TCC0_REGS->TCC_DRVCTRL = TCC_DRVCTRL_FILTERVAL0(5U) | TCC_DRVCTRL_NRE0_Msk
    2f22:	4a0a      	ldr	r2, [pc, #40]	; (2f4c <.LLST23+0x2d>)
    2f24:	619a      	str	r2, [r3, #24]
		 | TCC_DRVCTRL_NRE5_Msk
		 | TCC_DRVCTRL_NRE6_Msk;



    TCC0_REGS->TCC_EVCTRL |= TCC_EVCTRL_OVFEO_Msk;
    2f26:	6a19      	ldr	r1, [r3, #32]
    2f28:	2280      	movs	r2, #128	; 0x80
    2f2a:	0052      	lsls	r2, r2, #1
    2f2c:	430a      	orrs	r2, r1
    2f2e:	621a      	str	r2, [r3, #32]
    while (TCC0_REGS->TCC_SYNCBUSY)
    2f30:	001a      	movs	r2, r3
    2f32:	6893      	ldr	r3, [r2, #8]
    2f34:	2b00      	cmp	r3, #0
    2f36:	d1fc      	bne.n	2f32 <.LLST23+0x13>
    {
        /* Wait for sync */
    }
}
    2f38:	4770      	bx	lr
    2f3a:	46c0      	nop			; (mov r8, r8)
    2f3c:	42002400 	.word	0x42002400
    2f40:	30300f00 	.word	0x30300f00
    2f44:	000004af 	.word	0x000004af
    2f48:	00004007 	.word	0x00004007
    2f4c:	05000077 	.word	0x05000077

Disassembly of section .text.Reset_Handler%45:

00002f50 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void __attribute__((optimize("-O1"), section(".text.Reset_Handler"), long_call)) Reset_Handler(void)
{
    2f50:	b510      	push	{r4, lr}

00002f52 <.LCFI0>:
    uint32_t *pSrc;

    /* Call the optional application-provided _on_reset() function. */
    if (_on_reset)
    2f52:	4b0e      	ldr	r3, [pc, #56]	; (2f8c <.LVL6+0x4>)
    2f54:	2b00      	cmp	r3, #0
    2f56:	d000      	beq.n	2f5a <.LVL0>
    {
        _on_reset();
    2f58:	4798      	blx	r3

00002f5a <.LVL0>:
    }

    /* Reserved for use by MPLAB XC32. */
    if (__xc32_on_reset)
    2f5a:	4b0d      	ldr	r3, [pc, #52]	; (2f90 <.LVL6+0x8>)
    2f5c:	2b00      	cmp	r3, #0
    2f5e:	d000      	beq.n	2f62 <.LVL1>
        __xc32_on_reset();
    2f60:	4798      	blx	r3

00002f62 <.LVL1>:



    /* Initialize data after TCM is enabled.
     * Data initialization from the XC32 .dinit template */
    __pic32c_data_initialization();
    2f62:	4b0c      	ldr	r3, [pc, #48]	; (2f94 <.LVL6+0xc>)
    2f64:	4798      	blx	r3

00002f66 <.LVL2>:


#  ifdef SCB_VTOR_TBLOFF_Msk
    /*  Set the vector-table base address in FLASH */
    pSrc = (uint32_t *) & __svectors;
    SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    2f66:	4a0c      	ldr	r2, [pc, #48]	; (2f98 <.LVL6+0x10>)
    2f68:	21ff      	movs	r1, #255	; 0xff
    2f6a:	4b0c      	ldr	r3, [pc, #48]	; (2f9c <.LVL6+0x14>)
    2f6c:	438b      	bics	r3, r1
    2f6e:	6093      	str	r3, [r2, #8]
#  endif /* SCB_VTOR_TBLOFF_Msk */

    /* Initialize the C library */
    __libc_init_array();
    2f70:	4b0b      	ldr	r3, [pc, #44]	; (2fa0 <.Ldebug_abbrev0+0x3>)
    2f72:	4798      	blx	r3

00002f74 <.LVL3>:




    /* Call the optional application-provided _on_bootstrap() function. */
    if (_on_bootstrap)
    2f74:	4b0b      	ldr	r3, [pc, #44]	; (2fa4 <.Ldebug_abbrev0+0x7>)
    2f76:	2b00      	cmp	r3, #0
    2f78:	d000      	beq.n	2f7c <.LVL4>
    {
        _on_bootstrap();
    2f7a:	4798      	blx	r3

00002f7c <.LVL4>:
    }

    /* Reserved for use by MPLAB XC32. */
    if (__xc32_on_bootstrap)
    2f7c:	4b0a      	ldr	r3, [pc, #40]	; (2fa8 <.Ldebug_abbrev0+0xb>)
    2f7e:	2b00      	cmp	r3, #0
    2f80:	d000      	beq.n	2f84 <.LVL5>
    {
        __xc32_on_bootstrap();
    2f82:	4798      	blx	r3

00002f84 <.LVL5>:
    }

    /* Branch to application's main function */
    main();
    2f84:	4b09      	ldr	r3, [pc, #36]	; (2fac <.Ldebug_abbrev0+0xf>)
    2f86:	4798      	blx	r3

00002f88 <.LVL6>:
    2f88:	e7fe      	b.n	2f88 <.LVL6>
    2f8a:	46c0      	nop			; (mov r8, r8)
	...
    2f94:	0000295d 	.word	0x0000295d
    2f98:	e000ed00 	.word	0xe000ed00
    2f9c:	00000000 	.word	0x00000000
    2fa0:	000031c9 	.word	0x000031c9
	...
    2fac:	00002e2d 	.word	0x00002e2d

Disassembly of section .text.ADC1_Initialize%46:

00002fb0 <ADC1_Initialize>:
// *****************************************************************************
/* Initialize ADC module */
void ADC1_Initialize( void )
{
    /* Reset ADC */
    ADC1_REGS->ADC_CTRLA = ADC_CTRLA_SWRST_Msk;
    2fb0:	2201      	movs	r2, #1
    2fb2:	4b11      	ldr	r3, [pc, #68]	; (2ff8 <.LLST26+0x2>)
    2fb4:	701a      	strb	r2, [r3, #0]

    while((ADC1_REGS->ADC_SYNCBUSY & ADC_SYNCBUSY_SWRST_Msk) == ADC_SYNCBUSY_SWRST_Msk)
    2fb6:	0019      	movs	r1, r3
    2fb8:	8c0b      	ldrh	r3, [r1, #32]
    2fba:	4213      	tst	r3, r2
    2fbc:	d1fc      	bne.n	2fb8 <.LLST25+0x1>
        /* Wait for Synchronization */
    }

    /* Write linearity calibration in BIASREFBUF and bias calibration in BIASCOMP */
    ADC1_REGS->ADC_CALIB = (uint32_t)(ADC_CALIB_BIASREFBUF(((*(uint64_t*)OTP5_ADDR) & ADC1_LINEARITY_Msk))) \
        | ADC_CALIB_BIASCOMP((((*(uint64_t*)OTP5_ADDR) & ADC1_BIASCAL_Msk) >> ADC1_BIASCAL_POS));
    2fbe:	4b0f      	ldr	r3, [pc, #60]	; (2ffc <.LLST26+0x6>)
    2fc0:	681a      	ldr	r2, [r3, #0]
    2fc2:	0512      	lsls	r2, r2, #20
    2fc4:	0f52      	lsrs	r2, r2, #29
    ADC1_REGS->ADC_CALIB = (uint32_t)(ADC_CALIB_BIASREFBUF(((*(uint64_t*)OTP5_ADDR) & ADC1_LINEARITY_Msk))) \
    2fc6:	4b0c      	ldr	r3, [pc, #48]	; (2ff8 <.LLST26+0x2>)
    2fc8:	859a      	strh	r2, [r3, #44]	; 0x2c

    /* prescaler */
    ADC1_REGS->ADC_CTRLB = ADC_CTRLB_PRESCALER_DIV4;
    2fca:	2201      	movs	r2, #1
    2fcc:	705a      	strb	r2, [r3, #1]
    /* Sampling length */
    ADC1_REGS->ADC_SAMPCTRL = ADC_SAMPCTRL_SAMPLEN(3U);
    2fce:	2103      	movs	r1, #3
    2fd0:	7359      	strb	r1, [r3, #13]

    /* reference */
    ADC1_REGS->ADC_REFCTRL = ADC_REFCTRL_REFSEL_INTVCC2;
    2fd2:	3102      	adds	r1, #2
    2fd4:	7099      	strb	r1, [r3, #2]

    /* positive and negative input pins */
    ADC1_REGS->ADC_INPUTCTRL = ADC_POSINPUT_AIN0 | ADC_NEGINPUT_GND;
    2fd6:	21c0      	movs	r1, #192	; 0xc0
    2fd8:	0149      	lsls	r1, r1, #5
    2fda:	8119      	strh	r1, [r3, #8]

    /* Resolution & Operation Mode */
    ADC1_REGS->ADC_CTRLC = ADC_CTRLC_RESSEL_12BIT | ADC_CTRLC_WINMODE(0) ;
    2fdc:	2100      	movs	r1, #0
    2fde:	8159      	strh	r1, [r3, #10]


    /* Clear all interrupt flags */
    ADC1_REGS->ADC_INTFLAG = ADC_INTFLAG_Msk;
    2fe0:	2107      	movs	r1, #7
    2fe2:	7199      	strb	r1, [r3, #6]
    /* Enable interrupts */
    ADC1_REGS->ADC_INTENSET = ADC_INTENSET_RESRDY_Msk;
    2fe4:	715a      	strb	r2, [r3, #5]
    /* Events configuration  */
    ADC1_REGS->ADC_EVCTRL = ADC_EVCTRL_STARTEI_Msk;
    2fe6:	3201      	adds	r2, #1
    2fe8:	70da      	strb	r2, [r3, #3]

    while(ADC1_REGS->ADC_SYNCBUSY)
    2fea:	001a      	movs	r2, r3
    2fec:	8c13      	ldrh	r3, [r2, #32]
    2fee:	b29b      	uxth	r3, r3
    2ff0:	2b00      	cmp	r3, #0
    2ff2:	d1fb      	bne.n	2fec <.LLST25+0x35>
    {
        /* Wait for Synchronization */
    }
}
    2ff4:	4770      	bx	lr
    2ff6:	46c0      	nop			; (mov r8, r8)
    2ff8:	42004800 	.word	0x42004800
    2ffc:	00806020 	.word	0x00806020

Disassembly of section .text.motor_start_stop%47:

00003000 <motor_start_stop>:
    return;
}

void motor_start_stop(void)
{
    switch_state ^= 1;         // Calling this function starts/stops motor
    3000:	490d      	ldr	r1, [pc, #52]	; (3038 <.Ldebug_line0+0xb>)
    3002:	780a      	ldrb	r2, [r1, #0]
    3004:	2301      	movs	r3, #1
    3006:	4053      	eors	r3, r2
    3008:	700b      	strb	r3, [r1, #0]
		
	if(1U == switch_state)
    300a:	2a00      	cmp	r2, #0
    300c:	d007      	beq.n	301e <.LLST27+0x8>
		ref_abs = 0;
		direction = 0;	
	}
	else
	{
		state_run = 0;
    300e:	2300      	movs	r3, #0
    3010:	4a0a      	ldr	r2, [pc, #40]	; (303c <.Ldebug_line0+0xf>)
    3012:	7013      	strb	r3, [r2, #0]
		ref_abs = 0;
    3014:	4a0a      	ldr	r2, [pc, #40]	; (3040 <.Ldebug_line0+0x13>)
    3016:	8013      	strh	r3, [r2, #0]
		ext_speed_ref_rpm = 0;
    3018:	4a0a      	ldr	r2, [pc, #40]	; (3044 <.Ldebug_line0+0x17>)
    301a:	8013      	strh	r3, [r2, #0]
	}	

}
    301c:	4770      	bx	lr
		state_run = 1;
    301e:	3201      	adds	r2, #1
    3020:	4b06      	ldr	r3, [pc, #24]	; (303c <.Ldebug_line0+0xf>)
    3022:	701a      	strb	r2, [r3, #0]
		state_halt = 0;	
    3024:	2300      	movs	r3, #0
    3026:	4a08      	ldr	r2, [pc, #32]	; (3048 <.Ldebug_line0+0x1b>)
    3028:	7013      	strb	r3, [r2, #0]
		ref_abs = 0;
    302a:	4a05      	ldr	r2, [pc, #20]	; (3040 <.Ldebug_line0+0x13>)
    302c:	8013      	strh	r3, [r2, #0]
		direction = 0;	
    302e:	4b07      	ldr	r3, [pc, #28]	; (304c <.Ldebug_line0+0x1f>)
    3030:	2200      	movs	r2, #0
    3032:	701a      	strb	r2, [r3, #0]
    3034:	e7f2      	b.n	301c <.LLST27+0x6>
    3036:	46c0      	nop			; (mov r8, r8)
    3038:	20007eb1 	.word	0x20007eb1
    303c:	200000d1 	.word	0x200000d1
    3040:	200000ce 	.word	0x200000ce
    3044:	200000d2 	.word	0x200000d2
    3048:	200000d6 	.word	0x200000d6
    304c:	20007eb2 	.word	0x20007eb2

Disassembly of section .text.SYS_Initialize%48:

00003050 <SYS_Initialize>:

  Remarks:
 */

void SYS_Initialize ( void* data )
{
    3050:	b510      	push	{r4, lr}

00003052 <.LCFI0>:
  
    PORT_Initialize();
    3052:	4b09      	ldr	r3, [pc, #36]	; (3078 <.LVL9+0x2>)
    3054:	4798      	blx	r3

00003056 <.LVL1>:

    CLOCK_Initialize();
    3056:	4b09      	ldr	r3, [pc, #36]	; (307c <.LVL9+0x6>)
    3058:	4798      	blx	r3

0000305a <.LVL2>:



    SERCOM3_USART_Initialize();
    305a:	4b09      	ldr	r3, [pc, #36]	; (3080 <.LLST29+0x3>)
    305c:	4798      	blx	r3

0000305e <.LVL3>:

    EVSYS_Initialize();
    305e:	4b09      	ldr	r3, [pc, #36]	; (3084 <.LLST29+0x7>)
    3060:	4798      	blx	r3

00003062 <.LVL4>:

    TCC0_PWMInitialize();
    3062:	4b09      	ldr	r3, [pc, #36]	; (3088 <.LLST29+0xb>)
    3064:	4798      	blx	r3

00003066 <.LVL5>:

    ADC1_Initialize();
    3066:	4b09      	ldr	r3, [pc, #36]	; (308c <.LLST29+0xf>)
    3068:	4798      	blx	r3

0000306a <.LVL6>:
    EIC_Initialize();
    306a:	4b09      	ldr	r3, [pc, #36]	; (3090 <.LLST11>)
    306c:	4798      	blx	r3

0000306e <.LVL7>:

	DIVAS_Initialize();
    306e:	4b09      	ldr	r3, [pc, #36]	; (3094 <.LLST11+0x4>)
    3070:	4798      	blx	r3

00003072 <.LVL8>:





    NVIC_Initialize();
    3072:	4b09      	ldr	r3, [pc, #36]	; (3098 <.LLST11+0x8>)
    3074:	4798      	blx	r3

00003076 <.LVL9>:

}
    3076:	bd10      	pop	{r4, pc}
    3078:	00002d55 	.word	0x00002d55
    307c:	00002531 	.word	0x00002531
    3080:	00003309 	.word	0x00003309
    3084:	0000352d 	.word	0x0000352d
    3088:	00002ef1 	.word	0x00002ef1
    308c:	00002fb1 	.word	0x00002fb1
    3090:	000029ed 	.word	0x000029ed
    3094:	00002dc3 	.word	0x00002dc3
    3098:	00003211 	.word	0x00003211

Disassembly of section .text%49:

0000309c <sendSerial>:
    309c:	4770      	bx	lr

0000309e <receiveSerial>:
    309e:	2000      	movs	r0, #0
    30a0:	4770      	bx	lr

000030a2 <isReceiveDataAvailable>:
    30a2:	2000      	movs	r0, #0
    30a4:	4770      	bx	lr

000030a6 <isSendReady>:
    30a6:	2000      	movs	r0, #0
    30a8:	4770      	bx	lr

000030aa <getTxFifoFree>:
    30aa:	2000      	movs	r0, #0
    30ac:	4770      	bx	lr

000030ae <flush>:
    30ae:	4770      	bx	lr

000030b0 <initSerialGeneric>:
    30b0:	4b06      	ldr	r3, [pc, #24]	; (30cc <.LLST12+0x1c>)
    30b2:	6003      	str	r3, [r0, #0]
    30b4:	4b06      	ldr	r3, [pc, #24]	; (30d0 <.LLST12+0x20>)
    30b6:	6043      	str	r3, [r0, #4]
    30b8:	4b06      	ldr	r3, [pc, #24]	; (30d4 <.Ldebug_abbrev0+0x2>)
    30ba:	6083      	str	r3, [r0, #8]
    30bc:	4b06      	ldr	r3, [pc, #24]	; (30d8 <.Ldebug_abbrev0+0x6>)
    30be:	60c3      	str	r3, [r0, #12]
    30c0:	4b06      	ldr	r3, [pc, #24]	; (30dc <.Ldebug_abbrev0+0xa>)
    30c2:	6103      	str	r3, [r0, #16]
    30c4:	4b06      	ldr	r3, [pc, #24]	; (30e0 <.Ldebug_abbrev0+0xe>)
    30c6:	6143      	str	r3, [r0, #20]
    30c8:	4770      	bx	lr
    30ca:	46c0      	nop			; (mov r8, r8)
    30cc:	0000309d 	.word	0x0000309d
    30d0:	0000309f 	.word	0x0000309f
    30d4:	000030a3 	.word	0x000030a3
    30d8:	000030a7 	.word	0x000030a7
    30dc:	000030ab 	.word	0x000030ab
    30e0:	000030af 	.word	0x000030af

000030e4 <linkSerial>:
    30e4:	6141      	str	r1, [r0, #20]
    30e6:	4770      	bx	lr

000030e8 <initTableStruct>:
    30e8:	4a08      	ldr	r2, [pc, #32]	; (310c <.LLST0+0x1a>)
    30ea:	6811      	ldr	r1, [r2, #0]
    30ec:	2300      	movs	r3, #0
    30ee:	600b      	str	r3, [r1, #0]
    30f0:	6812      	ldr	r2, [r2, #0]
    30f2:	6053      	str	r3, [r2, #4]
    30f4:	6093      	str	r3, [r2, #8]
    30f6:	7313      	strb	r3, [r2, #12]
    30f8:	81d3      	strh	r3, [r2, #14]
    30fa:	6113      	str	r3, [r2, #16]
    30fc:	8293      	strh	r3, [r2, #20]
    30fe:	6193      	str	r3, [r2, #24]
    3100:	61d3      	str	r3, [r2, #28]
    3102:	8413      	strh	r3, [r2, #32]
    3104:	6253      	str	r3, [r2, #36]	; 0x24
    3106:	6293      	str	r3, [r2, #40]	; 0x28
    3108:	62d3      	str	r3, [r2, #44]	; 0x2c
    310a:	4770      	bx	lr
    310c:	20007dd8 	.word	0x20007dd8

00003110 <addTableStructProtocol>:
    3110:	4b07      	ldr	r3, [pc, #28]	; (3130 <.LLST1+0x1e>)
    3112:	681a      	ldr	r2, [r3, #0]
    3114:	8a93      	ldrh	r3, [r2, #20]
    3116:	b29b      	uxth	r3, r3
    3118:	2b01      	cmp	r3, #1
    311a:	d900      	bls.n	311e <.LLST1+0xc>
    311c:	4770      	bx	lr
    311e:	8a93      	ldrh	r3, [r2, #20]
    3120:	b29b      	uxth	r3, r3
    3122:	1c59      	adds	r1, r3, #1
    3124:	b289      	uxth	r1, r1
    3126:	8291      	strh	r1, [r2, #20]
    3128:	3306      	adds	r3, #6
    312a:	009b      	lsls	r3, r3, #2
    312c:	5098      	str	r0, [r3, r2]
    312e:	e7f5      	b.n	311c <.LLST1+0xa>
    3130:	20007dd8 	.word	0x20007dd8

00003134 <__eqsf2>:
    3134:	b570      	push	{r4, r5, r6, lr}
    3136:	0042      	lsls	r2, r0, #1
    3138:	0245      	lsls	r5, r0, #9
    313a:	024e      	lsls	r6, r1, #9
    313c:	004c      	lsls	r4, r1, #1
    313e:	0fc3      	lsrs	r3, r0, #31
    3140:	0a6d      	lsrs	r5, r5, #9
    3142:	0e12      	lsrs	r2, r2, #24
    3144:	0a76      	lsrs	r6, r6, #9
    3146:	0e24      	lsrs	r4, r4, #24
    3148:	0fc9      	lsrs	r1, r1, #31
    314a:	2001      	movs	r0, #1
    314c:	2aff      	cmp	r2, #255	; 0xff
    314e:	d006      	beq.n	315e <__eqsf2+0x2a>
    3150:	2cff      	cmp	r4, #255	; 0xff
    3152:	d003      	beq.n	315c <__eqsf2+0x28>
    3154:	42a2      	cmp	r2, r4
    3156:	d101      	bne.n	315c <__eqsf2+0x28>
    3158:	42b5      	cmp	r5, r6
    315a:	d006      	beq.n	316a <.LLST1+0xb>
    315c:	bd70      	pop	{r4, r5, r6, pc}
    315e:	2d00      	cmp	r5, #0
    3160:	d1fc      	bne.n	315c <__eqsf2+0x28>
    3162:	2cff      	cmp	r4, #255	; 0xff
    3164:	d1fa      	bne.n	315c <__eqsf2+0x28>
    3166:	2e00      	cmp	r6, #0
    3168:	d1f8      	bne.n	315c <__eqsf2+0x28>
    316a:	428b      	cmp	r3, r1
    316c:	d006      	beq.n	317c <.LLST1+0x1d>
    316e:	2001      	movs	r0, #1
    3170:	2a00      	cmp	r2, #0
    3172:	d1f3      	bne.n	315c <__eqsf2+0x28>
    3174:	0028      	movs	r0, r5
    3176:	1e45      	subs	r5, r0, #1
    3178:	41a8      	sbcs	r0, r5
    317a:	e7ef      	b.n	315c <__eqsf2+0x28>
    317c:	2000      	movs	r0, #0
    317e:	e7ed      	b.n	315c <__eqsf2+0x28>

Disassembly of section .text.EIC_InterruptHandler%52:

00003180 <EIC_InterruptHandler>:
        eicCallbackObject[pin].context  = context;
    }
}

void EIC_InterruptHandler(void)
{
    3180:	b5f0      	push	{r4, r5, r6, r7, lr}

00003182 <.LCFI2>:
    3182:	46c6      	mov	lr, r8
    3184:	b500      	push	{lr}

00003186 <.LCFI3>:
    3186:	4d0e      	ldr	r5, [pc, #56]	; (31c0 <.LLST44+0x1>)
    3188:	2400      	movs	r4, #0
    {
        /* Verify if the EXTINT x Interrupt Pin is enabled */
        if ((eicCallbackObject[currentChannel].eicPinNo == currentChannel))
        {
            /* Read the interrupt flag status */
            eicIntFlagStatus = EIC_REGS->EIC_INTFLAG & (1UL << currentChannel);
    318a:	4f0e      	ldr	r7, [pc, #56]	; (31c4 <.LLST44+0x5>)
    318c:	2301      	movs	r3, #1
    318e:	4698      	mov	r8, r3
    3190:	e004      	b.n	319c <.LVL10>

00003192 <.LVL7>:
                {
                    eicCallbackObject[currentChannel].callback(eicCallbackObject[currentChannel].context);
                }

                /* Clear interrupt flag */
                EIC_REGS->EIC_INTFLAG = (1UL << currentChannel);
    3192:	617e      	str	r6, [r7, #20]

00003194 <.LVL8>:
    3194:	3401      	adds	r4, #1

00003196 <.LVL9>:
    3196:	350c      	adds	r5, #12
    for (currentChannel = 0; currentChannel < EXTINT_COUNT; currentChannel++)
    3198:	2c10      	cmp	r4, #16
    319a:	d00e      	beq.n	31ba <.LVL14>

0000319c <.LVL10>:
        if ((eicCallbackObject[currentChannel].eicPinNo == currentChannel))
    319c:	7a2a      	ldrb	r2, [r5, #8]
    319e:	b2e3      	uxtb	r3, r4
    31a0:	429a      	cmp	r2, r3
    31a2:	d1f7      	bne.n	3194 <.LVL8>
            eicIntFlagStatus = EIC_REGS->EIC_INTFLAG & (1UL << currentChannel);
    31a4:	697b      	ldr	r3, [r7, #20]
    31a6:	4646      	mov	r6, r8
    31a8:	40a6      	lsls	r6, r4

000031aa <.LVL11>:
            if (eicIntFlagStatus)
    31aa:	421e      	tst	r6, r3
    31ac:	d0f2      	beq.n	3194 <.LVL8>
                if ((eicCallbackObject[currentChannel].callback != NULL))
    31ae:	682b      	ldr	r3, [r5, #0]

000031b0 <.LVL12>:
    31b0:	2b00      	cmp	r3, #0
    31b2:	d0ee      	beq.n	3192 <.LVL7>
                    eicCallbackObject[currentChannel].callback(eicCallbackObject[currentChannel].context);
    31b4:	6868      	ldr	r0, [r5, #4]
    31b6:	4798      	blx	r3
    31b8:	e7eb      	b.n	3192 <.LVL7>

000031ba <.LVL14>:
            }
        }
    }
}
    31ba:	bc04      	pop	{r2}
    31bc:	4690      	mov	r8, r2
    31be:	bdf0      	pop	{r4, r5, r6, r7, pc}
    31c0:	20000008 	.word	0x20000008
    31c4:	40002800 	.word	0x40002800

Disassembly of section .text.__libc_init_array%53:

000031c8 <__libc_init_array>:
    31c8:	b570      	push	{r4, r5, r6, lr}

000031ca <.LCFI0>:
    31ca:	4e0d      	ldr	r6, [pc, #52]	; (3200 <.LVL11+0x2>)
    31cc:	4d0d      	ldr	r5, [pc, #52]	; (3204 <.LVL11+0x6>)
    31ce:	2400      	movs	r4, #0
    31d0:	1bad      	subs	r5, r5, r6
    31d2:	10ad      	asrs	r5, r5, #2

000031d4 <.LVL0>:
    31d4:	d005      	beq.n	31e2 <.LVL4>

000031d6 <.LVL1>:
    31d6:	00a3      	lsls	r3, r4, #2
    31d8:	58f3      	ldr	r3, [r6, r3]
    31da:	3401      	adds	r4, #1

000031dc <.LVL2>:
    31dc:	4798      	blx	r3

000031de <.LVL3>:
    31de:	42a5      	cmp	r5, r4
    31e0:	d1f9      	bne.n	31d6 <.LVL1>

000031e2 <.LVL4>:
    31e2:	f7fc ff6b 	bl	bc <_init>

000031e6 <.LVL5>:
    31e6:	4e08      	ldr	r6, [pc, #32]	; (3208 <.LVL11+0xa>)
    31e8:	4d08      	ldr	r5, [pc, #32]	; (320c <.LVL11+0xe>)

000031ea <.LVL6>:
    31ea:	2400      	movs	r4, #0
    31ec:	1bad      	subs	r5, r5, r6
    31ee:	10ad      	asrs	r5, r5, #2

000031f0 <.LVL7>:
    31f0:	d005      	beq.n	31fe <.LVL11>

000031f2 <.LVL8>:
    31f2:	00a3      	lsls	r3, r4, #2
    31f4:	58f3      	ldr	r3, [r6, r3]
    31f6:	3401      	adds	r4, #1

000031f8 <.LVL9>:
    31f8:	4798      	blx	r3

000031fa <.LVL10>:
    31fa:	42a5      	cmp	r5, r4
    31fc:	d1f9      	bne.n	31f2 <.LVL8>

000031fe <.LVL11>:
    31fe:	bd70      	pop	{r4, r5, r6, pc}
    3200:	000000c8 	.word	0x000000c8
    3204:	000000c8 	.word	0x000000c8
    3208:	000000c8 	.word	0x000000c8
    320c:	000000d0 	.word	0x000000d0

Disassembly of section .text.NVIC_Initialize%54:

00003210 <NVIC_Initialize>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
    3210:	f3bf 8f5f 	dmb	sy

00003214 <.LBB20>:
  __ASM volatile ("cpsie i" : : : "memory");
    3214:	b662      	cpsie	i

00003216 <.LBB22>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    3216:	4b0c      	ldr	r3, [pc, #48]	; (3248 <.Ldebug_abbrev0>)
    3218:	20c0      	movs	r0, #192	; 0xc0
    321a:	0080      	lsls	r0, r0, #2
    321c:	581a      	ldr	r2, [r3, r0]
    321e:	0212      	lsls	r2, r2, #8
    3220:	0a12      	lsrs	r2, r2, #8
    3222:	2180      	movs	r1, #128	; 0x80
    3224:	0609      	lsls	r1, r1, #24
    3226:	430a      	orrs	r2, r1
    3228:	501a      	str	r2, [r3, r0]

0000322a <.LBB24>:
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    322a:	2208      	movs	r2, #8
    322c:	601a      	str	r2, [r3, #0]

0000322e <.LBB26>:
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    322e:	3018      	adds	r0, #24
    3230:	581a      	ldr	r2, [r3, r0]
    3232:	4906      	ldr	r1, [pc, #24]	; (324c <.Ldebug_abbrev0+0x4>)
    3234:	4011      	ands	r1, r2
    3236:	2280      	movs	r2, #128	; 0x80
    3238:	03d2      	lsls	r2, r2, #15
    323a:	430a      	orrs	r2, r1
    323c:	501a      	str	r2, [r3, r0]

0000323e <.LBB28>:
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    323e:	2280      	movs	r2, #128	; 0x80
    3240:	04d2      	lsls	r2, r2, #19
    3242:	601a      	str	r2, [r3, #0]

00003244 <.LBE28>:
    NVIC_EnableIRQ(ADC1_IRQn);



    return;
}
    3244:	4770      	bx	lr
    3246:	46c0      	nop			; (mov r8, r8)
    3248:	e000e100 	.word	0xe000e100
    324c:	ff00ffff 	.word	0xff00ffff

Disassembly of section .rodata%55:

00003250 <parameterIdTable>:
    3250:	00000001 20000110 00000000 00000000     ....... ........

00003260 <blockFunctionTable>:
    3260:	0000ffff 0000054d 000004cf 0000074d     ....M.......M...
    3270:	00000805 00000cb5 00000000 00000000     ................
	...

Disassembly of section .text.__aeabi_idivmod%56:

00003290 <__aeabi_idivmod>:
    return res;
}

/* Do signed division, return result and remainder */
uint64_t __aeabi_idivmod(int32_t numerator, int32_t denominator)
{
    3290:	b510      	push	{r4, lr}

00003292 <.LCFI4>:
    3292:	b082      	sub	sp, #8

00003294 <.LBB91>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    3294:	f3ef 8310 	mrs	r3, PRIMASK

00003298 <.LBE92>:
    uint64_t res;
    _DIVAS_CRITICAL_ENTER();
    3298:	9301      	str	r3, [sp, #4]

0000329a <.LBB94>:
  __ASM volatile ("cpsid i" : : : "memory");
    329a:	b672      	cpsid	i

0000329c <.LBB96>:
    DIVAS_REGS->DIVAS_CTRLA = (DIVAS_REGS->DIVAS_CTRLA & ~DIVAS_CTRLA_SIGNED_Msk) | sign ;
    329c:	2290      	movs	r2, #144	; 0x90
    329e:	05d2      	lsls	r2, r2, #23
    32a0:	7813      	ldrb	r3, [r2, #0]
    32a2:	2401      	movs	r4, #1
    32a4:	43a3      	bics	r3, r4
    32a6:	4323      	orrs	r3, r4
    32a8:	7013      	strb	r3, [r2, #0]
    DIVAS_REGS->DIVAS_DIVIDEND = dividend;
    32aa:	6090      	str	r0, [r2, #8]
    DIVAS_REGS->DIVAS_DIVISOR  = divisor;
    32ac:	60d1      	str	r1, [r2, #12]
    while((DIVAS_REGS->DIVAS_STATUS & DIVAS_STATUS_BUSY_Msk) == DIVAS_STATUS_BUSY_Msk)
    32ae:	0011      	movs	r1, r2

000032b0 <.LVL16>:
    32b0:	2201      	movs	r2, #1
    32b2:	790b      	ldrb	r3, [r1, #4]
    32b4:	4213      	tst	r3, r2
    32b6:	d1fc      	bne.n	32b2 <.LVL16+0x2>

000032b8 <.LBE96>:
    _divas_div(1, numerator, denominator);
    res = _divas_result64();
    32b8:	4b03      	ldr	r3, [pc, #12]	; (32c8 <.LBE91+0x4>)
    32ba:	6818      	ldr	r0, [r3, #0]
    32bc:	6859      	ldr	r1, [r3, #4]

000032be <.LVL18>:
    _DIVAS_CRITICAL_LEAVE();
    32be:	9b01      	ldr	r3, [sp, #4]

000032c0 <.LBB98>:
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    32c0:	f383 8810 	msr	PRIMASK, r3

000032c4 <.LBE91>:
    return res;
}
    32c4:	b002      	add	sp, #8
    32c6:	bd10      	pop	{r4, pc}
    32c8:	48000010 	.word	0x48000010

Disassembly of section .text.__aeabi_uidivmod%57:

000032cc <__aeabi_uidivmod>:

/* Do unsigned division, return result and remainder */
uint64_t __aeabi_uidivmod(uint32_t numerator, uint32_t denominator)
{
    32cc:	b510      	push	{r4, lr}

000032ce <.LCFI6>:
    32ce:	b082      	sub	sp, #8

000032d0 <.LBB100>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    32d0:	f3ef 8310 	mrs	r3, PRIMASK

000032d4 <.LBE101>:
    uint64_t res;
    _DIVAS_CRITICAL_ENTER();
    32d4:	9301      	str	r3, [sp, #4]

000032d6 <.LBB103>:
  __ASM volatile ("cpsid i" : : : "memory");
    32d6:	b672      	cpsid	i

000032d8 <.LBB105>:
    DIVAS_REGS->DIVAS_CTRLA = (DIVAS_REGS->DIVAS_CTRLA & ~DIVAS_CTRLA_SIGNED_Msk) | sign ;
    32d8:	2390      	movs	r3, #144	; 0x90
    32da:	05db      	lsls	r3, r3, #23
    32dc:	781a      	ldrb	r2, [r3, #0]
    32de:	2401      	movs	r4, #1
    32e0:	43a2      	bics	r2, r4
    32e2:	701a      	strb	r2, [r3, #0]
    DIVAS_REGS->DIVAS_DIVIDEND = dividend;
    32e4:	6098      	str	r0, [r3, #8]
    DIVAS_REGS->DIVAS_DIVISOR  = divisor;
    32e6:	60d9      	str	r1, [r3, #12]
    while((DIVAS_REGS->DIVAS_STATUS & DIVAS_STATUS_BUSY_Msk) == DIVAS_STATUS_BUSY_Msk)
    32e8:	0019      	movs	r1, r3

000032ea <.LVL23>:
    32ea:	2201      	movs	r2, #1
    32ec:	790b      	ldrb	r3, [r1, #4]
    32ee:	4213      	tst	r3, r2
    32f0:	d1fc      	bne.n	32ec <.Ldebug_abbrev0+0x1>

000032f2 <.LBE105>:
    _divas_div(0, numerator, denominator);
    res = _divas_result64();
    32f2:	4b04      	ldr	r3, [pc, #16]	; (3304 <.LBE100+0x6>)
    32f4:	6818      	ldr	r0, [r3, #0]
    32f6:	6859      	ldr	r1, [r3, #4]

000032f8 <.LVL25>:
    _DIVAS_CRITICAL_LEAVE();
    32f8:	9b01      	ldr	r3, [sp, #4]

000032fa <.LBB107>:
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    32fa:	f383 8810 	msr	PRIMASK, r3

000032fe <.LBE100>:
    return res;
}
    32fe:	b002      	add	sp, #8
    3300:	bd10      	pop	{r4, pc}
    3302:	46c0      	nop			; (mov r8, r8)
    3304:	48000010 	.word	0x48000010

Disassembly of section .text.SERCOM3_USART_Initialize%58:

00003308 <SERCOM3_USART_Initialize>:
    SERCOM3_REGS->USART_INT.SERCOM_CTRLA = SERCOM_USART_INT_CTRLA_MODE_USART_INT_CLK | SERCOM_USART_INT_CTRLA_RXPO_PAD1 | SERCOM_USART_INT_CTRLA_TXPO_PAD0 | SERCOM_USART_INT_CTRLA_DORD_Msk | SERCOM_USART_INT_CTRLA_IBON_Msk | SERCOM_USART_INT_CTRLA_FORM(0x0) | SERCOM_USART_INT_CTRLA_SAMPR(0) ;
    3308:	4b0a      	ldr	r3, [pc, #40]	; (3334 <.LFE52+0x2c>)
    330a:	4a0b      	ldr	r2, [pc, #44]	; (3338 <.LFE52+0x30>)
    330c:	601a      	str	r2, [r3, #0]
    SERCOM3_REGS->USART_INT.SERCOM_BAUD = SERCOM_USART_INT_BAUD_BAUD(SERCOM3_USART_INT_BAUD_VALUE);
    330e:	4a0b      	ldr	r2, [pc, #44]	; (333c <.LFE52+0x34>)
    3310:	819a      	strh	r2, [r3, #12]
    SERCOM3_REGS->USART_INT.SERCOM_CTRLB = SERCOM_USART_INT_CTRLB_CHSIZE_8_BIT | SERCOM_USART_INT_CTRLB_SBMODE_1_BIT | SERCOM_USART_INT_CTRLB_RXEN_Msk | SERCOM_USART_INT_CTRLB_TXEN_Msk;
    3312:	22c0      	movs	r2, #192	; 0xc0
    3314:	0292      	lsls	r2, r2, #10
    3316:	605a      	str	r2, [r3, #4]
    while(SERCOM3_REGS->USART_INT.SERCOM_SYNCBUSY);
    3318:	001a      	movs	r2, r3
    331a:	69d3      	ldr	r3, [r2, #28]
    331c:	2b00      	cmp	r3, #0
    331e:	d1fc      	bne.n	331a <SERCOM3_USART_Initialize+0x12>
    SERCOM3_REGS->USART_INT.SERCOM_CTRLA |= SERCOM_USART_INT_CTRLA_ENABLE_Msk;
    3320:	4a04      	ldr	r2, [pc, #16]	; (3334 <.LFE52+0x2c>)
    3322:	6813      	ldr	r3, [r2, #0]
    3324:	2102      	movs	r1, #2
    3326:	430b      	orrs	r3, r1
    3328:	6013      	str	r3, [r2, #0]
    while(SERCOM3_REGS->USART_INT.SERCOM_SYNCBUSY);
    332a:	69d3      	ldr	r3, [r2, #28]
    332c:	2b00      	cmp	r3, #0
    332e:	d1fc      	bne.n	332a <SERCOM3_USART_Initialize+0x22>
}
    3330:	4770      	bx	lr
    3332:	46c0      	nop			; (mov r8, r8)
    3334:	42001000 	.word	0x42001000
    3338:	40100104 	.word	0x40100104
    333c:	fffff62b 	.word	0xfffff62b

Disassembly of section .text.__aeabi_uidiv%59:

00003340 <__aeabi_uidiv>:
{
    3340:	b510      	push	{r4, lr}

00003342 <.LCFI2>:
    3342:	b082      	sub	sp, #8

00003344 <.LBB82>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    3344:	f3ef 8310 	mrs	r3, PRIMASK

00003348 <.LBE83>:
    _DIVAS_CRITICAL_ENTER();
    3348:	9301      	str	r3, [sp, #4]

0000334a <.LBB85>:
  __ASM volatile ("cpsid i" : : : "memory");
    334a:	b672      	cpsid	i

0000334c <.LBB87>:
    DIVAS_REGS->DIVAS_CTRLA = (DIVAS_REGS->DIVAS_CTRLA & ~DIVAS_CTRLA_SIGNED_Msk) | sign ;
    334c:	2390      	movs	r3, #144	; 0x90
    334e:	05db      	lsls	r3, r3, #23
    3350:	781a      	ldrb	r2, [r3, #0]
    3352:	2401      	movs	r4, #1
    3354:	43a2      	bics	r2, r4
    3356:	701a      	strb	r2, [r3, #0]
    DIVAS_REGS->DIVAS_DIVIDEND = dividend;
    3358:	6098      	str	r0, [r3, #8]
    DIVAS_REGS->DIVAS_DIVISOR  = divisor;
    335a:	60d9      	str	r1, [r3, #12]
    while((DIVAS_REGS->DIVAS_STATUS & DIVAS_STATUS_BUSY_Msk) == DIVAS_STATUS_BUSY_Msk)
    335c:	0019      	movs	r1, r3

0000335e <.LVL9>:
    335e:	2201      	movs	r2, #1
    3360:	790b      	ldrb	r3, [r1, #4]
    3362:	4213      	tst	r3, r2
    3364:	d1fc      	bne.n	3360 <.LVL9+0x2>

00003366 <.LBE87>:
    res = _divas_result32();
    3366:	2390      	movs	r3, #144	; 0x90
    3368:	05db      	lsls	r3, r3, #23
    336a:	6918      	ldr	r0, [r3, #16]

0000336c <.LVL11>:
    _DIVAS_CRITICAL_LEAVE();
    336c:	9b01      	ldr	r3, [sp, #4]

0000336e <.LBB89>:
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    336e:	f383 8810 	msr	PRIMASK, r3

00003372 <.LBE82>:
}
    3372:	b002      	add	sp, #8
    3374:	bd10      	pop	{r4, pc}

Disassembly of section .text.SERCOM3_USART_Write%60:

00003378 <SERCOM3_USART_Write>:
{
    3378:	b530      	push	{r4, r5, lr}

0000337a <.LCFI1>:
    if(pu8Data != NULL)
    337a:	2800      	cmp	r0, #0
    337c:	d00f      	beq.n	339e <.LVL35>

0000337e <.LVL28>:
        while(u32Length--)
    337e:	2900      	cmp	r1, #0
    3380:	d00f      	beq.n	33a2 <.LVL37>
    3382:	0005      	movs	r5, r0
    3384:	1841      	adds	r1, r0, r1

00003386 <.LVL29>:
            while((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_DRE_Msk) != SERCOM_USART_INT_INTFLAG_DRE_Msk);
    3386:	4a08      	ldr	r2, [pc, #32]	; (33a8 <.LVL38+0x4>)
    3388:	2401      	movs	r4, #1

0000338a <.LVL30>:
    338a:	7e13      	ldrb	r3, [r2, #24]
    338c:	4223      	tst	r3, r4
    338e:	d0fc      	beq.n	338a <.LVL30>

00003390 <.LVL31>:
            SERCOM3_REGS->USART_INT.SERCOM_DATA = *pu8Data++;
    3390:	782b      	ldrb	r3, [r5, #0]
    3392:	8513      	strh	r3, [r2, #40]	; 0x28

00003394 <.LVL32>:
    3394:	3501      	adds	r5, #1

00003396 <.LVL33>:
        while(u32Length--)
    3396:	42a9      	cmp	r1, r5
    3398:	d1f7      	bne.n	338a <.LVL30>
        writeStatus = true;
    339a:	2001      	movs	r0, #1

0000339c <.LVL34>:
}
    339c:	bd30      	pop	{r4, r5, pc}

0000339e <.LVL35>:
    bool writeStatus      = false;
    339e:	2000      	movs	r0, #0

000033a0 <.LVL36>:
    33a0:	e7fc      	b.n	339c <.LVL34>

000033a2 <.LVL37>:
        writeStatus = true;
    33a2:	2001      	movs	r0, #1

000033a4 <.LVL38>:
    33a4:	e7fa      	b.n	339c <.LVL34>
    33a6:	46c0      	nop			; (mov r8, r8)
    33a8:	42001000 	.word	0x42001000

Disassembly of section .text.__libc_fini_array%61:

000033ac <__libc_fini_array>:
    33ac:	b570      	push	{r4, r5, r6, lr}

000033ae <.LCFI0>:
    33ae:	4b09      	ldr	r3, [pc, #36]	; (33d4 <.LVL4+0x4>)
    33b0:	4c09      	ldr	r4, [pc, #36]	; (33d8 <.LVL4+0x8>)
    33b2:	1ae4      	subs	r4, r4, r3
    33b4:	10a4      	asrs	r4, r4, #2

000033b6 <.LVL0>:
    33b6:	d009      	beq.n	33cc <.LVL3+0x6>
    33b8:	4a08      	ldr	r2, [pc, #32]	; (33dc <.LVL4+0xc>)
    33ba:	18a5      	adds	r5, r4, r2
    33bc:	00ad      	lsls	r5, r5, #2
    33be:	18ed      	adds	r5, r5, r3

000033c0 <.LVL1>:
    33c0:	682b      	ldr	r3, [r5, #0]
    33c2:	3c01      	subs	r4, #1

000033c4 <.LVL2>:
    33c4:	4798      	blx	r3

000033c6 <.LVL3>:
    33c6:	3d04      	subs	r5, #4
    33c8:	2c00      	cmp	r4, #0
    33ca:	d1f9      	bne.n	33c0 <.LVL1>
    33cc:	f7fc fe80 	bl	d0 <_fini>

000033d0 <.LVL4>:
    33d0:	bd70      	pop	{r4, r5, r6, pc}
    33d2:	46c0      	nop			; (mov r8, r8)
    33d4:	000000dc 	.word	0x000000dc
    33d8:	000000e0 	.word	0x000000e0
    33dc:	3fffffff 	.word	0x3fffffff

Disassembly of section .text.ADC_ISR%62:

000033e0 <ADC_ISR>:
{
    33e0:	b510      	push	{r4, lr}

000033e2 <.LCFI0>:
 	speed_ref_pot = ADC1_ConversionResultGet();
    33e2:	4b06      	ldr	r3, [pc, #24]	; (33fc <.LVL4+0x4>)
    33e4:	4798      	blx	r3

000033e6 <.LVL2>:
    33e6:	4b06      	ldr	r3, [pc, #24]	; (3400 <.LVL4+0x8>)
    33e8:	8018      	strh	r0, [r3, #0]
    X2CScope_Update();
    33ea:	4b06      	ldr	r3, [pc, #24]	; (3404 <.LVL4+0xc>)
    33ec:	4798      	blx	r3

000033ee <.LVL3>:
    ADC1_REGS->ADC_INTFLAG = ADC_INTFLAG_Msk;
    33ee:	2207      	movs	r2, #7
    33f0:	4b05      	ldr	r3, [pc, #20]	; (3408 <.LVL4+0x10>)
    33f2:	719a      	strb	r2, [r3, #6]
	motorcontrol();     
    33f4:	4b05      	ldr	r3, [pc, #20]	; (340c <.LVL4+0x14>)
    33f6:	4798      	blx	r3

000033f8 <.LVL4>:
}
    33f8:	bd10      	pop	{r4, pc}
    33fa:	46c0      	nop			; (mov r8, r8)
    33fc:	00003645 	.word	0x00003645
    3400:	200000da 	.word	0x200000da
    3404:	000024f1 	.word	0x000024f1
    3408:	42004800 	.word	0x42004800
    340c:	20007001 	.word	0x20007001

Disassembly of section .rodata%63:

00003410 <.rodata%63>:
    3410:	00001b60 	.word	0x00001b60
    3414:	00001b8e 	.word	0x00001b8e
    3418:	00001bac 	.word	0x00001bac
    341c:	00001bca 	.word	0x00001bca
    3420:	00001c16 	.word	0x00001c16
    3424:	00001c26 	.word	0x00001c26
    3428:	00001c54 	.word	0x00001c54
    342c:	00001c64 	.word	0x00001c64
    3430:	00001ca4 	.word	0x00001ca4
    3434:	00001cc6 	.word	0x00001cc6
    3438:	00001d00 	.word	0x00001d00
    343c:	00001d44 	.word	0x00001d44

Disassembly of section .text.ADC1_InterruptHandler%64:

00003440 <ADC1_InterruptHandler>:
    ADC1_CallbackObject.context = context;
}


void ADC1_InterruptHandler( void )
{
    3440:	b500      	push	{lr}

00003442 <.LCFI0>:
    3442:	b083      	sub	sp, #12

00003444 <.LCFI1>:
    volatile ADC_STATUS status;
    status = ADC1_REGS->ADC_INTFLAG;
    3444:	4a07      	ldr	r2, [pc, #28]	; (3464 <.LCFI1+0x20>)
    3446:	7993      	ldrb	r3, [r2, #6]
    3448:	b2db      	uxtb	r3, r3
    344a:	9301      	str	r3, [sp, #4]
    /* Clear interrupt flag */
    ADC1_REGS->ADC_INTFLAG = ADC_INTENSET_RESRDY_Msk;
    344c:	2301      	movs	r3, #1
    344e:	7193      	strb	r3, [r2, #6]
    if (ADC1_CallbackObject.callback != NULL)
    3450:	4b05      	ldr	r3, [pc, #20]	; (3468 <.LCFI1+0x24>)
    3452:	681b      	ldr	r3, [r3, #0]
    3454:	2b00      	cmp	r3, #0
    3456:	d003      	beq.n	3460 <.LCFI1+0x1c>
    {
        ADC1_CallbackObject.callback(status, ADC1_CallbackObject.context);
    3458:	9801      	ldr	r0, [sp, #4]
    345a:	4a03      	ldr	r2, [pc, #12]	; (3468 <.LCFI1+0x24>)
    345c:	6851      	ldr	r1, [r2, #4]
    345e:	4798      	blx	r3
    }
}
    3460:	b003      	add	sp, #12
    3462:	bd00      	pop	{pc}
    3464:	42004800 	.word	0x42004800
    3468:	20000000 	.word	0x20000000

Disassembly of section .text.X2CScope_Init%65:

0000346c <X2CScope_Init>:
 */
#include "X2CScopeCommunication.h"
#include "X2CScope.h"

void X2CScope_Init(void)
{
    346c:	b510      	push	{r4, lr}

0000346e <.LCFI0>:
    X2CScope_HookUARTFunctions(sendSerial, receiveSerial, isReceiveDataAvailable, isSendReady);
    346e:	4b04      	ldr	r3, [pc, #16]	; (3480 <.Ldebug_line0>)
    3470:	4a04      	ldr	r2, [pc, #16]	; (3484 <.Ldebug_line0+0x4>)
    3472:	4905      	ldr	r1, [pc, #20]	; (3488 <.Ldebug_line0+0x8>)
    3474:	4805      	ldr	r0, [pc, #20]	; (348c <.Ldebug_line0+0xc>)
    3476:	4c06      	ldr	r4, [pc, #24]	; (3490 <.Ldebug_line0+0x10>)
    3478:	47a0      	blx	r4

0000347a <.LVL0>:
    X2CScope_Initialise();
    347a:	4b06      	ldr	r3, [pc, #24]	; (3494 <.Ldebug_line0+0x14>)
    347c:	4798      	blx	r3

0000347e <.LVL1>:
}
    347e:	bd10      	pop	{r4, pc}
    3480:	00003669 	.word	0x00003669
    3484:	0000365d 	.word	0x0000365d
    3488:	000034c1 	.word	0x000034c1
    348c:	00003589 	.word	0x00003589
    3490:	000024f9 	.word	0x000024f9
    3494:	0000243d 	.word	0x0000243d

Disassembly of section .text.EIC_CallbackRegister%66:

00003498 <EIC_CallbackRegister>:
{
    3498:	b530      	push	{r4, r5, lr}

0000349a <.LCFI1>:
    if (eicCallbackObject[pin].eicPinNo == pin)
    349a:	0043      	lsls	r3, r0, #1
    349c:	181b      	adds	r3, r3, r0
    349e:	009b      	lsls	r3, r3, #2
    34a0:	4c06      	ldr	r4, [pc, #24]	; (34bc <.LVL5+0x6>)
    34a2:	18e3      	adds	r3, r4, r3
    34a4:	7a1b      	ldrb	r3, [r3, #8]
    34a6:	4283      	cmp	r3, r0
    34a8:	d000      	beq.n	34ac <.LVL4>

000034aa <.LVL3>:
}
    34aa:	bd30      	pop	{r4, r5, pc}

000034ac <.LVL4>:
        eicCallbackObject[pin].callback = callback;
    34ac:	0043      	lsls	r3, r0, #1
    34ae:	181d      	adds	r5, r3, r0
    34b0:	00ad      	lsls	r5, r5, #2
    34b2:	5129      	str	r1, [r5, r4]
        eicCallbackObject[pin].context  = context;
    34b4:	1960      	adds	r0, r4, r5

000034b6 <.LVL5>:
    34b6:	6042      	str	r2, [r0, #4]
}
    34b8:	e7f7      	b.n	34aa <.LVL3>
    34ba:	46c0      	nop			; (mov r8, r8)
    34bc:	20000008 	.word	0x20000008

Disassembly of section .text.receiveSerial%67:

000034c0 <receiveSerial>:
{
    SERCOM3_USART_Write(&data,1);
}

uint8_t receiveSerial()
{
    34c0:	b500      	push	{lr}

000034c2 <.LCFI2>:
    34c2:	b083      	sub	sp, #12

000034c4 <.LCFI3>:
    uint8_t data;
    bool status = false;
    status = SERCOM3_USART_Read(&data, 1);
    34c4:	2101      	movs	r1, #1
    34c6:	466b      	mov	r3, sp
    34c8:	1dd8      	adds	r0, r3, #7
    34ca:	4b05      	ldr	r3, [pc, #20]	; (34e0 <.LVL5+0x4>)
    34cc:	4798      	blx	r3

000034ce <.LVL4>:
    {
      return data;  
    }
    else
    {
      return (uint8_t)(0);
    34ce:	2300      	movs	r3, #0
    if(status == true)
    34d0:	2800      	cmp	r0, #0
    34d2:	d002      	beq.n	34da <.Ldebug_info0+0xb>
      return data;  
    34d4:	466b      	mov	r3, sp
    34d6:	3307      	adds	r3, #7
    34d8:	781b      	ldrb	r3, [r3, #0]
    }
}
    34da:	0018      	movs	r0, r3

000034dc <.LVL5>:
    34dc:	b003      	add	sp, #12
    34de:	bd00      	pop	{pc}
    34e0:	00002bf9 	.word	0x00002bf9

Disassembly of section .text.OC_FAULT_ISR%68:

000034e4 <OC_FAULT_ISR>:
    motor_stop_source = OC_FAULT_STOP;
    34e4:	2208      	movs	r2, #8
    34e6:	4b06      	ldr	r3, [pc, #24]	; (3500 <.LFE57+0x1c>)
    34e8:	701a      	strb	r2, [r3, #0]
    state_run=0;
    34ea:	2200      	movs	r2, #0
    34ec:	4b05      	ldr	r3, [pc, #20]	; (3504 <.LFE57+0x20>)
    34ee:	701a      	strb	r2, [r3, #0]
    LED1_OC_FAULT_Set();
    34f0:	2180      	movs	r1, #128	; 0x80
    34f2:	0189      	lsls	r1, r1, #6
    34f4:	2398      	movs	r3, #152	; 0x98
    34f6:	2282      	movs	r2, #130	; 0x82
    34f8:	05d2      	lsls	r2, r2, #23
    34fa:	50d1      	str	r1, [r2, r3]
    34fc:	e7fe      	b.n	34fc <OC_FAULT_ISR+0x18>
    34fe:	46c0      	nop			; (mov r8, r8)
    3500:	20007eb3 	.word	0x20007eb3
    3504:	200000d1 	.word	0x200000d1

Disassembly of section .rodata%69:

00003508 <.rodata%69>:
    3508:	00000570 	.word	0x00000570
    350c:	000005d4 	.word	0x000005d4
    3510:	00000572 	.word	0x00000572
    3514:	00000570 	.word	0x00000570
    3518:	00000560 	.word	0x00000560
    351c:	000005b0 	.word	0x000005b0
    3520:	000005b0 	.word	0x000005b0
    3524:	000006f4 	.word	0x000006f4
    3528:	000006c2 	.word	0x000006c2

Disassembly of section .text.EVSYS_Initialize%70:

0000352c <EVSYS_Initialize>:
#include "plib_evsys.h"


void EVSYS_Initialize( void )
{	/*Event Channel User Configuration*/
	EVSYS_REGS->EVSYS_USER[9] = EVSYS_USER_CHANNEL(0x2);
    352c:	2384      	movs	r3, #132	; 0x84
    352e:	05db      	lsls	r3, r3, #23
    3530:	2102      	movs	r1, #2
    3532:	22a4      	movs	r2, #164	; 0xa4
    3534:	5099      	str	r1, [r3, r2]
	EVSYS_REGS->EVSYS_USER[30] = EVSYS_USER_CHANNEL(0x1);
    3536:	3901      	subs	r1, #1
    3538:	3254      	adds	r2, #84	; 0x54
    353a:	5099      	str	r1, [r3, r2]

	/* Event Channel 0 Configuration */
	EVSYS_REGS->EVSYS_CHANNEL[0] = EVSYS_CHANNEL_EVGEN(35) | EVSYS_CHANNEL_PATH(2) | EVSYS_CHANNEL_EDGSEL(1) \
    353c:	4a02      	ldr	r2, [pc, #8]	; (3548 <EVSYS_Initialize+0x1c>)
    353e:	621a      	str	r2, [r3, #32]
									 ;
	/* Event Channel 1 Configuration */
	EVSYS_REGS->EVSYS_CHANNEL[1] = EVSYS_CHANNEL_EVGEN(16) | EVSYS_CHANNEL_PATH(2) | EVSYS_CHANNEL_EDGSEL(1) \
    3540:	3a13      	subs	r2, #19
    3542:	625a      	str	r2, [r3, #36]	; 0x24
									 ;

}
    3544:	4770      	bx	lr
    3546:	46c0      	nop			; (mov r8, r8)
    3548:	00000623 	.word	0x00000623

Disassembly of section .text%71:

0000354c <X2C_Init>:
    354c:	b510      	push	{r4, lr}
    354e:	4802      	ldr	r0, [pc, #8]	; (3558 <.LVL0+0x4>)
    3550:	f7fc ffbd 	bl	4ce <.LASF14>

00003554 <.LVL0>:
    3554:	bd10      	pop	{r4, pc}
    3556:	46c0      	nop			; (mov r8, r8)
    3558:	20000110 	.word	0x20000110

0000355c <X2C_Update>:
    355c:	b510      	push	{r4, lr}
    355e:	4802      	ldr	r0, [pc, #8]	; (3568 <.LVL1+0x4>)
    3560:	f7fc fff4 	bl	54c <Scope_Main_Update>

00003564 <.LVL1>:
    3564:	bd10      	pop	{r4, pc}
    3566:	46c0      	nop			; (mov r8, r8)
    3568:	20000110 	.word	0x20000110

Disassembly of section .text.TCC0_PWMStart%72:

0000356c <TCC0_PWMStart>:


/* Start the PWM generation */
void TCC0_PWMStart(void)
{
    TCC0_REGS->TCC_CTRLA |= TCC_CTRLA_ENABLE_Msk;
    356c:	4a05      	ldr	r2, [pc, #20]	; (3584 <.LFE1+0x18>)
    356e:	6813      	ldr	r3, [r2, #0]
    3570:	2102      	movs	r1, #2
    3572:	430b      	orrs	r3, r1
    3574:	6013      	str	r3, [r2, #0]
    while (TCC0_REGS->TCC_SYNCBUSY & (TCC_SYNCBUSY_ENABLE_Msk))
    3576:	0011      	movs	r1, r2
    3578:	2202      	movs	r2, #2
    357a:	688b      	ldr	r3, [r1, #8]
    357c:	421a      	tst	r2, r3
    357e:	d1fc      	bne.n	357a <TCC0_PWMStart+0xe>
    {
        /* Wait for sync */
    }
}
    3580:	4770      	bx	lr
    3582:	46c0      	nop			; (mov r8, r8)
    3584:	42002400 	.word	0x42002400

Disassembly of section .text.sendSerial%73:

00003588 <sendSerial>:
{
    3588:	b500      	push	{lr}

0000358a <.LCFI0>:
    358a:	b083      	sub	sp, #12

0000358c <.LCFI1>:
    358c:	466b      	mov	r3, sp
    358e:	71d8      	strb	r0, [r3, #7]
    3590:	3307      	adds	r3, #7
    SERCOM3_USART_Write(&data,1);
    3592:	2101      	movs	r1, #1
    3594:	0018      	movs	r0, r3

00003596 <.LVL1>:
    3596:	4b02      	ldr	r3, [pc, #8]	; (35a0 <.LVL2+0x6>)
    3598:	4798      	blx	r3

0000359a <.LVL2>:
}
    359a:	b003      	add	sp, #12
    359c:	bd00      	pop	{pc}
    359e:	46c0      	nop			; (mov r8, r8)
    35a0:	00003379 	.word	0x00003379

Disassembly of section .text.ADC1_Enable%74:

000035a4 <ADC1_Enable>:
    ADC1_REGS->ADC_CTRLA |= ADC_CTRLA_ENABLE_Msk;
    35a4:	4a04      	ldr	r2, [pc, #16]	; (35b8 <.LFE56+0x14>)
    35a6:	7813      	ldrb	r3, [r2, #0]
    35a8:	2102      	movs	r1, #2
    35aa:	430b      	orrs	r3, r1
    35ac:	7013      	strb	r3, [r2, #0]
    while(ADC1_REGS->ADC_SYNCBUSY)
    35ae:	8c13      	ldrh	r3, [r2, #32]
    35b0:	b29b      	uxth	r3, r3
    35b2:	2b00      	cmp	r3, #0
    35b4:	d1fb      	bne.n	35ae <ADC1_Enable+0xa>
}
    35b6:	4770      	bx	lr
    35b8:	42004800 	.word	0x42004800

Disassembly of section .rodata%75:

000035bc <.rodata%75>:
    35bc:	000016ac 	.word	0x000016ac
    35c0:	000016c2 	.word	0x000016c2
    35c4:	000016ce 	.word	0x000016ce
    35c8:	000016da 	.word	0x000016da
    35cc:	000016e6 	.word	0x000016e6
    35d0:	000016f2 	.word	0x000016f2

Disassembly of section .text.register_fini%76:

000035d4 <register_fini>:
    35d4:	4b03      	ldr	r3, [pc, #12]	; (35e4 <.LBE2+0x2>)
    35d6:	b510      	push	{r4, lr}

000035d8 <.LCFI0>:
    35d8:	2b00      	cmp	r3, #0
    35da:	d002      	beq.n	35e2 <.LBE2>

000035dc <.LBB2>:
    35dc:	4802      	ldr	r0, [pc, #8]	; (35e8 <.LBE2+0x6>)
    35de:	f000 f829 	bl	3634 <.LFE54>

000035e2 <.LBE2>:
    35e2:	bd10      	pop	{r4, pc}
    35e4:	00000000 	.word	0x00000000
    35e8:	000033ad 	.word	0x000033ad

Disassembly of section .text.SERCOM3_USART_ErrorGet%77:

000035ec <SERCOM3_USART_ErrorGet>:

USART_ERROR SERCOM3_USART_ErrorGet( void )
{
    USART_ERROR errorStatus = USART_ERROR_NONE;

    errorStatus = SERCOM3_REGS->USART_INT.SERCOM_STATUS & (SERCOM_USART_INT_STATUS_PERR_Msk | SERCOM_USART_INT_STATUS_FERR_Msk | SERCOM_USART_INT_STATUS_BUFOVF_Msk);
    35ec:	4b03      	ldr	r3, [pc, #12]	; (35fc <.LVL49+0x4>)
    35ee:	8b58      	ldrh	r0, [r3, #26]

000035f0 <.LVL48>:

    /* Clear Errors */
    SERCOM3_REGS->USART_INT.SERCOM_STATUS = SERCOM_USART_INT_STATUS_PERR_Msk | SERCOM_USART_INT_STATUS_FERR_Msk | SERCOM_USART_INT_STATUS_BUFOVF_Msk;
    35f0:	2207      	movs	r2, #7
    35f2:	835a      	strh	r2, [r3, #26]

    return errorStatus;
    35f4:	2307      	movs	r3, #7
    35f6:	4018      	ands	r0, r3

000035f8 <.LVL49>:
}
    35f8:	4770      	bx	lr
    35fa:	46c0      	nop			; (mov r8, r8)
    35fc:	42001000 	.word	0x42001000

Disassembly of section .rodata%78:

00003600 <compilationDate>:
    3600:	206e614a 32203320 30393130 38343a30     Jan  3 201900:48
    3610:	0032353a                                :52.

Disassembly of section .text.SERCOM3_USART_TransmitterIsReady%79:

00003614 <SERCOM3_USART_TransmitterIsReady>:
    if((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_DRE_Msk) == SERCOM_USART_INT_INTFLAG_DRE_Msk)
    3614:	4b02      	ldr	r3, [pc, #8]	; (3620 <.LVL41+0x4>)
    3616:	7e18      	ldrb	r0, [r3, #24]

00003618 <.LVL40>:
    return transmitterStatus;
    3618:	2301      	movs	r3, #1
    361a:	4018      	ands	r0, r3

0000361c <.LVL41>:
}
    361c:	4770      	bx	lr
    361e:	46c0      	nop			; (mov r8, r8)
    3620:	42001000 	.word	0x42001000

Disassembly of section .text.SERCOM3_USART_ReceiverIsReady%80:

00003624 <SERCOM3_USART_ReceiverIsReady>:
    if((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_RXC_Msk) == SERCOM_USART_INT_INTFLAG_RXC_Msk)
    3624:	4b02      	ldr	r3, [pc, #8]	; (3630 <.LVL46+0x6>)
    3626:	7e18      	ldrb	r0, [r3, #24]

00003628 <.LVL45>:
    3628:	0740      	lsls	r0, r0, #29

0000362a <.LVL46>:
    return receiverStatus;
    362a:	0fc0      	lsrs	r0, r0, #31
}
    362c:	4770      	bx	lr
    362e:	46c0      	nop			; (mov r8, r8)
    3630:	42001000 	.word	0x42001000

Disassembly of section .text.atexit%81:

00003634 <atexit>:
    3634:	b510      	push	{r4, lr}

00003636 <.LCFI0>:
    3636:	0001      	movs	r1, r0
    3638:	2300      	movs	r3, #0
    363a:	2200      	movs	r2, #0
    363c:	2000      	movs	r0, #0

0000363e <.LVL1>:
    363e:	f7ff f85d 	bl	26fc <__register_exitproc>

00003642 <.LVL2>:
    3642:	bd10      	pop	{r4, pc}

Disassembly of section .text.ADC1_ConversionResultGet%82:

00003644 <ADC1_ConversionResultGet>:
    return (uint16_t)ADC1_REGS->ADC_RESULT;
    3644:	4b01      	ldr	r3, [pc, #4]	; (364c <.LFE0+0x8>)
    3646:	8c98      	ldrh	r0, [r3, #36]	; 0x24
    3648:	b280      	uxth	r0, r0
}
    364a:	4770      	bx	lr
    364c:	42004800 	.word	0x42004800

Disassembly of section .text.ADC1_CallbackRegister%83:

00003650 <ADC1_CallbackRegister>:
    ADC1_CallbackObject.callback = callback;
    3650:	4b01      	ldr	r3, [pc, #4]	; (3658 <.LFE53+0x8>)
    3652:	6018      	str	r0, [r3, #0]
    ADC1_CallbackObject.context = context;
    3654:	6059      	str	r1, [r3, #4]
}
    3656:	4770      	bx	lr
    3658:	20000000 	.word	0x20000000

Disassembly of section .text.isReceiveDataAvailable%84:

0000365c <isReceiveDataAvailable>:

uint8_t isReceiveDataAvailable()
{
    365c:	b510      	push	{r4, lr}

0000365e <.LCFI4>:
    return (SERCOM3_USART_ReceiverIsReady());
    365e:	4b01      	ldr	r3, [pc, #4]	; (3664 <.LVL6+0x2>)
    3660:	4798      	blx	r3

00003662 <.LVL6>:

}
    3662:	bd10      	pop	{r4, pc}
    3664:	00003625 	.word	0x00003625

Disassembly of section .text.isSendReady%85:

00003668 <isSendReady>:

uint8_t isSendReady()
{
    3668:	b510      	push	{r4, lr}

0000366a <.LCFI5>:
    return (SERCOM3_USART_TransmitterIsReady());
    366a:	4b01      	ldr	r3, [pc, #4]	; (3670 <.LVL7+0x2>)
    366c:	4798      	blx	r3

0000366e <.LVL7>:
}
    366e:	bd10      	pop	{r4, pc}
    3670:	00003615 	.word	0x00003615

Disassembly of section .text%86:

00003674 <initVersionInfo>:
    3674:	8401      	strh	r1, [r0, #32]
    3676:	4b01      	ldr	r3, [pc, #4]	; (367c <.LFE59+0x8>)
    3678:	6243      	str	r3, [r0, #36]	; 0x24
    367a:	4770      	bx	lr
    367c:	00003600 	.word	0x00003600

Disassembly of section .rodata._global_impure_ptr%87:

00003680 <_global_impure_ptr>:
    3680:	20002188                                .!. 

Disassembly of section .text.DIVAS_Initialize%88:

00002dc2 <DIVAS_Initialize>:
}
    2dc2:	4770      	bx	lr

Disassembly of section .text.Dummy_Handler%89:

00003376 <Dummy_Handler>:

extern uint32_t _stack;

/* Brief default interrupt handler for unused IRQs.*/
void __attribute__((optimize("-O1"),section(".text.Dummy_Handler"),long_call))Dummy_Handler(void)
{
    3376:	e7fe      	b.n	3376 <Dummy_Handler>

Disassembly of section .text.NonMaskableInt_Handler%90:

00003684 <NonMaskableInt_Handler>:
// *****************************************************************************

/* Brief default interrupt handlers for core IRQs.*/

void NonMaskableInt_Handler(void)
{
    3684:	e7fe      	b.n	3684 <NonMaskableInt_Handler>

Disassembly of section .text.HardFault_Handler%91:

00003686 <HardFault_Handler>:
    {
    }
}

void HardFault_Handler(void)
{
    3686:	e7fe      	b.n	3686 <HardFault_Handler>
