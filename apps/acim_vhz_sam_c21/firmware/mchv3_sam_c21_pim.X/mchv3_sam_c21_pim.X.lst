
dist\mchv3_sam_c21_pim\production\mchv3_sam_c21_pim.X.production.elf:     file format elf32-littlearm


Disassembly of section .vectors:

00000000 <exception_table>:
   0:	f8 6f 00 20 85 30 00 00 a5 37 00 00 a7 37 00 00     .o. .0...7...7..
	...
  2c:	97 34 00 00 00 00 00 00 00 00 00 00 97 34 00 00     .4...........4..
  3c:	97 34 00 00 97 34 00 00 97 34 00 00 97 34 00 00     .4...4...4...4..
  4c:	65 32 00 00 97 34 00 00 97 34 00 00 97 34 00 00     e2...4...4...4..
  5c:	97 34 00 00 97 34 00 00 97 34 00 00 97 34 00 00     .4...4...4...4..
  6c:	97 34 00 00 97 34 00 00 97 34 00 00 97 34 00 00     .4...4...4...4..
  7c:	97 34 00 00 97 34 00 00 97 34 00 00 97 34 00 00     .4...4...4...4..
  8c:	97 34 00 00 97 34 00 00 97 34 00 00 97 34 00 00     .4...4...4...4..
  9c:	97 34 00 00 97 34 00 00 97 34 00 00 8d 35 00 00     .4...4...4...5..
  ac:	97 34 00 00 97 34 00 00 97 34 00 00 97 34 00 00     .4...4...4...4..

Disassembly of section .text:

000000bc <_init>:
  bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  be:	46c0      	nop			; (mov r8, r8)
  c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  c2:	bc08      	pop	{r3}
  c4:	469e      	mov	lr, r3
  c6:	4770      	bx	lr

000000c8 <__init_array_start>:
  c8:	000036f5 	.word	0x000036f5

000000cc <__frame_dummy_init_array_entry>:
  cc:	00002f8d                                ./..

000000d0 <_fini>:
  d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  d2:	46c0      	nop			; (mov r8, r8)
  d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  d6:	bc08      	pop	{r3}
  d8:	469e      	mov	lr, r3
  da:	4770      	bx	lr

000000dc <__fini_array_start>:
  dc:	00002f65 	.word	0x00002f65

Disassembly of section .RAMFUNC$:

20007000 <motorcontrol>:
#ifdef RAM_EXECUTE
void  __ramfunc__ motorcontrol(void)
#else
void motorcontrol(void)
#endif
{
20007000:	b570      	push	{r4, r5, r6, lr}

20007002 <.LCFI2>:
  uint32_t	s32a;      
  
  speed_ref_filter = (uint16_t)(((SPEED_FILTER_COEFF*speed_ref_pot) + ((16-SPEED_FILTER_COEFF)*speed_ref_filter))>>4);  
20007002:	4ba7      	ldr	r3, [pc, #668]	; (200072a0 <.LBE40+0x2c>)
20007004:	8819      	ldrh	r1, [r3, #0]
20007006:	48a7      	ldr	r0, [pc, #668]	; (200072a4 <.LBE40+0x30>)
20007008:	8802      	ldrh	r2, [r0, #0]
2000700a:	0053      	lsls	r3, r2, #1
2000700c:	189a      	adds	r2, r3, r2
2000700e:	008b      	lsls	r3, r1, #2
20007010:	185b      	adds	r3, r3, r1
20007012:	189b      	adds	r3, r3, r2
20007014:	10db      	asrs	r3, r3, #3
20007016:	b29a      	uxth	r2, r3
20007018:	8002      	strh	r2, [r0, #0]
  
  if(speed_ref_filter <= 1898) // 1898 or 1848 
2000701a:	48a3      	ldr	r0, [pc, #652]	; (200072a8 <.LBE40+0x34>)
2000701c:	4282      	cmp	r2, r0
2000701e:	d833      	bhi.n	20007088 <.LCFI2+0x86>
  {
	  demand_dir = 0x00;
20007020:	2400      	movs	r4, #0
20007022:	48a2      	ldr	r0, [pc, #648]	; (200072ac <.LBE40+0x38>)
20007024:	7004      	strb	r4, [r0, #0]
  else if(speed_ref_filter > 2198)  // 2198 or 2248
  {
	  demand_dir = 0x08;
  }
    
  if(speed_ref_filter <= 2048)
20007026:	2080      	movs	r0, #128	; 0x80
20007028:	0100      	lsls	r0, r0, #4
2000702a:	4282      	cmp	r2, r0
2000702c:	d833      	bhi.n	20007096 <.LCFI2+0x94>
  {
	  set_speed = ((2048 - speed_ref_filter)*MAX_MOTOR_SPEED)>>11;
2000702e:	041b      	lsls	r3, r3, #16
20007030:	0c1b      	lsrs	r3, r3, #16
20007032:	1ac2      	subs	r2, r0, r3
20007034:	23e1      	movs	r3, #225	; 0xe1
20007036:	00db      	lsls	r3, r3, #3
20007038:	4353      	muls	r3, r2
2000703a:	12db      	asrs	r3, r3, #11
2000703c:	4a9c      	ldr	r2, [pc, #624]	; (200072b0 <.LBE40+0x3c>)
2000703e:	8013      	strh	r3, [r2, #0]
  else if(speed_ref_pot > 2048)
  {
      set_speed = ((speed_ref_filter - 2048)*MAX_MOTOR_SPEED)>>11;
  }
    
  if(set_speed > MAX_MOTOR_SPEED)
20007040:	23e1      	movs	r3, #225	; 0xe1
20007042:	00db      	lsls	r3, r3, #3
20007044:	4a9a      	ldr	r2, [pc, #616]	; (200072b0 <.LBE40+0x3c>)
20007046:	8812      	ldrh	r2, [r2, #0]
20007048:	429a      	cmp	r2, r3
2000704a:	d902      	bls.n	20007052 <.LCFI2+0x50>
  {
	  set_speed = MAX_MOTOR_SPEED;
2000704c:	001a      	movs	r2, r3
2000704e:	4b98      	ldr	r3, [pc, #608]	; (200072b0 <.LBE40+0x3c>)
20007050:	801a      	strh	r2, [r3, #0]
  }
  
  if((demand_dir != direction) && (state_halt == 0U))
20007052:	4b96      	ldr	r3, [pc, #600]	; (200072ac <.LBE40+0x38>)
20007054:	781d      	ldrb	r5, [r3, #0]
20007056:	4b97      	ldr	r3, [pc, #604]	; (200072b4 <.LBE40+0x40>)
20007058:	781b      	ldrb	r3, [r3, #0]
2000705a:	42ab      	cmp	r3, r5
2000705c:	d02b      	beq.n	200070b6 <.LCFI2+0xb4>
2000705e:	4b96      	ldr	r3, [pc, #600]	; (200072b8 <.LBE40+0x44>)
20007060:	781b      	ldrb	r3, [r3, #0]
20007062:	2b00      	cmp	r3, #0
20007064:	d127      	bne.n	200070b6 <.LCFI2+0xb4>
  {
  	 direction_changed = 1;
20007066:	2201      	movs	r2, #1
20007068:	4b94      	ldr	r3, [pc, #592]	; (200072bc <.LBE40+0x48>)
2000706a:	701a      	strb	r2, [r3, #0]
  		   	    
  } 
  if(( ram_abs == 0U) && (1U == direction_changed ))
2000706c:	4b94      	ldr	r3, [pc, #592]	; (200072c0 <.LBE40+0x4c>)
2000706e:	2400      	movs	r4, #0
20007070:	5f1c      	ldrsh	r4, [r3, r4]
20007072:	2c00      	cmp	r4, #0
20007074:	d038      	beq.n	200070e8 <.LCFI2+0xe6>
		  direction = demand_dir;
		  sysph.ang = 0;
  } 
      
  /* performs motor control if needed */
  if (0U != state_run)
20007076:	4b93      	ldr	r3, [pc, #588]	; (200072c4 <.LBE40+0x50>)
20007078:	781b      	ldrb	r3, [r3, #0]
2000707a:	2b00      	cmp	r3, #0
2000707c:	d100      	bne.n	20007080 <.LCFI2+0x7e>
2000707e:	e0cb      	b.n	20007218 <.LVL35+0x4>
			  s32a = ext_speed_ref_rpm * MAX_SPEED_SCALED;
			  ref_abs =  (uint32_t) s32a / (uint32_t) MAX_MOTOR_SPEED;			  			  
		}
		else
		{
			  ref_abs = 0;
20007080:	2200      	movs	r2, #0
20007082:	4b91      	ldr	r3, [pc, #580]	; (200072c8 <.LBE40+0x54>)
20007084:	801a      	strh	r2, [r3, #0]
20007086:	e0c7      	b.n	20007218 <.LVL35+0x4>
  else if(speed_ref_filter > 2198)  // 2198 or 2248
20007088:	4890      	ldr	r0, [pc, #576]	; (200072cc <.LBE40+0x58>)
2000708a:	4282      	cmp	r2, r0
2000708c:	d9cb      	bls.n	20007026 <.LCFI2+0x24>
	  demand_dir = 0x08;
2000708e:	2408      	movs	r4, #8
20007090:	4886      	ldr	r0, [pc, #536]	; (200072ac <.LBE40+0x38>)
20007092:	7004      	strb	r4, [r0, #0]
20007094:	e7c7      	b.n	20007026 <.LCFI2+0x24>
  else if(speed_ref_pot > 2048)
20007096:	2280      	movs	r2, #128	; 0x80
20007098:	0112      	lsls	r2, r2, #4
2000709a:	4291      	cmp	r1, r2
2000709c:	d9d0      	bls.n	20007040 <.LCFI2+0x3e>
      set_speed = ((speed_ref_filter - 2048)*MAX_MOTOR_SPEED)>>11;
2000709e:	041b      	lsls	r3, r3, #16
200070a0:	0c1b      	lsrs	r3, r3, #16
200070a2:	4a8b      	ldr	r2, [pc, #556]	; (200072d0 <.LBE40+0x5c>)
200070a4:	4694      	mov	ip, r2
200070a6:	4463      	add	r3, ip
200070a8:	22e1      	movs	r2, #225	; 0xe1
200070aa:	00d2      	lsls	r2, r2, #3
200070ac:	4353      	muls	r3, r2
200070ae:	12db      	asrs	r3, r3, #11
200070b0:	4a7f      	ldr	r2, [pc, #508]	; (200072b0 <.LBE40+0x3c>)
200070b2:	8013      	strh	r3, [r2, #0]
200070b4:	e7c4      	b.n	20007040 <.LCFI2+0x3e>
  if(( ram_abs == 0U) && (1U == direction_changed ))
200070b6:	4b82      	ldr	r3, [pc, #520]	; (200072c0 <.LBE40+0x4c>)
200070b8:	2400      	movs	r4, #0
200070ba:	5f1c      	ldrsh	r4, [r3, r4]
200070bc:	2c00      	cmp	r4, #0
200070be:	d000      	beq.n	200070c2 <.LCFI2+0xc0>
200070c0:	e095      	b.n	200071ee <.LBE38>
200070c2:	4b7e      	ldr	r3, [pc, #504]	; (200072bc <.LBE40+0x48>)
200070c4:	781b      	ldrb	r3, [r3, #0]
200070c6:	2b01      	cmp	r3, #1
200070c8:	d00e      	beq.n	200070e8 <.LCFI2+0xe6>
  if (0U != state_run)
200070ca:	4b7e      	ldr	r3, [pc, #504]	; (200072c4 <.LBE40+0x50>)
200070cc:	781b      	ldrb	r3, [r3, #0]
200070ce:	2b00      	cmp	r3, #0
200070d0:	d000      	beq.n	200070d4 <.LCFI2+0xd2>
200070d2:	e090      	b.n	200071f6 <.LBE38+0x8>
  }
  else
  {
	 if(ram_abs == 0)
	 {
		 state_halt = 1;
200070d4:	2201      	movs	r2, #1
200070d6:	4b78      	ldr	r3, [pc, #480]	; (200072b8 <.LBE40+0x44>)
200070d8:	701a      	strb	r2, [r3, #0]
	 }
  }
  
	if(ref_abs > ram_abs)
200070da:	4b7b      	ldr	r3, [pc, #492]	; (200072c8 <.LBE40+0x54>)
200070dc:	881b      	ldrh	r3, [r3, #0]
200070de:	1e19      	subs	r1, r3, #0
200070e0:	dc00      	bgt.n	200070e4 <.LCFI2+0xe2>
200070e2:	e0b8      	b.n	20007256 <.LBB40>
200070e4:	2400      	movs	r4, #0
200070e6:	e09c      	b.n	20007222 <.LVL35+0xe>
		  direction_changed = 0;
200070e8:	2300      	movs	r3, #0
200070ea:	4a74      	ldr	r2, [pc, #464]	; (200072bc <.LBE40+0x48>)
200070ec:	7013      	strb	r3, [r2, #0]
		  direction = demand_dir;
200070ee:	4a71      	ldr	r2, [pc, #452]	; (200072b4 <.LBE40+0x40>)
200070f0:	7015      	strb	r5, [r2, #0]
		  sysph.ang = 0;
200070f2:	4a78      	ldr	r2, [pc, #480]	; (200072d4 <.LBE40+0x60>)
200070f4:	8013      	strh	r3, [r2, #0]
  if (0U != state_run)
200070f6:	4b73      	ldr	r3, [pc, #460]	; (200072c4 <.LBE40+0x50>)
200070f8:	781b      	ldrb	r3, [r3, #0]
200070fa:	2b00      	cmp	r3, #0
200070fc:	d0ea      	beq.n	200070d4 <.LCFI2+0xd2>
200070fe:	2400      	movs	r4, #0
20007100:	e07e      	b.n	20007200 <.LBE38+0x12>
	{			  
		if(acceleration_count == 1)   // For every 2 times of PWM Period, the ram_abs incremented by 1.  The max speed is mapped to 2^14.
		{							   // For e.g every 1 times is 2*50 us = 0.1 ms, ram_abs incremented by acc_ramp.  So Zero to max speed achieved at 16384 by 1638 ms or 1.638 S.  	
			acceleration_count = 0;
20007102:	2000      	movs	r0, #0
20007104:	4a74      	ldr	r2, [pc, #464]	; (200072d8 <.LBE40+0x64>)
20007106:	7010      	strb	r0, [r2, #0]
			
				ram_abs += acc_ramp; //acc_ramp;
20007108:	4a74      	ldr	r2, [pc, #464]	; (200072dc <.LBE40+0x68>)
2000710a:	8812      	ldrh	r2, [r2, #0]
2000710c:	1914      	adds	r4, r2, r4
2000710e:	b224      	sxth	r4, r4
				if(ref_abs < ram_abs)
20007110:	428c      	cmp	r4, r1
20007112:	dc02      	bgt.n	2000711a <.LCFI2+0x118>
				ram_abs += acc_ramp; //acc_ramp;
20007114:	4b6a      	ldr	r3, [pc, #424]	; (200072c0 <.LBE40+0x4c>)
20007116:	801c      	strh	r4, [r3, #0]
20007118:	e098      	b.n	2000724c <.LVL35+0x38>
				{
					ram_abs = ref_abs;
2000711a:	4a69      	ldr	r2, [pc, #420]	; (200072c0 <.LBE40+0x4c>)
2000711c:	8013      	strh	r3, [r2, #0]
2000711e:	e088      	b.n	20007232 <.LVL35+0x1e>
	
	if(ref_abs < ram_abs)
	{
		if(deceleration_count == 1)   // For every 2 times of PWM Period, the ram_abs decremented by 1.  The max speed is mapped to 2^14.
		{							   // For e.g every 1 times is 2*50 us = 0.1 ms, ram_abs decremented by dec_ramp.  So Max speed to Zero speed achieved at 16384 by 1638 ms or 1.638 S.
			deceleration_count = 0;
20007120:	2400      	movs	r4, #0
20007122:	486f      	ldr	r0, [pc, #444]	; (200072e0 <.LBE40+0x6c>)
20007124:	7004      	strb	r4, [r0, #0]
			
				ram_abs -= dec_ramp; //dec_ramp;
20007126:	486f      	ldr	r0, [pc, #444]	; (200072e4 <.LBE40+0x70>)
20007128:	8800      	ldrh	r0, [r0, #0]
2000712a:	1a12      	subs	r2, r2, r0
2000712c:	b212      	sxth	r2, r2
				if(ref_abs > ram_abs)
2000712e:	428a      	cmp	r2, r1
20007130:	db02      	blt.n	20007138 <.LCFI2+0x136>
				ram_abs -= dec_ramp; //dec_ramp;
20007132:	4b63      	ldr	r3, [pc, #396]	; (200072c0 <.LBE40+0x4c>)
20007134:	801a      	strh	r2, [r3, #0]
20007136:	e089      	b.n	2000724c <.LVL35+0x38>
				{
					ram_abs = ref_abs;
20007138:	4a61      	ldr	r2, [pc, #388]	; (200072c0 <.LBE40+0x4c>)
2000713a:	8013      	strh	r3, [r2, #0]
2000713c:	e086      	b.n	2000724c <.LVL35+0x38>
	}
	
	if(0U == state_halt)
	{	
		/* Computing the angle to be incremented for the current speed level */ 
		angle_incr = (uint32_t) ((uint32_t) (NUMBER_OF_POLES * ram_abs * MAX_MOTOR_SPEED)/(uint32_t)(30000 * PWM_FREQUENCY));
2000713e:	4c60      	ldr	r4, [pc, #384]	; (200072c0 <.LBE40+0x4c>)
20007140:	2200      	movs	r2, #0
20007142:	5ea3      	ldrsh	r3, [r4, r2]
20007144:	20e1      	movs	r0, #225	; 0xe1
20007146:	0140      	lsls	r0, r0, #5
20007148:	4358      	muls	r0, r3
2000714a:	4967      	ldr	r1, [pc, #412]	; (200072e8 <.LBE40+0x74>)
2000714c:	4b67      	ldr	r3, [pc, #412]	; (200072ec <.LBE40+0x78>)
2000714e:	4798      	blx	r3

20007150 <.LVL15>:
20007150:	b283      	uxth	r3, r0
20007152:	4a67      	ldr	r2, [pc, #412]	; (200072f0 <.LBE40+0x7c>)
20007154:	8013      	strh	r3, [r2, #0]
 	
		sysph.ang = sysph.ang + angle_incr;
20007156:	485f      	ldr	r0, [pc, #380]	; (200072d4 <.LBE40+0x60>)
20007158:	8802      	ldrh	r2, [r0, #0]
2000715a:	189b      	adds	r3, r3, r2
2000715c:	8003      	strh	r3, [r0, #0]
		
		library_sincos(&sysph);
2000715e:	4b65      	ldr	r3, [pc, #404]	; (200072f4 <.LBE40+0x80>)
20007160:	4798      	blx	r3

20007162 <.LVL16>:
		
		s32a = (ram_abs * VF_CONSTANT)>>12;
20007162:	2200      	movs	r2, #0
20007164:	5ea3      	ldrsh	r3, [r4, r2]
20007166:	2496      	movs	r4, #150	; 0x96
20007168:	0064      	lsls	r4, r4, #1
2000716a:	435c      	muls	r4, r3
2000716c:	0b24      	lsrs	r4, r4, #12

2000716e <.LVL17>:
		
		if(s32a < VF_OFFSET)
2000716e:	0020      	movs	r0, r4
20007170:	4b61      	ldr	r3, [pc, #388]	; (200072f8 <.LBE40+0x84>)
20007172:	4798      	blx	r3

20007174 <.LVL18>:
20007174:	4961      	ldr	r1, [pc, #388]	; (200072fc <.LBE40+0x88>)
20007176:	4b62      	ldr	r3, [pc, #392]	; (20007300 <.LBE40+0x8c>)
20007178:	4798      	blx	r3

2000717a <.LVL19>:
2000717a:	2800      	cmp	r0, #0
2000717c:	d023      	beq.n	200071c6 <.LBE32>
		{
			outvdq.x = 0;
2000717e:	4b61      	ldr	r3, [pc, #388]	; (20007304 <.LBE40+0x90>)
20007180:	2200      	movs	r2, #0
20007182:	801a      	strh	r2, [r3, #0]
			outvdq.y = (int32_t) VF_OFFSET;
20007184:	326c      	adds	r2, #108	; 0x6c
20007186:	805a      	strh	r2, [r3, #2]
			outvdq.x = 0;
			outvdq.y = (int32_t) s32a;
		}

         /* voltage Inverse-Park transformation */
        library_dq_ab(&sysph, &outvdq, &outvab);
20007188:	4c5f      	ldr	r4, [pc, #380]	; (20007308 <.LBE40+0x94>)

2000718a <.LVL20>:
2000718a:	0022      	movs	r2, r4
2000718c:	495d      	ldr	r1, [pc, #372]	; (20007304 <.LBE40+0x90>)
2000718e:	4851      	ldr	r0, [pc, #324]	; (200072d4 <.LBE40+0x60>)
20007190:	4b5e      	ldr	r3, [pc, #376]	; (2000730c <.LBE40+0x98>)
20007192:	4798      	blx	r3

20007194 <.LVL21>:
		
        /* voltage Inverse-Clarke transformation */
		library_ab_uvw(&outvab, &outv3);
20007194:	495e      	ldr	r1, [pc, #376]	; (20007310 <.LBE40+0x9c>)
20007196:	0020      	movs	r0, r4
20007198:	4b5e      	ldr	r3, [pc, #376]	; (20007314 <.LBE40+0xa0>)
2000719a:	4798      	blx	r3

2000719c <.LVL22>:

        /* SVPWM, 3rd harmonic injection using Min and Max method */
        pwm_modulation();
2000719c:	4b5e      	ldr	r3, [pc, #376]	; (20007318 <.LBE40+0xa4>)
2000719e:	4798      	blx	r3

200071a0 <.LVL23>:

	   if(direction == 0x08U)
200071a0:	4b44      	ldr	r3, [pc, #272]	; (200072b4 <.LBE40+0x40>)
200071a2:	781b      	ldrb	r3, [r3, #0]
200071a4:	2b08      	cmp	r3, #8
200071a6:	d013      	beq.n	200071d0 <.LVL28>

200071a8 <.LVL24>:
        TCC0_PWM24bitDutySet(TCC0_CHANNEL2,(uint32_t)dutycycle[2]);
	   }
	   else
	   {           
             /*Using register address of TCC0 */
        TCC0_PWM24bitDutySet(TCC0_CHANNEL0,(uint32_t)dutycycle[0]);
200071a8:	495c      	ldr	r1, [pc, #368]	; (2000731c <.LBE40+0xa8>)

200071aa <.LBB28>:

void TCC0_PWM24bitCounterSet(uint32_t count);

__STATIC_INLINE void TCC0_PWM24bitDutySet(TCC0_CHANNEL_NUM channel, uint32_t duty)
{
    TCC0_REGS->TCC_CCBUF[channel] = duty & 0xFFFFFF;
200071aa:	680b      	ldr	r3, [r1, #0]
200071ac:	021b      	lsls	r3, r3, #8
200071ae:	0a1b      	lsrs	r3, r3, #8
200071b0:	4a5b      	ldr	r2, [pc, #364]	; (20007320 <.LBE40+0xac>)
200071b2:	6713      	str	r3, [r2, #112]	; 0x70

200071b4 <.LBB30>:
200071b4:	688b      	ldr	r3, [r1, #8]
200071b6:	021b      	lsls	r3, r3, #8
200071b8:	0a1b      	lsrs	r3, r3, #8
200071ba:	6753      	str	r3, [r2, #116]	; 0x74

200071bc <.LBB32>:
200071bc:	684b      	ldr	r3, [r1, #4]
200071be:	021b      	lsls	r3, r3, #8
200071c0:	0a1b      	lsrs	r3, r3, #8
200071c2:	6793      	str	r3, [r2, #120]	; 0x78
200071c4:	e06b      	b.n	2000729e <.LBE40+0x2a>

200071c6 <.LBE32>:
			outvdq.x = 0;
200071c6:	4b4f      	ldr	r3, [pc, #316]	; (20007304 <.LBE40+0x90>)
200071c8:	2200      	movs	r2, #0
200071ca:	801a      	strh	r2, [r3, #0]
			outvdq.y = (int32_t) s32a;
200071cc:	805c      	strh	r4, [r3, #2]
200071ce:	e7db      	b.n	20007188 <.LVL19+0xe>

200071d0 <.LVL28>:
        TCC0_PWM24bitDutySet(TCC0_CHANNEL0,(uint32_t)dutycycle[0]);
200071d0:	4952      	ldr	r1, [pc, #328]	; (2000731c <.LBE40+0xa8>)

200071d2 <.LBB34>:
200071d2:	680b      	ldr	r3, [r1, #0]
200071d4:	021b      	lsls	r3, r3, #8
200071d6:	0a1b      	lsrs	r3, r3, #8
200071d8:	4a51      	ldr	r2, [pc, #324]	; (20007320 <.LBE40+0xac>)
200071da:	6713      	str	r3, [r2, #112]	; 0x70

200071dc <.LBB36>:
200071dc:	684b      	ldr	r3, [r1, #4]
200071de:	021b      	lsls	r3, r3, #8
200071e0:	0a1b      	lsrs	r3, r3, #8
200071e2:	6753      	str	r3, [r2, #116]	; 0x74

200071e4 <.LBB38>:
200071e4:	688b      	ldr	r3, [r1, #8]
200071e6:	021b      	lsls	r3, r3, #8
200071e8:	0a1b      	lsrs	r3, r3, #8
200071ea:	6793      	str	r3, [r2, #120]	; 0x78
200071ec:	e057      	b.n	2000729e <.LBE40+0x2a>

200071ee <.LBE38>:
  if (0U != state_run)
200071ee:	4b35      	ldr	r3, [pc, #212]	; (200072c4 <.LBE40+0x50>)
200071f0:	781b      	ldrb	r3, [r3, #0]
200071f2:	2b00      	cmp	r3, #0
200071f4:	d010      	beq.n	20007218 <.LVL35+0x4>
	  	if(direction_changed == 0U)
200071f6:	4b31      	ldr	r3, [pc, #196]	; (200072bc <.LBE40+0x48>)
200071f8:	781b      	ldrb	r3, [r3, #0]
200071fa:	2b00      	cmp	r3, #0
200071fc:	d000      	beq.n	20007200 <.LBE38+0x12>
200071fe:	e73f      	b.n	20007080 <.LCFI2+0x7e>
			  ext_speed_ref_rpm = set_speed;
20007200:	4b2b      	ldr	r3, [pc, #172]	; (200072b0 <.LBE40+0x3c>)
20007202:	2000      	movs	r0, #0
20007204:	5e18      	ldrsh	r0, [r3, r0]
20007206:	4b47      	ldr	r3, [pc, #284]	; (20007324 <.LBE40+0xb0>)
20007208:	8018      	strh	r0, [r3, #0]

2000720a <.LVL32>:
			  s32a = ext_speed_ref_rpm * MAX_SPEED_SCALED;
2000720a:	0380      	lsls	r0, r0, #14

2000720c <.LVL33>:
			  ref_abs =  (uint32_t) s32a / (uint32_t) MAX_MOTOR_SPEED;			  			  
2000720c:	21e1      	movs	r1, #225	; 0xe1
2000720e:	00c9      	lsls	r1, r1, #3
20007210:	4b36      	ldr	r3, [pc, #216]	; (200072ec <.LBE40+0x78>)

20007212 <.LVL34>:
20007212:	4798      	blx	r3

20007214 <.LVL35>:
20007214:	4b2c      	ldr	r3, [pc, #176]	; (200072c8 <.LBE40+0x54>)
20007216:	8018      	strh	r0, [r3, #0]
	if(ref_abs > ram_abs)
20007218:	4b2b      	ldr	r3, [pc, #172]	; (200072c8 <.LBE40+0x54>)
2000721a:	881b      	ldrh	r3, [r3, #0]
2000721c:	0019      	movs	r1, r3
2000721e:	42a3      	cmp	r3, r4
20007220:	dd07      	ble.n	20007232 <.LVL35+0x1e>
		if(acceleration_count == 1)   // For every 2 times of PWM Period, the ram_abs incremented by 1.  The max speed is mapped to 2^14.
20007222:	4a2d      	ldr	r2, [pc, #180]	; (200072d8 <.LBE40+0x64>)
20007224:	7812      	ldrb	r2, [r2, #0]
20007226:	2a01      	cmp	r2, #1
20007228:	d100      	bne.n	2000722c <.LVL35+0x18>
2000722a:	e76a      	b.n	20007102 <.LCFI2+0x100>
			acceleration_count++;
2000722c:	3201      	adds	r2, #1
2000722e:	482a      	ldr	r0, [pc, #168]	; (200072d8 <.LBE40+0x64>)
20007230:	7002      	strb	r2, [r0, #0]
	if(ref_abs < ram_abs)
20007232:	4a23      	ldr	r2, [pc, #140]	; (200072c0 <.LBE40+0x4c>)
20007234:	2000      	movs	r0, #0
20007236:	5e12      	ldrsh	r2, [r2, r0]
20007238:	428a      	cmp	r2, r1
2000723a:	dd07      	ble.n	2000724c <.LVL35+0x38>
		if(deceleration_count == 1)   // For every 2 times of PWM Period, the ram_abs decremented by 1.  The max speed is mapped to 2^14.
2000723c:	4828      	ldr	r0, [pc, #160]	; (200072e0 <.LBE40+0x6c>)
2000723e:	7800      	ldrb	r0, [r0, #0]
20007240:	2801      	cmp	r0, #1
20007242:	d100      	bne.n	20007246 <.LVL35+0x32>
20007244:	e76c      	b.n	20007120 <.LCFI2+0x11e>
			deceleration_count++;
20007246:	3001      	adds	r0, #1
20007248:	4b25      	ldr	r3, [pc, #148]	; (200072e0 <.LBE40+0x6c>)
2000724a:	7018      	strb	r0, [r3, #0]
	if(0U == state_halt)
2000724c:	4b1a      	ldr	r3, [pc, #104]	; (200072b8 <.LBE40+0x44>)
2000724e:	781b      	ldrb	r3, [r3, #0]
20007250:	2b00      	cmp	r3, #0
20007252:	d100      	bne.n	20007256 <.LBB40>
20007254:	e773      	b.n	2000713e <.LCFI2+0x13c>

20007256 <.LBB40>:
    outv3.u = 0;
20007256:	4a2e      	ldr	r2, [pc, #184]	; (20007310 <.LBE40+0x9c>)
20007258:	2300      	movs	r3, #0
2000725a:	8013      	strh	r3, [r2, #0]
    outv3.v = 0;
2000725c:	8053      	strh	r3, [r2, #2]
    outv3.w = 0;
2000725e:	8093      	strh	r3, [r2, #4]
    dutycycle[0] = (int32_t)PWM_HPER_TICKS;
20007260:	492e      	ldr	r1, [pc, #184]	; (2000731c <.LBE40+0xa8>)
20007262:	2296      	movs	r2, #150	; 0x96
20007264:	00d2      	lsls	r2, r2, #3
20007266:	600a      	str	r2, [r1, #0]
    dutycycle[1] = (int32_t)PWM_HPER_TICKS;
20007268:	604a      	str	r2, [r1, #4]
    dutycycle[2] = (int32_t)PWM_HPER_TICKS;
2000726a:	608a      	str	r2, [r1, #8]

2000726c <.LBB42>:
2000726c:	492c      	ldr	r1, [pc, #176]	; (20007320 <.LBE40+0xac>)
2000726e:	670a      	str	r2, [r1, #112]	; 0x70

20007270 <.LBB44>:
20007270:	674a      	str	r2, [r1, #116]	; 0x74

20007272 <.LBB46>:
20007272:	678a      	str	r2, [r1, #120]	; 0x78

20007274 <.LBE40>:
  }
  else
  {
        pwm_modulation_reset();

        sysph.ang = 0;
20007274:	4a17      	ldr	r2, [pc, #92]	; (200072d4 <.LBE40+0x60>)
20007276:	8013      	strh	r3, [r2, #0]
        sysph.sin = 0;
20007278:	8053      	strh	r3, [r2, #2]
        sysph.cos = (int16_t)BASE_VALUE_INT;
2000727a:	2180      	movs	r1, #128	; 0x80
2000727c:	01c9      	lsls	r1, r1, #7
2000727e:	8091      	strh	r1, [r2, #4]

        outvdq.x = 0;
20007280:	4a20      	ldr	r2, [pc, #128]	; (20007304 <.LBE40+0x90>)
20007282:	8013      	strh	r3, [r2, #0]
        outvdq.y = 0;
20007284:	8053      	strh	r3, [r2, #2]
        outvab.x = 0;
20007286:	4a20      	ldr	r2, [pc, #128]	; (20007308 <.LBE40+0x94>)
20007288:	8013      	strh	r3, [r2, #0]
        outvab.y = 0;    
2000728a:	8053      	strh	r3, [r2, #2]
     
		angle_incr = 0;
2000728c:	4a18      	ldr	r2, [pc, #96]	; (200072f0 <.LBE40+0x7c>)
2000728e:	8013      	strh	r3, [r2, #0]
		ram_abs = 0;   
20007290:	4a0b      	ldr	r2, [pc, #44]	; (200072c0 <.LBE40+0x4c>)
20007292:	8013      	strh	r3, [r2, #0]
		direction = demand_dir;
20007294:	4b07      	ldr	r3, [pc, #28]	; (200072b4 <.LBE40+0x40>)
20007296:	701d      	strb	r5, [r3, #0]
		direction_changed = 0;
20007298:	4b08      	ldr	r3, [pc, #32]	; (200072bc <.LBE40+0x48>)
2000729a:	2200      	movs	r2, #0
2000729c:	701a      	strb	r2, [r3, #0]
    }
   
}
2000729e:	bd70      	pop	{r4, r5, r6, pc}
200072a0:	20000014 	.word	0x20000014
200072a4:	20000008 	.word	0x20000008
200072a8:	0000076a 	.word	0x0000076a
200072ac:	20000000 	.word	0x20000000
200072b0:	20007ffc 	.word	0x20007ffc
200072b4:	20007eb2 	.word	0x20007eb2
200072b8:	20000010 	.word	0x20000010
200072bc:	2000000a 	.word	0x2000000a
200072c0:	20000012 	.word	0x20000012
200072c4:	2000000b 	.word	0x2000000b
200072c8:	20000006 	.word	0x20000006
200072cc:	00000896 	.word	0x00000896
200072d0:	fffff800 	.word	0xfffff800
200072d4:	20007df0 	.word	0x20007df0
200072d8:	20007fff 	.word	0x20007fff
200072dc:	20000004 	.word	0x20000004
200072e0:	20007ffe 	.word	0x20007ffe
200072e4:	2000000e 	.word	0x2000000e
200072e8:	000927c0 	.word	0x000927c0
200072ec:	00003461 	.word	0x00003461
200072f0:	20000002 	.word	0x20000002
200072f4:	20007459 	.word	0x20007459
200072f8:	00002acd 	.word	0x00002acd
200072fc:	42d80001 	.word	0x42d80001
20007300:	00002d71 	.word	0x00002d71
20007304:	20007de0 	.word	0x20007de0
20007308:	20007de8 	.word	0x20007de8
2000730c:	20007399 	.word	0x20007399
20007310:	20007dfc 	.word	0x20007dfc
20007314:	20007431 	.word	0x20007431
20007318:	20007329 	.word	0x20007329
2000731c:	20007e14 	.word	0x20007e14
20007320:	42002400 	.word	0x42002400
20007324:	2000000c 	.word	0x2000000c

20007328 <pwm_modulation>:
{
20007328:	b530      	push	{r4, r5, lr}

2000732a <.LCFI1>:
	if(outv3.u <= outv3.v)
2000732a:	4b19      	ldr	r3, [pc, #100]	; (20007390 <.LVL14+0x2>)
2000732c:	2200      	movs	r2, #0
2000732e:	5e99      	ldrsh	r1, [r3, r2]
20007330:	2202      	movs	r2, #2
20007332:	5e9a      	ldrsh	r2, [r3, r2]
20007334:	4291      	cmp	r1, r2
20007336:	dc22      	bgt.n	2000737e <.LVL11>

20007338 <.LVL0>:
	if(outv3.w <= min_val)
20007338:	4b15      	ldr	r3, [pc, #84]	; (20007390 <.LVL14+0x2>)
2000733a:	2004      	movs	r0, #4
2000733c:	5e1b      	ldrsh	r3, [r3, r0]
2000733e:	0008      	movs	r0, r1
20007340:	4299      	cmp	r1, r3
20007342:	dd00      	ble.n	20007346 <.LVL1>
20007344:	0018      	movs	r0, r3

20007346 <.LVL1>:
		max_val = outv3.v;
20007346:	0014      	movs	r4, r2
	if(outv3.u >= outv3.v)
20007348:	4291      	cmp	r1, r2
2000734a:	da1f      	bge.n	2000738c <.LVL12+0x2>

2000734c <.LVL2>:
	voltage_offset = (min_val + max_val)>>1;
2000734c:	429c      	cmp	r4, r3
2000734e:	da00      	bge.n	20007352 <.LVL3>
20007350:	001c      	movs	r4, r3

20007352 <.LVL3>:
20007352:	1824      	adds	r4, r4, r0
20007354:	1064      	asrs	r4, r4, #1

20007356 <.LVL4>:
	dutycycle[0] = (uint16_t)((voltage_va3h>>1) + (PWM_HPER_TICKS>>1));	  
20007356:	480f      	ldr	r0, [pc, #60]	; (20007394 <.LVL14+0x6>)

20007358 <.LVL5>:
	voltage_va3h = (outv3.u - voltage_offset);  
20007358:	1b09      	subs	r1, r1, r4

2000735a <.LVL6>:
	dutycycle[0] = (uint16_t)((voltage_va3h>>1) + (PWM_HPER_TICKS>>1));	  
2000735a:	1049      	asrs	r1, r1, #1
2000735c:	2596      	movs	r5, #150	; 0x96
2000735e:	00ad      	lsls	r5, r5, #2
20007360:	46ac      	mov	ip, r5
20007362:	4461      	add	r1, ip
20007364:	b289      	uxth	r1, r1
20007366:	6001      	str	r1, [r0, #0]
	voltage_vb3h = (outv3.v - voltage_offset);
20007368:	1b12      	subs	r2, r2, r4

2000736a <.LVL7>:
	dutycycle[1] = (uint16_t)((voltage_vb3h>>1) + (PWM_HPER_TICKS>>1));
2000736a:	1052      	asrs	r2, r2, #1
2000736c:	4462      	add	r2, ip
2000736e:	b292      	uxth	r2, r2
20007370:	6042      	str	r2, [r0, #4]
	voltage_vc3h = (outv3.w - voltage_offset);
20007372:	1b1b      	subs	r3, r3, r4

20007374 <.LVL8>:
	dutycycle[2] = (uint16_t)((voltage_vc3h>>1) + (PWM_HPER_TICKS>>1));	
20007374:	105b      	asrs	r3, r3, #1

20007376 <.LVL9>:
20007376:	4463      	add	r3, ip
20007378:	b29b      	uxth	r3, r3
2000737a:	6083      	str	r3, [r0, #8]

2000737c <.LVL10>:
}  /* end of function pwm_modulation()*/
2000737c:	bd30      	pop	{r4, r5, pc}

2000737e <.LVL11>:
	if(outv3.w <= min_val)
2000737e:	4b04      	ldr	r3, [pc, #16]	; (20007390 <.LVL14+0x2>)
20007380:	2004      	movs	r0, #4
20007382:	5e1b      	ldrsh	r3, [r3, r0]
20007384:	0010      	movs	r0, r2
20007386:	429a      	cmp	r2, r3
20007388:	dd00      	ble.n	2000738c <.LVL12+0x2>

2000738a <.LVL12>:
2000738a:	0018      	movs	r0, r3
		max_val = outv3.u;
2000738c:	000c      	movs	r4, r1

2000738e <.LVL14>:
2000738e:	e7dd      	b.n	2000734c <.LVL2>
20007390:	20007dfc 	.word	0x20007dfc
20007394:	20007e14 	.word	0x20007e14

20007398 <library_dq_ab>:
#ifdef RAM_EXECUTE
void  __ramfunc__ library_dq_ab(const ang_sincos_t *t, const vec2_t *dq, vec2_t *ab)
#else
void library_dq_ab(const ang_sincos_t *t, const vec2_t *dq, vec2_t *ab)
#endif
{
20007398:	b570      	push	{r4, r5, r6, lr}

2000739a <.LCFI7>:
	int32_t s32a;
	/* alpha, direct component in the static reference frame */
	s32a = ((int32_t)(dq->x)) * ((int32_t)(t->cos));
2000739a:	2300      	movs	r3, #0
2000739c:	5ecc      	ldrsh	r4, [r1, r3]
2000739e:	2504      	movs	r5, #4
200073a0:	5f43      	ldrsh	r3, [r0, r5]
200073a2:	435c      	muls	r4, r3

200073a4 <.LVL122>:
	s32a -= (((int32_t)(dq->y)) * ((int32_t)(t->sin)));
200073a4:	2302      	movs	r3, #2
200073a6:	5ecd      	ldrsh	r5, [r1, r3]
200073a8:	2602      	movs	r6, #2
200073aa:	5f83      	ldrsh	r3, [r0, r6]
200073ac:	436b      	muls	r3, r5
200073ae:	1ae3      	subs	r3, r4, r3
	(ab->x) = (int16_t)(s32a >> SH_BASE_VALUE);
200073b0:	139b      	asrs	r3, r3, #14
200073b2:	8013      	strh	r3, [r2, #0]

200073b4 <.LVL123>:

	/* beta, quadrature component in the static reference frame */
	s32a = ((int32_t)(dq->x)) * ((int32_t)(t->sin));
200073b4:	2300      	movs	r3, #0
200073b6:	5ecc      	ldrsh	r4, [r1, r3]
200073b8:	2502      	movs	r5, #2
200073ba:	5f43      	ldrsh	r3, [r0, r5]
200073bc:	435c      	muls	r4, r3

200073be <.LVL124>:
	s32a += (((int32_t)(dq->y)) * ((int32_t)(t->cos)));
200073be:	2302      	movs	r3, #2
200073c0:	5ec9      	ldrsh	r1, [r1, r3]

200073c2 <.LVL125>:
200073c2:	2304      	movs	r3, #4
200073c4:	5ec3      	ldrsh	r3, [r0, r3]

200073c6 <.LVL126>:
200073c6:	434b      	muls	r3, r1
200073c8:	191b      	adds	r3, r3, r4
	(ab->y) = (int16_t)(s32a >> SH_BASE_VALUE);
200073ca:	139b      	asrs	r3, r3, #14
200073cc:	8053      	strh	r3, [r2, #2]

200073ce <.LVL127>:
}
200073ce:	bd70      	pop	{r4, r5, r6, pc}

200073d0 <library_cos>:
	ang_temp = ang + PIHALVES;
200073d0:	2380      	movs	r3, #128	; 0x80
200073d2:	01db      	lsls	r3, r3, #7
200073d4:	469c      	mov	ip, r3
200073d6:	4460      	add	r0, ip

200073d8 <.LVL11>:
200073d8:	b283      	uxth	r3, r0
        a = ang_temp  & SEL1Q;  /* select angle in the first quarter (<= PIHALVES) */
200073da:	049a      	lsls	r2, r3, #18
200073dc:	0c92      	lsrs	r2, r2, #18

200073de <.LVL13>:
	if((ISCOS & ang_temp) != 0U)
200073de:	0459      	lsls	r1, r3, #17
200073e0:	d502      	bpl.n	200073e8 <.LVL15>
		a = PIHALVES - a;
200073e2:	4661      	mov	r1, ip
200073e4:	1a8a      	subs	r2, r1, r2

200073e6 <.LVL14>:
200073e6:	b292      	uxth	r2, r2

200073e8 <.LVL15>:
	y = sin_table[a >> SH_SINTAB];
200073e8:	0992      	lsrs	r2, r2, #6

200073ea <.LVL16>:
200073ea:	0052      	lsls	r2, r2, #1
200073ec:	4904      	ldr	r1, [pc, #16]	; (20007400 <.LVL21+0x4>)
200073ee:	5e50      	ldrsh	r0, [r2, r1]

200073f0 <.LVL17>:
	return (((ISNEG & ang_temp) != 0U )? -y: y);
200073f0:	b21b      	sxth	r3, r3
200073f2:	2b00      	cmp	r3, #0
200073f4:	db00      	blt.n	200073f8 <.LVL19>

200073f6 <.LVL18>:
}
200073f6:	4770      	bx	lr

200073f8 <.LVL19>:
	return (((ISNEG & ang_temp) != 0U )? -y: y);
200073f8:	4240      	negs	r0, r0

200073fa <.LVL20>:
200073fa:	b200      	sxth	r0, r0

200073fc <.LVL21>:
200073fc:	e7fb      	b.n	200073f6 <.LVL18>
200073fe:	46c0      	nop			; (mov r8, r8)
20007400:	00002248 	.word	0x00002248

20007404 <library_sin>:
{
20007404:	0002      	movs	r2, r0
	a = ang & SEL1Q; /* select angle in the first quarter (<= PIHALVES) */
20007406:	0483      	lsls	r3, r0, #18
20007408:	0c9b      	lsrs	r3, r3, #18

2000740a <.LVL1>:
	if((ISCOS & ang) != 0U)
2000740a:	0441      	lsls	r1, r0, #17
2000740c:	d503      	bpl.n	20007416 <.LVL3>
	  a = PIHALVES - a;
2000740e:	2180      	movs	r1, #128	; 0x80
20007410:	01c9      	lsls	r1, r1, #7
20007412:	1acb      	subs	r3, r1, r3

20007414 <.LVL2>:
20007414:	b29b      	uxth	r3, r3

20007416 <.LVL3>:
	y = sin_table[a >> SH_SINTAB];
20007416:	099b      	lsrs	r3, r3, #6

20007418 <.LVL4>:
20007418:	005b      	lsls	r3, r3, #1
2000741a:	4904      	ldr	r1, [pc, #16]	; (2000742c <.LVL9+0x2>)
2000741c:	5e58      	ldrsh	r0, [r3, r1]

2000741e <.LVL5>:
	return (((ISNEG & ang) != 0U)? -y: y);
2000741e:	b212      	sxth	r2, r2
20007420:	2a00      	cmp	r2, #0
20007422:	db00      	blt.n	20007426 <.LVL7>

20007424 <.LVL6>:
}
20007424:	4770      	bx	lr

20007426 <.LVL7>:
	return (((ISNEG & ang) != 0U)? -y: y);
20007426:	4240      	negs	r0, r0

20007428 <.LVL8>:
20007428:	b200      	sxth	r0, r0

2000742a <.LVL9>:
2000742a:	e7fb      	b.n	20007424 <.LVL6>
2000742c:	00002248 	.word	0x00002248

20007430 <library_ab_uvw>:
{
20007430:	b510      	push	{r4, lr}

20007432 <.LCFI5>:
	(uvw->u) = (ab->x);
20007432:	2300      	movs	r3, #0
20007434:	5ec2      	ldrsh	r2, [r0, r3]
20007436:	800a      	strh	r2, [r1, #0]
	s32a = ((int32_t)(ab->y)) * SQRT3;
20007438:	2302      	movs	r3, #2
2000743a:	5ec4      	ldrsh	r4, [r0, r3]
2000743c:	4b05      	ldr	r3, [pc, #20]	; (20007454 <.LVL113+0x8>)
2000743e:	4363      	muls	r3, r4

20007440 <.LVL108>:
    s32a >>= SH_BASE_VALUE;
20007440:	139b      	asrs	r3, r3, #14

20007442 <.LVL109>:
	s32a -= (ab->x);
20007442:	2400      	movs	r4, #0
20007444:	5f00      	ldrsh	r0, [r0, r4]

20007446 <.LVL110>:
20007446:	1a1b      	subs	r3, r3, r0

20007448 <.LVL111>:
    (uvw->v) = (int16_t)(s32a >> 1);
20007448:	105b      	asrs	r3, r3, #1

2000744a <.LVL112>:
2000744a:	804b      	strh	r3, [r1, #2]

2000744c <.LVL113>:
	(uvw->w) = -(uvw->u) - (uvw->v);
2000744c:	18d3      	adds	r3, r2, r3
2000744e:	425b      	negs	r3, r3
20007450:	808b      	strh	r3, [r1, #4]
}
20007452:	bd10      	pop	{r4, pc}
20007454:	00006eda 	.word	0x00006eda

20007458 <library_sincos>:
{
20007458:	b570      	push	{r4, r5, r6, lr}

2000745a <.LCFI0>:
2000745a:	0004      	movs	r4, r0
	(t->sin) = library_sin(t->ang);
2000745c:	8805      	ldrh	r5, [r0, #0]
2000745e:	0028      	movs	r0, r5

20007460 <.LVL23>:
20007460:	4b03      	ldr	r3, [pc, #12]	; (20007470 <.LVL26+0x2>)
20007462:	4798      	blx	r3

20007464 <.LVL24>:
20007464:	8060      	strh	r0, [r4, #2]
	(t->cos) = library_cos(t->ang);
20007466:	0028      	movs	r0, r5
20007468:	4b02      	ldr	r3, [pc, #8]	; (20007474 <.LVL26+0x6>)
2000746a:	4798      	blx	r3

2000746c <.LVL25>:
2000746c:	80a0      	strh	r0, [r4, #4]

2000746e <.LVL26>:
}
2000746e:	bd70      	pop	{r4, r5, r6, pc}
20007470:	20007405 	.word	0x20007405
20007474:	200073d1 	.word	0x200073d1

Disassembly of section .config_00804004%18:

00804004 <__config_00804004>:
  804004:	ffff0000                                ....

Disassembly of section .config_00804000%19:

00804000 <__config_00804000>:
  804000:	00000877                                w...

Disassembly of section .text%20:

000000e0 <isTriggerEvent>:
		s16t = (int16_t)((pi->imem) >> (pi->shp));

		/* result clamp and integral memory update */
		if(s16t < (pi->llim))		/* case possible only if limit is changed */
		{
			s16t = (pi->llim);
  e0:	b5f0      	push	{r4, r5, r6, r7, lr}
  e2:	b085      	.short	0xb085
  e4:	9202      	str	r2, [sp, #8]
  e6:	9303      	.short	0x9303
  e8:	234c      	movs	r3, #76	; 0x4c
  ea:	5cc2      	.short	0x5cc2
  ec:	3b3d      	subs	r3, #61	; 0x3d
  ee:	4013      	ands	r3, r2
  f0:	0651      	lsls	r1, r2, #25
  f2:	d400      	bmi.n	f6 <.LASF4+0x6>
  f4:	e067      	b.n	1c6 <.Ldebug_ranges0+0x6>
  f6:	2b04      	cmp	r3, #4
  f8:	d004      	beq.n	104 <.LASF8>
  fa:	2b08      	cmp	r3, #8
  fc:	d02b      	beq.n	156 <.LASF2+0x1>
  fe:	2000      	movs	r0, #0
 100:	b005      	add	sp, #20
 102:	bdf0      	pop	{r4, r5, r6, r7, pc}
 104:	6c03      	ldr	r3, [r0, #64]	; 0x40
 106:	6b84      	ldr	r4, [r0, #56]	; 0x38
 108:	9d02      	ldr	r5, [sp, #8]
 10a:	2274      	movs	r2, #116	; 0x74
 10c:	5c82      	ldrb	r2, [r0, r2]
 10e:	2a01      	cmp	r2, #1
 110:	d010      	beq.n	134 <.Ldebug_ranges0+0x4>
 112:	1c21      	adds	r1, r4, #0
 114:	1c18      	adds	r0, r3, #0
 116:	f002 fe3f 	bl	2d98 <__aeabi_fcmpgt>
 11a:	2800      	cmp	r0, #0
 11c:	d100      	bne.n	120 <.Ldebug_ranges0>
 11e:	e16e      	b.n	3fe <.LASF0+0x5>
 120:	2601      	movs	r6, #1
 122:	1c29      	adds	r1, r5, #0
 124:	1c20      	adds	r0, r4, #0
 126:	f002 fe41 	bl	2dac <__aeabi_fcmpge>
 12a:	2800      	cmp	r0, #0
 12c:	d100      	bne.n	130 <.Ldebug_ranges0>
 12e:	2600      	movs	r6, #0
 130:	b2f0      	uxtb	r0, r6
 132:	e7e5      	b.n	100 <__MIN_STACK_SIZE>
 134:	1c21      	adds	r1, r4, #0
 136:	1c18      	adds	r0, r3, #0
 138:	f002 fe1a 	bl	2d70 <__aeabi_fcmplt>
 13c:	2800      	cmp	r0, #0
 13e:	d100      	bne.n	142 <.LASF3+0x8>
 140:	e15b      	b.n	3fa <.LASF0+0x1>
 142:	2601      	movs	r6, #1
 144:	1c29      	adds	r1, r5, #0
 146:	1c20      	adds	r0, r4, #0
 148:	f002 fe1c 	bl	2d84 <__aeabi_fcmple>
 14c:	2800      	cmp	r0, #0
 14e:	d100      	bne.n	152 <.LASF9+0xc>
 150:	2600      	movs	r6, #0
 152:	b2f0      	uxtb	r0, r6
 154:	e7d4      	b.n	100 <__MIN_STACK_SIZE>
 156:	6c06      	ldr	r6, [r0, #64]	; 0x40
 158:	6c47      	ldr	r7, [r0, #68]	; 0x44
 15a:	6b84      	ldr	r4, [r0, #56]	; 0x38
 15c:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 15e:	9a02      	ldr	r2, [sp, #8]
 160:	9b03      	ldr	r3, [sp, #12]
 162:	9200      	str	r2, [sp, #0]
 164:	9301      	str	r3, [sp, #4]
 166:	2374      	movs	r3, #116	; 0x74
 168:	5cc3      	ldrb	r3, [r0, r3]
 16a:	2b01      	cmp	r3, #1
 16c:	d016      	beq.n	19c <.Ldebug_ranges0+0x4>
 16e:	0022      	movs	r2, r4
 170:	002b      	movs	r3, r5
 172:	0030      	movs	r0, r6
 174:	0039      	movs	r1, r7
 176:	f002 fd9b 	bl	2cb0 <__aeabi_dcmpgt>
 17a:	2800      	cmp	r0, #0
 17c:	d100      	bne.n	180 <L0+0x4>
 17e:	e142      	b.n	406 <.LLST43+0x1>
 180:	2301      	movs	r3, #1
 182:	1c1e      	adds	r6, r3, #0
 184:	9a00      	ldr	r2, [sp, #0]
 186:	9b01      	ldr	r3, [sp, #4]
 188:	0020      	movs	r0, r4
 18a:	0029      	movs	r1, r5
 18c:	f002 fd9a 	bl	2cc4 <__aeabi_dcmpge>
 190:	2800      	cmp	r0, #0
 192:	d101      	bne.n	198 <.Ldebug_ranges0>
 194:	2300      	movs	r3, #0
 196:	1c1e      	adds	r6, r3, #0
 198:	b2f0      	uxtb	r0, r6
 19a:	e7b1      	b.n	100 <__MIN_STACK_SIZE>
 19c:	0022      	movs	r2, r4
 19e:	002b      	movs	r3, r5
 1a0:	0030      	movs	r0, r6
 1a2:	0039      	movs	r1, r7
 1a4:	f002 fd70 	bl	2c88 <__aeabi_dcmplt>
 1a8:	2800      	cmp	r0, #0
 1aa:	d100      	bne.n	1ae <.LASF5+0x6>
 1ac:	e129      	b.n	402 <.LASF0>
 1ae:	2601      	movs	r6, #1
 1b0:	9a00      	ldr	r2, [sp, #0]
 1b2:	9b01      	ldr	r3, [sp, #4]
 1b4:	0020      	movs	r0, r4
 1b6:	0029      	movs	r1, r5
 1b8:	f002 fd70 	bl	2c9c <__aeabi_dcmple>
 1bc:	2800      	cmp	r0, #0
 1be:	d100      	bne.n	1c2 <.Ldebug_ranges0+0x2>
 1c0:	2600      	movs	r6, #0
 1c2:	b2f0      	uxtb	r0, r6
 1c4:	e79c      	b.n	100 <__MIN_STACK_SIZE>
 1c6:	0692      	lsls	r2, r2, #26
 1c8:	d400      	bmi.n	1cc <.LASF17+0x4>
 1ca:	e096      	b.n	2fa <.Ldebug_ranges0+0x2>
 1cc:	2b02      	cmp	r3, #2
 1ce:	d040      	beq.n	252 <L0+0x6>
 1d0:	d919      	bls.n	206 <.LLST54+0xe>
 1d2:	2b04      	cmp	r3, #4
 1d4:	d05e      	beq.n	294 <.LASF2+0x8>
 1d6:	2b08      	cmp	r3, #8
 1d8:	d000      	beq.n	1dc <.LASF1+0x5>
 1da:	e116      	b.n	40a <.LLST43+0x5>
 1dc:	6c06      	ldr	r6, [r0, #64]	; 0x40
 1de:	6c42      	ldr	r2, [r0, #68]	; 0x44
 1e0:	6b85      	ldr	r5, [r0, #56]	; 0x38
 1e2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 1e4:	9f02      	ldr	r7, [sp, #8]
 1e6:	9c03      	ldr	r4, [sp, #12]
 1e8:	2174      	movs	r1, #116	; 0x74
 1ea:	5c41      	ldrb	r1, [r0, r1]
 1ec:	2901      	cmp	r1, #1
 1ee:	d06c      	beq.n	2ca <.Ldebug_abbrev0>
 1f0:	429a      	cmp	r2, r3
 1f2:	dd7b      	ble.n	2ec <.LASF4+0x10>
 1f4:	2001      	movs	r0, #1
 1f6:	429c      	cmp	r4, r3
 1f8:	dc02      	bgt.n	200 <.LLST54+0x8>
 1fa:	d102      	bne.n	202 <.LLST54+0xa>
 1fc:	42af      	cmp	r7, r5
 1fe:	d900      	bls.n	202 <.LLST54+0xa>
 200:	2000      	movs	r0, #0
 202:	b2c0      	uxtb	r0, r0
 204:	e77c      	b.n	100 <__MIN_STACK_SIZE>
 206:	2b01      	cmp	r3, #1
 208:	d000      	beq.n	20c <.LASF11+0x5>
 20a:	e0fe      	b.n	40a <.LLST43+0x5>
 20c:	2340      	movs	r3, #64	; 0x40
 20e:	18c3      	adds	r3, r0, r3
 210:	2100      	movs	r1, #0
 212:	5659      	ldrsb	r1, [r3, r1]
 214:	2338      	movs	r3, #56	; 0x38
 216:	18c3      	adds	r3, r0, r3
 218:	781b      	ldrb	r3, [r3, #0]
 21a:	b25b      	sxtb	r3, r3
 21c:	aa02      	add	r2, sp, #8
 21e:	7812      	ldrb	r2, [r2, #0]
 220:	b252      	sxtb	r2, r2
 222:	2474      	movs	r4, #116	; 0x74
 224:	5d00      	ldrb	r0, [r0, r4]
 226:	2801      	cmp	r0, #1
 228:	d009      	beq.n	23e <.LASF12>
 22a:	2000      	movs	r0, #0
 22c:	4299      	cmp	r1, r3
 22e:	dc00      	bgt.n	232 <.LASF9>
 230:	e766      	b.n	100 <__MIN_STACK_SIZE>
 232:	17d8      	asrs	r0, r3, #31
 234:	0fd1      	lsrs	r1, r2, #31
 236:	4293      	cmp	r3, r2
 238:	4148      	adcs	r0, r1
 23a:	b2c0      	uxtb	r0, r0
 23c:	e760      	b.n	100 <__MIN_STACK_SIZE>
 23e:	2000      	movs	r0, #0
 240:	4299      	cmp	r1, r3
 242:	db00      	blt.n	246 <.LASF12+0x8>
 244:	e75c      	b.n	100 <__MIN_STACK_SIZE>
 246:	0fd8      	lsrs	r0, r3, #31
 248:	17d1      	asrs	r1, r2, #31
 24a:	429a      	cmp	r2, r3
 24c:	4148      	adcs	r0, r1
 24e:	b2c0      	uxtb	r0, r0
 250:	e756      	b.n	100 <__MIN_STACK_SIZE>
 252:	2340      	movs	r3, #64	; 0x40
 254:	18c3      	adds	r3, r0, r3
 256:	2200      	movs	r2, #0
 258:	5e9a      	ldrsh	r2, [r3, r2]
 25a:	2338      	movs	r3, #56	; 0x38
 25c:	5ec1      	ldrsh	r1, [r0, r3]
 25e:	ab02      	add	r3, sp, #8
 260:	2400      	movs	r4, #0
 262:	5f1b      	ldrsh	r3, [r3, r4]
 264:	2474      	movs	r4, #116	; 0x74
 266:	5d00      	ldrb	r0, [r0, r4]
 268:	2801      	cmp	r0, #1
 26a:	d009      	beq.n	280 <.LASF10+0x2>
 26c:	2000      	movs	r0, #0
 26e:	428a      	cmp	r2, r1
 270:	dc00      	bgt.n	274 <.LASF7+0xb>
 272:	e745      	b.n	100 <__MIN_STACK_SIZE>
 274:	17c8      	asrs	r0, r1, #31
 276:	0fda      	lsrs	r2, r3, #31
 278:	4299      	cmp	r1, r3
 27a:	4150      	adcs	r0, r2
 27c:	b2c0      	uxtb	r0, r0
 27e:	e73f      	b.n	100 <__MIN_STACK_SIZE>
 280:	2000      	movs	r0, #0
 282:	428a      	cmp	r2, r1
 284:	db00      	blt.n	288 <.LASF10+0xa>
 286:	e73b      	b.n	100 <__MIN_STACK_SIZE>
 288:	0fc8      	lsrs	r0, r1, #31
 28a:	17da      	asrs	r2, r3, #31
 28c:	428b      	cmp	r3, r1
 28e:	4150      	adcs	r0, r2
 290:	b2c0      	uxtb	r0, r0
 292:	e735      	b.n	100 <__MIN_STACK_SIZE>
 294:	6c01      	ldr	r1, [r0, #64]	; 0x40
 296:	6b83      	ldr	r3, [r0, #56]	; 0x38
 298:	9a02      	ldr	r2, [sp, #8]
 29a:	2474      	movs	r4, #116	; 0x74
 29c:	5d00      	ldrb	r0, [r0, r4]
 29e:	2801      	cmp	r0, #1
 2a0:	d009      	beq.n	2b6 <.LASF2+0x3>
 2a2:	2000      	movs	r0, #0
 2a4:	4299      	cmp	r1, r3
 2a6:	dc00      	bgt.n	2aa <.LASF0+0x5>
 2a8:	e72a      	b.n	100 <__MIN_STACK_SIZE>
 2aa:	17d8      	asrs	r0, r3, #31
 2ac:	0fd1      	lsrs	r1, r2, #31
 2ae:	4293      	cmp	r3, r2
 2b0:	4148      	adcs	r0, r1
 2b2:	b2c0      	uxtb	r0, r0
 2b4:	e724      	b.n	100 <__MIN_STACK_SIZE>
 2b6:	2000      	movs	r0, #0
 2b8:	4299      	cmp	r1, r3
 2ba:	db00      	blt.n	2be <.LASF2+0xb>
 2bc:	e720      	b.n	100 <__MIN_STACK_SIZE>
 2be:	0fd8      	lsrs	r0, r3, #31
 2c0:	17d1      	asrs	r1, r2, #31
 2c2:	429a      	cmp	r2, r3
 2c4:	4148      	adcs	r0, r1
 2c6:	b2c0      	uxtb	r0, r0
 2c8:	e71a      	b.n	100 <__MIN_STACK_SIZE>
 2ca:	4293      	cmp	r3, r2
 2cc:	dd08      	ble.n	2e0 <.LASF4+0x4>
 2ce:	2001      	movs	r0, #1
 2d0:	42a3      	cmp	r3, r4
 2d2:	dc02      	bgt.n	2da <.LLST46+0xc>
 2d4:	d102      	bne.n	2dc <.LASF4>
 2d6:	42bd      	cmp	r5, r7
 2d8:	d900      	bls.n	2dc <.LASF4>
 2da:	2000      	movs	r0, #0
 2dc:	b2c0      	uxtb	r0, r0
 2de:	e70f      	b.n	100 <__MIN_STACK_SIZE>
 2e0:	4293      	cmp	r3, r2
 2e2:	d101      	bne.n	2e8 <.LASF4+0xc>
 2e4:	42b5      	cmp	r5, r6
 2e6:	d8f2      	bhi.n	2ce <.LLST46>
 2e8:	2000      	movs	r0, #0
 2ea:	e709      	b.n	100 <__MIN_STACK_SIZE>
 2ec:	429a      	cmp	r2, r3
 2ee:	d102      	bne.n	2f6 <.LASF3+0x7>
 2f0:	42ae      	cmp	r6, r5
 2f2:	d900      	bls.n	2f6 <.LASF3+0x7>
 2f4:	e77e      	b.n	1f4 <.LASF8+0x4>
 2f6:	2000      	movs	r0, #0
 2f8:	e702      	b.n	100 <__MIN_STACK_SIZE>
 2fa:	2b02      	cmp	r3, #2
 2fc:	d03b      	beq.n	376 <.Ldebug_line0+0x5>
 2fe:	d91c      	bls.n	33a <.Ldebug_ranges0+0xa>
 300:	2b04      	cmp	r3, #4
 302:	d052      	beq.n	3aa <.LASF2+0xc>
 304:	2b08      	cmp	r3, #8
 306:	d000      	beq.n	30a <.LASF6+0xa>
 308:	e081      	b.n	40e <.LASF2+0x3>
 30a:	6c06      	ldr	r6, [r0, #64]	; 0x40
 30c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 30e:	6b85      	ldr	r5, [r0, #56]	; 0x38
 310:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 312:	9f02      	ldr	r7, [sp, #8]
 314:	9c03      	ldr	r4, [sp, #12]
 316:	2174      	movs	r1, #116	; 0x74
 318:	5c41      	ldrb	r1, [r0, r1]
 31a:	2901      	cmp	r1, #1
 31c:	d05c      	beq.n	3d8 <.Ldebug_line0+0x8>
 31e:	429a      	cmp	r2, r3
 320:	d802      	bhi.n	328 <.Ldebug_abbrev0+0x6>
 322:	d176      	bne.n	412 <.LASF2+0x7>
 324:	42ae      	cmp	r6, r5
 326:	d974      	bls.n	412 <.LASF2+0x7>
 328:	2001      	movs	r0, #1
 32a:	429c      	cmp	r4, r3
 32c:	d802      	bhi.n	334 <.Ldebug_ranges0+0x4>
 32e:	d102      	bne.n	336 <.Ldebug_ranges0+0x6>
 330:	42af      	cmp	r7, r5
 332:	d900      	bls.n	336 <.Ldebug_ranges0+0x6>
 334:	2000      	movs	r0, #0
 336:	b2c0      	uxtb	r0, r0
 338:	e6e2      	b.n	100 <__MIN_STACK_SIZE>
 33a:	2b01      	cmp	r3, #1
 33c:	d167      	bne.n	40e <.LASF2+0x3>
 33e:	2340      	movs	r3, #64	; 0x40
 340:	18c3      	adds	r3, r0, r3
 342:	781a      	ldrb	r2, [r3, #0]
 344:	2338      	movs	r3, #56	; 0x38
 346:	18c3      	adds	r3, r0, r3
 348:	781b      	ldrb	r3, [r3, #0]
 34a:	a902      	add	r1, sp, #8
 34c:	7809      	ldrb	r1, [r1, #0]
 34e:	2474      	movs	r4, #116	; 0x74
 350:	5d00      	ldrb	r0, [r0, r4]
 352:	2801      	cmp	r0, #1
 354:	d007      	beq.n	366 <.LASF4>
 356:	2000      	movs	r0, #0
 358:	429a      	cmp	r2, r3
 35a:	d800      	bhi.n	35e <.LASF3+0x2>
 35c:	e6d0      	b.n	100 <__MIN_STACK_SIZE>
 35e:	428b      	cmp	r3, r1
 360:	4140      	adcs	r0, r0
 362:	b2c0      	uxtb	r0, r0
 364:	e6cc      	b.n	100 <__MIN_STACK_SIZE>
 366:	2000      	movs	r0, #0
 368:	429a      	cmp	r2, r3
 36a:	d300      	bcc.n	36e <.LASF4+0x8>
 36c:	e6c8      	b.n	100 <__MIN_STACK_SIZE>
 36e:	4299      	cmp	r1, r3
 370:	4140      	adcs	r0, r0
 372:	b2c0      	uxtb	r0, r0
 374:	e6c4      	b.n	100 <__MIN_STACK_SIZE>
 376:	2340      	movs	r3, #64	; 0x40
 378:	18c3      	adds	r3, r0, r3
 37a:	881b      	ldrh	r3, [r3, #0]
 37c:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 37e:	aa02      	add	r2, sp, #8
 380:	8812      	ldrh	r2, [r2, #0]
 382:	2474      	movs	r4, #116	; 0x74
 384:	5d00      	ldrb	r0, [r0, r4]
 386:	2801      	cmp	r0, #1
 388:	d007      	beq.n	39a <.Ldebug_ranges0+0x2>
 38a:	2000      	movs	r0, #0
 38c:	428b      	cmp	r3, r1
 38e:	d800      	bhi.n	392 <.LASF1+0x4>
 390:	e6b6      	b.n	100 <__MIN_STACK_SIZE>
 392:	4291      	cmp	r1, r2
 394:	4140      	adcs	r0, r0
 396:	b2c0      	uxtb	r0, r0
 398:	e6b2      	b.n	100 <__MIN_STACK_SIZE>
 39a:	2000      	movs	r0, #0
 39c:	428b      	cmp	r3, r1
 39e:	d300      	bcc.n	3a2 <.LASF2+0x4>
 3a0:	e6ae      	b.n	100 <__MIN_STACK_SIZE>
 3a2:	428a      	cmp	r2, r1
 3a4:	4140      	adcs	r0, r0
 3a6:	b2c0      	uxtb	r0, r0
 3a8:	e6aa      	b.n	100 <__MIN_STACK_SIZE>
 3aa:	6c02      	ldr	r2, [r0, #64]	; 0x40
 3ac:	6b83      	ldr	r3, [r0, #56]	; 0x38
 3ae:	9c02      	ldr	r4, [sp, #8]
 3b0:	2174      	movs	r1, #116	; 0x74
 3b2:	5c41      	ldrb	r1, [r0, r1]
 3b4:	2901      	cmp	r1, #1
 3b6:	d007      	beq.n	3c8 <.LASF4+0xd>
 3b8:	2000      	movs	r0, #0
 3ba:	429a      	cmp	r2, r3
 3bc:	d800      	bhi.n	3c0 <.LASF4+0x5>
 3be:	e69f      	b.n	100 <__MIN_STACK_SIZE>
 3c0:	42a3      	cmp	r3, r4
 3c2:	4140      	adcs	r0, r0
 3c4:	b2c0      	uxtb	r0, r0
 3c6:	e69b      	b.n	100 <__MIN_STACK_SIZE>
 3c8:	2000      	movs	r0, #0
 3ca:	429a      	cmp	r2, r3
 3cc:	d300      	bcc.n	3d0 <.Ldebug_line0>
 3ce:	e697      	b.n	100 <__MIN_STACK_SIZE>
 3d0:	429c      	cmp	r4, r3
 3d2:	4140      	adcs	r0, r0
 3d4:	b2c0      	uxtb	r0, r0
 3d6:	e693      	b.n	100 <__MIN_STACK_SIZE>
 3d8:	4293      	cmp	r3, r2
 3da:	d908      	bls.n	3ee <.Ldebug_abbrev0+0x7>
 3dc:	2001      	movs	r0, #1
 3de:	42a3      	cmp	r3, r4
 3e0:	d802      	bhi.n	3e8 <.Ldebug_abbrev0+0x1>
 3e2:	d102      	bne.n	3ea <.Ldebug_abbrev0+0x3>
 3e4:	42bd      	cmp	r5, r7
 3e6:	d900      	bls.n	3ea <.Ldebug_abbrev0+0x3>
 3e8:	2000      	movs	r0, #0
 3ea:	b2c0      	uxtb	r0, r0
 3ec:	e688      	b.n	100 <__MIN_STACK_SIZE>
 3ee:	4293      	cmp	r3, r2
 3f0:	d101      	bne.n	3f6 <.Ldebug_abbrev0+0xf>
 3f2:	42b5      	cmp	r5, r6
 3f4:	d8f2      	bhi.n	3dc <.LASF0+0x1>
 3f6:	2000      	movs	r0, #0
 3f8:	e682      	b.n	100 <__MIN_STACK_SIZE>
 3fa:	2000      	movs	r0, #0
 3fc:	e680      	b.n	100 <__MIN_STACK_SIZE>
 3fe:	2000      	movs	r0, #0
 400:	e67e      	b.n	100 <__MIN_STACK_SIZE>
 402:	2000      	movs	r0, #0
 404:	e67c      	b.n	100 <__MIN_STACK_SIZE>
 406:	2000      	movs	r0, #0
 408:	e67a      	b.n	100 <__MIN_STACK_SIZE>
 40a:	2000      	movs	r0, #0
 40c:	e678      	b.n	100 <__MIN_STACK_SIZE>
 40e:	2000      	movs	r0, #0
 410:	e676      	b.n	100 <__MIN_STACK_SIZE>
 412:	2000      	movs	r0, #0
 414:	e674      	b.n	100 <__MIN_STACK_SIZE>

00000416 <getTriggerValue>:
 416:	234c      	movs	r3, #76	; 0x4c
 418:	5cc2      	ldrb	r2, [r0, r3]
 41a:	3b3d      	subs	r3, #61	; 0x3d
 41c:	4013      	ands	r3, r2
 41e:	2b02      	cmp	r3, #2
 420:	d010      	beq.n	444 <.LASF15+0x4>
 422:	b2da      	uxtb	r2, r3
 424:	2a02      	cmp	r2, #2
 426:	d907      	bls.n	438 <.LASF4+0x2>
 428:	2b04      	cmp	r3, #4
 42a:	d00f      	beq.n	44c <.LASF0+0x3>
 42c:	2b08      	cmp	r3, #8
 42e:	d111      	bne.n	454 <.LASF3>
 430:	6c83      	ldr	r3, [r0, #72]	; 0x48
 432:	6818      	ldr	r0, [r3, #0]
 434:	6859      	ldr	r1, [r3, #4]
 436:	e004      	b.n	442 <.LASF15+0x2>
 438:	2b01      	cmp	r3, #1
 43a:	d10b      	bne.n	454 <.LASF3>
 43c:	6c83      	ldr	r3, [r0, #72]	; 0x48
 43e:	7818      	ldrb	r0, [r3, #0]
 440:	2100      	movs	r1, #0
 442:	4770      	bx	lr
 444:	6c83      	ldr	r3, [r0, #72]	; 0x48
 446:	8818      	ldrh	r0, [r3, #0]
 448:	2100      	movs	r1, #0
 44a:	e7fa      	b.n	442 <.LASF15+0x2>
 44c:	6c83      	ldr	r3, [r0, #72]	; 0x48
 44e:	6818      	ldr	r0, [r3, #0]
 450:	2100      	movs	r1, #0
 452:	e7f6      	b.n	442 <.LASF15+0x2>
 454:	2000      	movs	r0, #0
 456:	2100      	movs	r1, #0
 458:	e7f3      	b.n	442 <.LASF15+0x2>

0000045a <sampleData>:
 45a:	b5f0      	push	{r4, r5, r6, r7, lr}
 45c:	2700      	movs	r7, #0
 45e:	2355      	movs	r3, #85	; 0x55
 460:	469c      	mov	ip, r3
 462:	2300      	movs	r3, #0
 464:	00be      	lsls	r6, r7, #2
 466:	1986      	adds	r6, r0, r6
 468:	19c5      	adds	r5, r0, r7
 46a:	3524      	adds	r5, #36	; 0x24
 46c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 46e:	1c51      	adds	r1, r2, #1
 470:	6501      	str	r1, [r0, #80]	; 0x50
 472:	6871      	ldr	r1, [r6, #4]
 474:	56c9      	ldrsb	r1, [r1, r3]
 476:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 478:	54a1      	strb	r1, [r4, r2]
 47a:	3301      	adds	r3, #1
 47c:	b2db      	uxtb	r3, r3
 47e:	782a      	ldrb	r2, [r5, #0]
 480:	429a      	cmp	r2, r3
 482:	d8f3      	bhi.n	46c <.LASF8+0xa>
 484:	3701      	adds	r7, #1
 486:	b2ff      	uxtb	r7, r7
 488:	4663      	mov	r3, ip
 48a:	5cc3      	ldrb	r3, [r0, r3]
 48c:	42bb      	cmp	r3, r7
 48e:	d8e8      	bhi.n	462 <.LASF8>
 490:	bdf0      	pop	{r4, r5, r6, r7, pc}

00000492 <getBlockAddress>:
 492:	b510      	push	{r4, lr}
 494:	2800      	cmp	r0, #0
 496:	d016      	beq.n	4c6 <.LASF21+0x3>
 498:	8803      	ldrh	r3, [r0, #0]
 49a:	4299      	cmp	r1, r3
 49c:	d00d      	beq.n	4ba <.LASF18+0x8>
 49e:	2b00      	cmp	r3, #0
 4a0:	d013      	beq.n	4ca <L0+0x2>
 4a2:	2300      	movs	r3, #0
 4a4:	3301      	adds	r3, #1
 4a6:	b29b      	uxth	r3, r3
 4a8:	00da      	lsls	r2, r3, #3
 4aa:	1882      	adds	r2, r0, r2
 4ac:	8814      	ldrh	r4, [r2, #0]
 4ae:	428c      	cmp	r4, r1
 4b0:	d004      	beq.n	4bc <.LASF18+0xa>
 4b2:	2c00      	cmp	r4, #0
 4b4:	d1f6      	bne.n	4a4 <.LASF22+0x2>
 4b6:	2000      	movs	r0, #0
 4b8:	e004      	b.n	4c4 <.LASF21+0x1>
 4ba:	0002      	movs	r2, r0
 4bc:	2000      	movs	r0, #0
 4be:	2900      	cmp	r1, #0
 4c0:	d000      	beq.n	4c4 <.LASF21+0x1>
 4c2:	6850      	ldr	r0, [r2, #4]
 4c4:	bd10      	pop	{r4, pc}
 4c6:	2000      	movs	r0, #0
 4c8:	e7fc      	b.n	4c4 <.LASF21+0x1>
 4ca:	2000      	movs	r0, #0
 4cc:	e7fa      	b.n	4c4 <.LASF21+0x1>

000004ce <Scope_Main_Init>:
 4ce:	b510      	push	{r4, lr}
 4d0:	2301      	movs	r3, #1
 4d2:	425b      	negs	r3, r3
 4d4:	8003      	strh	r3, [r0, #0]
 4d6:	1d02      	adds	r2, r0, #4
 4d8:	0004      	movs	r4, r0
 4da:	3424      	adds	r4, #36	; 0x24
 4dc:	0023      	movs	r3, r4
 4de:	2100      	movs	r1, #0
 4e0:	c202      	stmia	r2!, {r1}
 4e2:	7019      	strb	r1, [r3, #0]
 4e4:	3301      	adds	r3, #1
 4e6:	42a2      	cmp	r2, r4
 4e8:	d1fa      	bne.n	4e0 <.LASF10>
 4ea:	4b16      	ldr	r3, [pc, #88]	; (544 <.LASF12+0x8>)
 4ec:	62c3      	str	r3, [r0, #44]	; 0x2c
 4ee:	2200      	movs	r2, #0
 4f0:	2300      	movs	r3, #0
 4f2:	6382      	str	r2, [r0, #56]	; 0x38
 4f4:	63c3      	str	r3, [r0, #60]	; 0x3c
 4f6:	6402      	str	r2, [r0, #64]	; 0x40
 4f8:	6443      	str	r3, [r0, #68]	; 0x44
 4fa:	2300      	movs	r3, #0
 4fc:	6483      	str	r3, [r0, #72]	; 0x48
 4fe:	324c      	adds	r2, #76	; 0x4c
 500:	5483      	strb	r3, [r0, r2]
 502:	3201      	adds	r2, #1
 504:	5483      	strb	r3, [r0, r2]
 506:	6503      	str	r3, [r0, #80]	; 0x50
 508:	3207      	adds	r2, #7
 50a:	5483      	strb	r3, [r0, r2]
 50c:	3201      	adds	r2, #1
 50e:	5483      	strb	r3, [r0, r2]
 510:	2200      	movs	r2, #0
 512:	2156      	movs	r1, #86	; 0x56
 514:	5243      	strh	r3, [r0, r1]
 516:	3102      	adds	r1, #2
 518:	5243      	strh	r3, [r0, r1]
 51a:	3102      	adds	r1, #2
 51c:	5243      	strh	r3, [r0, r1]
 51e:	3102      	adds	r1, #2
 520:	5442      	strb	r2, [r0, r1]
 522:	6603      	str	r3, [r0, #96]	; 0x60
 524:	6643      	str	r3, [r0, #100]	; 0x64
 526:	310c      	adds	r1, #12
 528:	5442      	strb	r2, [r0, r1]
 52a:	66c3      	str	r3, [r0, #108]	; 0x6c
 52c:	2380      	movs	r3, #128	; 0x80
 52e:	019b      	lsls	r3, r3, #6
 530:	6703      	str	r3, [r0, #112]	; 0x70
 532:	3967      	subs	r1, #103	; 0x67
 534:	2274      	movs	r2, #116	; 0x74
 536:	5481      	strb	r1, [r0, r2]
 538:	6303      	str	r3, [r0, #48]	; 0x30
 53a:	4b03      	ldr	r3, [pc, #12]	; (548 <.LASF19+0x1>)
 53c:	681b      	ldr	r3, [r3, #0]
 53e:	6298      	str	r0, [r3, #40]	; 0x28
 540:	bd10      	pop	{r4, pc}
 542:	46c0      	nop			; (mov r8, r8)
 544:	20000188 	.word	0x20000188
 548:	20007dd8 	.word	0x20007dd8

0000054c <Scope_Main_Update>:
 54c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 54e:	0004      	movs	r4, r0
 550:	234d      	movs	r3, #77	; 0x4d
 552:	5cc2      	ldrb	r2, [r0, r3]
 554:	2a08      	cmp	r2, #8
 556:	d80b      	bhi.n	570 <.LASF2>
 558:	0093      	lsls	r3, r2, #2
 55a:	4a7b      	ldr	r2, [pc, #492]	; (748 <.LASF1>)
 55c:	58d3      	ldr	r3, [r2, r3]
 55e:	469f      	mov	pc, r3
 560:	225a      	movs	r2, #90	; 0x5a
 562:	5a83      	ldrh	r3, [r0, r2]
 564:	3301      	adds	r3, #1
 566:	5283      	strh	r3, [r0, r2]
 568:	3a02      	subs	r2, #2
 56a:	5a83      	ldrh	r3, [r0, r2]
 56c:	3301      	adds	r3, #1
 56e:	5283      	strh	r3, [r0, r2]
 570:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 572:	2258      	movs	r2, #88	; 0x58
 574:	5a83      	ldrh	r3, [r0, r2]
 576:	1c59      	adds	r1, r3, #1
 578:	5281      	strh	r1, [r0, r2]
 57a:	3a02      	subs	r2, #2
 57c:	5a82      	ldrh	r2, [r0, r2]
 57e:	429a      	cmp	r2, r3
 580:	d904      	bls.n	58c <.LASF16+0x10>
 582:	225a      	movs	r2, #90	; 0x5a
 584:	5aa3      	ldrh	r3, [r4, r2]
 586:	3301      	adds	r3, #1
 588:	52a3      	strh	r3, [r4, r2]
 58a:	e7f1      	b.n	570 <.LASF2>
 58c:	2200      	movs	r2, #0
 58e:	2358      	movs	r3, #88	; 0x58
 590:	52c2      	strh	r2, [r0, r3]
 592:	f7ff ff62 	bl	45a <sampleData>

00000596 <.LVL162>:
 596:	2354      	movs	r3, #84	; 0x54
 598:	5ce3      	ldrb	r3, [r4, r3]
 59a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 59c:	4694      	mov	ip, r2
 59e:	4463      	add	r3, ip
 5a0:	2280      	movs	r2, #128	; 0x80
 5a2:	0192      	lsls	r2, r2, #6
 5a4:	4293      	cmp	r3, r2
 5a6:	d9ec      	bls.n	582 <.LASF16+0x6>
 5a8:	2200      	movs	r2, #0
 5aa:	234d      	movs	r3, #77	; 0x4d
 5ac:	54e2      	strb	r2, [r4, r3]
 5ae:	e7e8      	b.n	582 <.LASF16+0x6>
 5b0:	f7ff ff31 	bl	416 <getTriggerValue>

000005b4 <.LVL164>:
 5b4:	0006      	movs	r6, r0
 5b6:	000f      	movs	r7, r1
 5b8:	0002      	movs	r2, r0
 5ba:	000b      	movs	r3, r1
 5bc:	0020      	movs	r0, r4
 5be:	f7ff fd8f 	bl	e0 <isTriggerEvent>

000005c2 <.LVL166>:
 5c2:	2800      	cmp	r0, #0
 5c4:	d003      	beq.n	5ce <.LLST34+0x2>
 5c6:	2204      	movs	r2, #4
 5c8:	234d      	movs	r3, #77	; 0x4d
 5ca:	54e2      	strb	r2, [r4, r3]
 5cc:	e7d0      	b.n	570 <.LASF2>
 5ce:	6426      	str	r6, [r4, #64]	; 0x40
 5d0:	6467      	str	r7, [r4, #68]	; 0x44
 5d2:	e7cd      	b.n	570 <.LASF2>
 5d4:	2258      	movs	r2, #88	; 0x58
 5d6:	5a83      	ldrh	r3, [r0, r2]
 5d8:	1c59      	adds	r1, r3, #1
 5da:	5281      	strh	r1, [r0, r2]
 5dc:	3a02      	subs	r2, #2
 5de:	5a82      	ldrh	r2, [r0, r2]
 5e0:	429a      	cmp	r2, r3
 5e2:	d846      	bhi.n	672 <.LASF1+0x1>
 5e4:	2200      	movs	r2, #0
 5e6:	2358      	movs	r3, #88	; 0x58
 5e8:	52c2      	strh	r2, [r0, r3]
 5ea:	3b04      	subs	r3, #4
 5ec:	5cc3      	ldrb	r3, [r0, r3]
 5ee:	6d02      	ldr	r2, [r0, #80]	; 0x50
 5f0:	4694      	mov	ip, r2
 5f2:	4463      	add	r3, ip
 5f4:	2280      	movs	r2, #128	; 0x80
 5f6:	0192      	lsls	r2, r2, #6
 5f8:	4293      	cmp	r3, r2
 5fa:	d901      	bls.n	600 <.LASF7+0x2>
 5fc:	2300      	movs	r3, #0
 5fe:	6503      	str	r3, [r0, #80]	; 0x50
 600:	2700      	movs	r7, #0
 602:	2355      	movs	r3, #85	; 0x55
 604:	469c      	mov	ip, r3
 606:	2300      	movs	r3, #0
 608:	00be      	lsls	r6, r7, #2
 60a:	19a6      	adds	r6, r4, r6
 60c:	19e5      	adds	r5, r4, r7
 60e:	3524      	adds	r5, #36	; 0x24
 610:	6d22      	ldr	r2, [r4, #80]	; 0x50
 612:	1c51      	adds	r1, r2, #1
 614:	6521      	str	r1, [r4, #80]	; 0x50
 616:	6871      	ldr	r1, [r6, #4]
 618:	56c9      	ldrsb	r1, [r1, r3]
 61a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 61c:	5481      	strb	r1, [r0, r2]
 61e:	3301      	adds	r3, #1
 620:	b2db      	uxtb	r3, r3
 622:	782a      	ldrb	r2, [r5, #0]
 624:	429a      	cmp	r2, r3
 626:	d8f3      	bhi.n	610 <.LLST36+0x2>
 628:	3701      	adds	r7, #1
 62a:	b2ff      	uxtb	r7, r7
 62c:	4663      	mov	r3, ip
 62e:	5ce3      	ldrb	r3, [r4, r3]
 630:	42bb      	cmp	r3, r7
 632:	d8e8      	bhi.n	606 <.LASF7+0x8>
 634:	6d23      	ldr	r3, [r4, #80]	; 0x50
 636:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
 638:	4293      	cmp	r3, r2
 63a:	d31a      	bcc.n	672 <.LASF1+0x1>
 63c:	2201      	movs	r2, #1
 63e:	2368      	movs	r3, #104	; 0x68
 640:	54e2      	strb	r2, [r4, r3]
 642:	0020      	movs	r0, r4
 644:	f7ff fee7 	bl	416 <getTriggerValue>

00000648 <.LVL175>:
 648:	0006      	movs	r6, r0
 64a:	000f      	movs	r7, r1
 64c:	0002      	movs	r2, r0
 64e:	000b      	movs	r3, r1
 650:	0020      	movs	r0, r4
 652:	f7ff fd45 	bl	e0 <isTriggerEvent>

00000656 <.LVL177>:
 656:	2800      	cmp	r0, #0
 658:	d01b      	beq.n	692 <.LLST30+0x1>
 65a:	6e23      	ldr	r3, [r4, #96]	; 0x60
 65c:	2b00      	cmp	r3, #0
 65e:	db1b      	blt.n	698 <.LASF2+0x5>
 660:	6d23      	ldr	r3, [r4, #80]	; 0x50
 662:	2b00      	cmp	r3, #0
 664:	d024      	beq.n	6b0 <L0>
 666:	2258      	movs	r2, #88	; 0x58
 668:	5aa2      	ldrh	r2, [r4, r2]
 66a:	2a00      	cmp	r2, #0
 66c:	d01b      	beq.n	6a6 <.LASF3+0x7>
 66e:	6663      	str	r3, [r4, #100]	; 0x64
 670:	e023      	b.n	6ba <.LASF5>
 672:	0020      	movs	r0, r4
 674:	f7ff fecf 	bl	416 <getTriggerValue>

00000678 <.LVL179>:
 678:	0006      	movs	r6, r0
 67a:	000f      	movs	r7, r1
 67c:	0002      	movs	r2, r0
 67e:	000b      	movs	r3, r1
 680:	0020      	movs	r0, r4
 682:	f7ff fd2d 	bl	e0 <isTriggerEvent>

00000686 <.LVL181>:
 686:	2800      	cmp	r0, #0
 688:	d003      	beq.n	692 <.LLST30+0x1>
 68a:	2368      	movs	r3, #104	; 0x68
 68c:	5ce3      	ldrb	r3, [r4, r3]
 68e:	2b00      	cmp	r3, #0
 690:	d1e3      	bne.n	65a <.LVL177+0x4>
 692:	6426      	str	r6, [r4, #64]	; 0x40
 694:	6467      	str	r7, [r4, #68]	; 0x44
 696:	e76b      	b.n	570 <.LASF2>
 698:	6663      	str	r3, [r4, #100]	; 0x64
 69a:	2300      	movs	r3, #0
 69c:	6523      	str	r3, [r4, #80]	; 0x50
 69e:	2208      	movs	r2, #8
 6a0:	334d      	adds	r3, #77	; 0x4d
 6a2:	54e2      	strb	r2, [r4, r3]
 6a4:	e764      	b.n	570 <.LASF2>
 6a6:	2254      	movs	r2, #84	; 0x54
 6a8:	5ca2      	ldrb	r2, [r4, r2]
 6aa:	1a9b      	subs	r3, r3, r2
 6ac:	6663      	str	r3, [r4, #100]	; 0x64
 6ae:	e004      	b.n	6ba <.LASF5>
 6b0:	2354      	movs	r3, #84	; 0x54
 6b2:	5ce3      	ldrb	r3, [r4, r3]
 6b4:	6f22      	ldr	r2, [r4, #112]	; 0x70
 6b6:	1ad3      	subs	r3, r2, r3
 6b8:	6663      	str	r3, [r4, #100]	; 0x64
 6ba:	2207      	movs	r2, #7
 6bc:	234d      	movs	r3, #77	; 0x4d
 6be:	54e2      	strb	r2, [r4, r3]
 6c0:	e756      	b.n	570 <.LASF2>
 6c2:	2258      	movs	r2, #88	; 0x58
 6c4:	5a83      	ldrh	r3, [r0, r2]
 6c6:	1c59      	adds	r1, r3, #1
 6c8:	5281      	strh	r1, [r0, r2]
 6ca:	3a02      	subs	r2, #2
 6cc:	5a82      	ldrh	r2, [r0, r2]
 6ce:	429a      	cmp	r2, r3
 6d0:	d900      	bls.n	6d4 <.LLST32+0x2>
 6d2:	e74d      	b.n	570 <.LASF2>
 6d4:	2200      	movs	r2, #0
 6d6:	2358      	movs	r3, #88	; 0x58
 6d8:	52c2      	strh	r2, [r0, r3]
 6da:	3b04      	subs	r3, #4
 6dc:	5cc3      	ldrb	r3, [r0, r3]
 6de:	6e42      	ldr	r2, [r0, #100]	; 0x64
 6e0:	4694      	mov	ip, r2
 6e2:	4463      	add	r3, ip
 6e4:	6643      	str	r3, [r0, #100]	; 0x64
 6e6:	2b00      	cmp	r3, #0
 6e8:	da00      	bge.n	6ec <.LASF2+0xa>
 6ea:	e741      	b.n	570 <.LASF2>
 6ec:	2202      	movs	r2, #2
 6ee:	234d      	movs	r3, #77	; 0x4d
 6f0:	54c2      	strb	r2, [r0, r3]
 6f2:	e73d      	b.n	570 <.LASF2>
 6f4:	2258      	movs	r2, #88	; 0x58
 6f6:	5a83      	ldrh	r3, [r0, r2]
 6f8:	1c59      	adds	r1, r3, #1
 6fa:	5281      	strh	r1, [r0, r2]
 6fc:	3a02      	subs	r2, #2
 6fe:	5a82      	ldrh	r2, [r0, r2]
 700:	429a      	cmp	r2, r3
 702:	d900      	bls.n	706 <.LASF2+0x2>
 704:	e734      	b.n	570 <.LASF2>
 706:	2200      	movs	r2, #0
 708:	2358      	movs	r3, #88	; 0x58
 70a:	52c2      	strh	r2, [r0, r3]
 70c:	3b04      	subs	r3, #4
 70e:	5cc3      	ldrb	r3, [r0, r3]
 710:	6d02      	ldr	r2, [r0, #80]	; 0x50
 712:	4694      	mov	ip, r2
 714:	4463      	add	r3, ip
 716:	2280      	movs	r2, #128	; 0x80
 718:	0192      	lsls	r2, r2, #6
 71a:	4293      	cmp	r3, r2
 71c:	d901      	bls.n	722 <.LASF0+0x7>
 71e:	2300      	movs	r3, #0
 720:	6503      	str	r3, [r0, #80]	; 0x50
 722:	0020      	movs	r0, r4
 724:	f7ff fe99 	bl	45a <sampleData>

00000728 <.LVL184>:
 728:	6e63      	ldr	r3, [r4, #100]	; 0x64
 72a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 72c:	1a9b      	subs	r3, r3, r2
 72e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 730:	4293      	cmp	r3, r2
 732:	d905      	bls.n	740 <.LLST27+0x3>
 734:	6f21      	ldr	r1, [r4, #112]	; 0x70
 736:	468c      	mov	ip, r1
 738:	4463      	add	r3, ip
 73a:	429a      	cmp	r2, r3
 73c:	d200      	bcs.n	740 <.LLST27+0x3>
 73e:	e717      	b.n	570 <.LASF2>
 740:	2200      	movs	r2, #0
 742:	234d      	movs	r3, #77	; 0x4d
 744:	54e2      	strb	r2, [r4, r3]
 746:	e713      	b.n	570 <.LASF2>
 748:	00003628 	.word	0x00003628

0000074c <Scope_Main_Load>:
 74c:	234d      	movs	r3, #77	; 0x4d
 74e:	5cc3      	ldrb	r3, [r0, r3]
 750:	700b      	strb	r3, [r1, #0]
 752:	2355      	movs	r3, #85	; 0x55
 754:	5cc3      	ldrb	r3, [r0, r3]
 756:	704b      	strb	r3, [r1, #1]
 758:	2356      	movs	r3, #86	; 0x56
 75a:	5ac2      	ldrh	r2, [r0, r3]
 75c:	708a      	strb	r2, [r1, #2]
 75e:	5ac3      	ldrh	r3, [r0, r3]
 760:	0a1b      	lsrs	r3, r3, #8
 762:	70cb      	strb	r3, [r1, #3]
 764:	2350      	movs	r3, #80	; 0x50
 766:	18c3      	adds	r3, r0, r3
 768:	781b      	ldrb	r3, [r3, #0]
 76a:	710b      	strb	r3, [r1, #4]
 76c:	6d03      	ldr	r3, [r0, #80]	; 0x50
 76e:	0a1b      	lsrs	r3, r3, #8
 770:	714b      	strb	r3, [r1, #5]
 772:	6d03      	ldr	r3, [r0, #80]	; 0x50
 774:	0c1b      	lsrs	r3, r3, #16
 776:	718b      	strb	r3, [r1, #6]
 778:	6d03      	ldr	r3, [r0, #80]	; 0x50
 77a:	0e1b      	lsrs	r3, r3, #24
 77c:	71cb      	strb	r3, [r1, #7]
 77e:	232c      	movs	r3, #44	; 0x2c
 780:	18c3      	adds	r3, r0, r3
 782:	781b      	ldrb	r3, [r3, #0]
 784:	720b      	strb	r3, [r1, #8]
 786:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 788:	0a1b      	lsrs	r3, r3, #8
 78a:	724b      	strb	r3, [r1, #9]
 78c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 78e:	728b      	strb	r3, [r1, #10]
 790:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 792:	0e1b      	lsrs	r3, r3, #24
 794:	72cb      	strb	r3, [r1, #11]
 796:	2360      	movs	r3, #96	; 0x60
 798:	18c3      	adds	r3, r0, r3
 79a:	781b      	ldrb	r3, [r3, #0]
 79c:	730b      	strb	r3, [r1, #12]
 79e:	6e03      	ldr	r3, [r0, #96]	; 0x60
 7a0:	121b      	asrs	r3, r3, #8
 7a2:	734b      	strb	r3, [r1, #13]
 7a4:	6e03      	ldr	r3, [r0, #96]	; 0x60
 7a6:	141b      	asrs	r3, r3, #16
 7a8:	738b      	strb	r3, [r1, #14]
 7aa:	6e03      	ldr	r3, [r0, #96]	; 0x60
 7ac:	161b      	asrs	r3, r3, #24
 7ae:	73cb      	strb	r3, [r1, #15]
 7b0:	2364      	movs	r3, #100	; 0x64
 7b2:	18c3      	adds	r3, r0, r3
 7b4:	781b      	ldrb	r3, [r3, #0]
 7b6:	740b      	strb	r3, [r1, #16]
 7b8:	6e43      	ldr	r3, [r0, #100]	; 0x64
 7ba:	121b      	asrs	r3, r3, #8
 7bc:	744b      	strb	r3, [r1, #17]
 7be:	6e43      	ldr	r3, [r0, #100]	; 0x64
 7c0:	141b      	asrs	r3, r3, #16
 7c2:	748b      	strb	r3, [r1, #18]
 7c4:	6e43      	ldr	r3, [r0, #100]	; 0x64
 7c6:	161b      	asrs	r3, r3, #24
 7c8:	74cb      	strb	r3, [r1, #19]
 7ca:	2370      	movs	r3, #112	; 0x70
 7cc:	18c3      	adds	r3, r0, r3
 7ce:	781b      	ldrb	r3, [r3, #0]
 7d0:	750b      	strb	r3, [r1, #20]
 7d2:	6f03      	ldr	r3, [r0, #112]	; 0x70
 7d4:	0a1b      	lsrs	r3, r3, #8
 7d6:	754b      	strb	r3, [r1, #21]
 7d8:	6f03      	ldr	r3, [r0, #112]	; 0x70
 7da:	0c1b      	lsrs	r3, r3, #16
 7dc:	758b      	strb	r3, [r1, #22]
 7de:	6f03      	ldr	r3, [r0, #112]	; 0x70
 7e0:	0e1b      	lsrs	r3, r3, #24
 7e2:	75cb      	strb	r3, [r1, #23]
 7e4:	2330      	movs	r3, #48	; 0x30
 7e6:	18c3      	adds	r3, r0, r3
 7e8:	781b      	ldrb	r3, [r3, #0]
 7ea:	760b      	strb	r3, [r1, #24]
 7ec:	6b03      	ldr	r3, [r0, #48]	; 0x30
 7ee:	0a1b      	lsrs	r3, r3, #8
 7f0:	764b      	strb	r3, [r1, #25]
 7f2:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 7f4:	768b      	strb	r3, [r1, #26]
 7f6:	6b03      	ldr	r3, [r0, #48]	; 0x30
 7f8:	0e1b      	lsrs	r3, r3, #24
 7fa:	76cb      	strb	r3, [r1, #27]
 7fc:	2382      	movs	r3, #130	; 0x82
 7fe:	770b      	strb	r3, [r1, #28]
 800:	201d      	movs	r0, #29
 802:	4770      	bx	lr

00000804 <Scope_Main_Save>:
 804:	b5f0      	push	{r4, r5, r6, r7, lr}
 806:	46de      	mov	lr, fp
 808:	4657      	mov	r7, sl
 80a:	464e      	mov	r6, r9
 80c:	4645      	mov	r5, r8
 80e:	b5e0      	push	{r5, r6, r7, lr}
 810:	b083      	sub	sp, #12
 812:	0004      	movs	r4, r0
 814:	000d      	movs	r5, r1
 816:	4692      	mov	sl, r2
 818:	2701      	movs	r7, #1
 81a:	2a03      	cmp	r2, #3
 81c:	d800      	bhi.n	820 <.LASF1>
 81e:	e0d8      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 820:	784b      	ldrb	r3, [r1, #1]
 822:	3b01      	subs	r3, #1
 824:	2b07      	cmp	r3, #7
 826:	d900      	bls.n	82a <.LASF1+0xa>
 828:	e0d3      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 82a:	2200      	movs	r2, #0
 82c:	234d      	movs	r3, #77	; 0x4d
 82e:	54c2      	strb	r2, [r0, r3]
 830:	3308      	adds	r3, #8
 832:	54c2      	strb	r2, [r0, r3]
 834:	3305      	adds	r3, #5
 836:	52c2      	strh	r2, [r0, r3]
 838:	6502      	str	r2, [r0, #80]	; 0x50
 83a:	78c9      	ldrb	r1, [r1, #3]
 83c:	0209      	lsls	r1, r1, #8
 83e:	78ab      	ldrb	r3, [r5, #2]
 840:	185b      	adds	r3, r3, r1
 842:	b29b      	uxth	r3, r3
 844:	2156      	movs	r1, #86	; 0x56
 846:	5243      	strh	r3, [r0, r1]
 848:	3102      	adds	r1, #2
 84a:	5243      	strh	r3, [r0, r1]
 84c:	2000      	movs	r0, #0
 84e:	2100      	movs	r1, #0
 850:	6420      	str	r0, [r4, #64]	; 0x40
 852:	6461      	str	r1, [r4, #68]	; 0x44
 854:	2354      	movs	r3, #84	; 0x54
 856:	2100      	movs	r1, #0
 858:	54e1      	strb	r1, [r4, r3]
 85a:	2102      	movs	r1, #2
 85c:	3308      	adds	r3, #8
 85e:	54e1      	strb	r1, [r4, r3]
 860:	330c      	adds	r3, #12
 862:	2100      	movs	r1, #0
 864:	54e1      	strb	r1, [r4, r3]
 866:	6662      	str	r2, [r4, #100]	; 0x64
 868:	786b      	ldrb	r3, [r5, #1]
 86a:	2b00      	cmp	r3, #0
 86c:	d100      	bne.n	870 <.LASF1+0x4>
 86e:	e0cd      	b.n	a0c <L0+0x30>
 870:	2604      	movs	r6, #4
 872:	2300      	movs	r3, #0
 874:	4699      	mov	r9, r3
 876:	002b      	movs	r3, r5
 878:	0025      	movs	r5, r4
 87a:	464c      	mov	r4, r9
 87c:	4699      	mov	r9, r3
 87e:	e099      	b.n	9b4 <.Ldebug_abbrev0+0x39>
 880:	464b      	mov	r3, r9
 882:	19da      	adds	r2, r3, r7
 884:	7851      	ldrb	r1, [r2, #1]
 886:	0209      	lsls	r1, r1, #8
 888:	5ddb      	ldrb	r3, [r3, r7]
 88a:	185b      	adds	r3, r3, r1
 88c:	b29b      	uxth	r3, r3
 88e:	9300      	str	r3, [sp, #0]
 890:	4bcc      	ldr	r3, [pc, #816]	; (bc4 <.LLST18+0x2>)
 892:	681b      	ldr	r3, [r3, #0]
 894:	469b      	mov	fp, r3
 896:	6818      	ldr	r0, [r3, #0]
 898:	78d3      	ldrb	r3, [r2, #3]
 89a:	021b      	lsls	r3, r3, #8
 89c:	7891      	ldrb	r1, [r2, #2]
 89e:	18c9      	adds	r1, r1, r3
 8a0:	b289      	uxth	r1, r1
 8a2:	f7ff fdf6 	bl	492 <getBlockAddress>

000008a6 <.LVL197>:
 8a6:	4684      	mov	ip, r0
 8a8:	2800      	cmp	r0, #0
 8aa:	d100      	bne.n	8ae <.LLST24+0x6>
 8ac:	e1fa      	b.n	ca4 <.Ldebug_abbrev0+0x13>
 8ae:	8800      	ldrh	r0, [r0, #0]
 8b0:	465b      	mov	r3, fp
 8b2:	685b      	ldr	r3, [r3, #4]
 8b4:	469b      	mov	fp, r3

000008b6 <.LBB76>:
 8b6:	881b      	ldrh	r3, [r3, #0]
 8b8:	4298      	cmp	r0, r3
 8ba:	d012      	beq.n	8e2 <.LLST25+0xb>
 8bc:	2b00      	cmp	r3, #0
 8be:	d100      	bne.n	8c2 <.Ldebug_ranges0+0x2>
 8c0:	e1f2      	b.n	ca8 <.Ldebug_abbrev0+0x17>
 8c2:	2200      	movs	r2, #0
 8c4:	4659      	mov	r1, fp
 8c6:	46a3      	mov	fp, r4
 8c8:	3201      	adds	r2, #1
 8ca:	b292      	uxth	r2, r2
 8cc:	0053      	lsls	r3, r2, #1
 8ce:	189b      	adds	r3, r3, r2
 8d0:	00db      	lsls	r3, r3, #3
 8d2:	18cb      	adds	r3, r1, r3
 8d4:	881c      	ldrh	r4, [r3, #0]
 8d6:	42a0      	cmp	r0, r4
 8d8:	d006      	beq.n	8e8 <.LASF0>
 8da:	2c00      	cmp	r4, #0
 8dc:	d1f4      	bne.n	8c8 <.LASF0+0x2>
 8de:	4647      	mov	r7, r8
 8e0:	e077      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 8e2:	0018      	movs	r0, r3
 8e4:	465b      	mov	r3, fp
 8e6:	e000      	b.n	8ea <.LASF0+0x2>
 8e8:	465c      	mov	r4, fp
 8ea:	2800      	cmp	r0, #0
 8ec:	d100      	bne.n	8f0 <.LBE76>
 8ee:	e1dd      	b.n	cac <.LLST10+0x2>

000008f0 <.LBE76>:
 8f0:	2b00      	cmp	r3, #0
 8f2:	d100      	bne.n	8f6 <.LASF0>
 8f4:	e1dc      	b.n	cb0 <.LLST10+0x6>
 8f6:	695b      	ldr	r3, [r3, #20]
 8f8:	9900      	ldr	r1, [sp, #0]
 8fa:	4660      	mov	r0, ip
 8fc:	4798      	blx	r3

000008fe <.LVL211>:
 8fe:	00a3      	lsls	r3, r4, #2
 900:	18eb      	adds	r3, r5, r3
 902:	6058      	str	r0, [r3, #4]
 904:	2800      	cmp	r0, #0
 906:	d138      	bne.n	97a <L0+0xa>
 908:	4647      	mov	r7, r8
 90a:	e062      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 90c:	4bad      	ldr	r3, [pc, #692]	; (bc4 <.LLST18+0x2>)
 90e:	681b      	ldr	r3, [r3, #0]
 910:	6818      	ldr	r0, [r3, #0]
 912:	464b      	mov	r3, r9
 914:	19da      	adds	r2, r3, r7
 916:	78d3      	ldrb	r3, [r2, #3]
 918:	021b      	lsls	r3, r3, #8
 91a:	7891      	ldrb	r1, [r2, #2]
 91c:	18c9      	adds	r1, r1, r3
 91e:	b289      	uxth	r1, r1
 920:	f7ff fdb7 	bl	492 <getBlockAddress>

00000924 <.LVL216>:
 924:	2800      	cmp	r0, #0
 926:	d100      	bne.n	92a <.LVL216+0x6>
 928:	e1b2      	b.n	c90 <.LLST9+0x4>
 92a:	00a3      	lsls	r3, r4, #2
 92c:	18eb      	adds	r3, r5, r3
 92e:	6058      	str	r0, [r3, #4]
 930:	e023      	b.n	97a <L0+0xa>
 932:	4ba4      	ldr	r3, [pc, #656]	; (bc4 <.LLST18+0x2>)
 934:	681b      	ldr	r3, [r3, #0]
 936:	6818      	ldr	r0, [r3, #0]
 938:	464b      	mov	r3, r9
 93a:	19da      	adds	r2, r3, r7
 93c:	78d3      	ldrb	r3, [r2, #3]
 93e:	021b      	lsls	r3, r3, #8
 940:	7891      	ldrb	r1, [r2, #2]
 942:	18c9      	adds	r1, r1, r3
 944:	b289      	uxth	r1, r1
 946:	f7ff fda4 	bl	492 <getBlockAddress>

0000094a <.LVL220>:
 94a:	2800      	cmp	r0, #0
 94c:	d100      	bne.n	950 <.LVL220+0x6>
 94e:	e1a1      	b.n	c94 <.Ldebug_abbrev0+0x3>
 950:	6802      	ldr	r2, [r0, #0]
 952:	00a3      	lsls	r3, r4, #2
 954:	18eb      	adds	r3, r5, r3
 956:	605a      	str	r2, [r3, #4]
 958:	e00f      	b.n	97a <L0+0xa>
 95a:	00a2      	lsls	r2, r4, #2
 95c:	18aa      	adds	r2, r5, r2
 95e:	464b      	mov	r3, r9
 960:	19d9      	adds	r1, r3, r7
 962:	784b      	ldrb	r3, [r1, #1]
 964:	021b      	lsls	r3, r3, #8
 966:	7888      	ldrb	r0, [r1, #2]
 968:	0400      	lsls	r0, r0, #16
 96a:	181b      	adds	r3, r3, r0
 96c:	4648      	mov	r0, r9
 96e:	5dc0      	ldrb	r0, [r0, r7]
 970:	181b      	adds	r3, r3, r0
 972:	78c9      	ldrb	r1, [r1, #3]
 974:	0609      	lsls	r1, r1, #24
 976:	185b      	adds	r3, r3, r1
 978:	6053      	str	r3, [r2, #4]
 97a:	444f      	add	r7, r9
 97c:	793b      	ldrb	r3, [r7, #4]
 97e:	192a      	adds	r2, r5, r4
 980:	3224      	adds	r2, #36	; 0x24
 982:	7013      	strb	r3, [r2, #0]
 984:	2254      	movs	r2, #84	; 0x54
 986:	5ca9      	ldrb	r1, [r5, r2]
 988:	1859      	adds	r1, r3, r1
 98a:	b2c9      	uxtb	r1, r1
 98c:	54a9      	strb	r1, [r5, r2]
 98e:	3208      	adds	r2, #8
 990:	5ca8      	ldrb	r0, [r5, r2]
 992:	181b      	adds	r3, r3, r0
 994:	54ab      	strb	r3, [r5, r2]
 996:	2780      	movs	r7, #128	; 0x80
 998:	01bf      	lsls	r7, r7, #6
 99a:	0038      	movs	r0, r7
 99c:	f002 fcea 	bl	3374 <__aeabi_idivmod>
 9a0:	1a7f      	subs	r7, r7, r1
 9a2:	672f      	str	r7, [r5, #112]	; 0x70
 9a4:	3606      	adds	r6, #6
 9a6:	b2f6      	uxtb	r6, r6
 9a8:	3401      	adds	r4, #1
 9aa:	b2e4      	uxtb	r4, r4
 9ac:	464b      	mov	r3, r9
 9ae:	785b      	ldrb	r3, [r3, #1]
 9b0:	42a3      	cmp	r3, r4
 9b2:	d916      	bls.n	9e2 <L0+0x6>
 9b4:	464b      	mov	r3, r9
 9b6:	5d9b      	ldrb	r3, [r3, r6]
 9b8:	4698      	mov	r8, r3
 9ba:	1c77      	adds	r7, r6, #1
 9bc:	b2ff      	uxtb	r7, r7
 9be:	2b01      	cmp	r3, #1
 9c0:	d100      	bne.n	9c4 <.Ldebug_abbrev0+0x49>
 9c2:	e75d      	b.n	880 <.Ldebug_abbrev0+0x2>
 9c4:	2b00      	cmp	r3, #0
 9c6:	d0c8      	beq.n	95a <.LLST13+0x3>
 9c8:	2b02      	cmp	r3, #2
 9ca:	d09f      	beq.n	90c <.LLST26+0xc>
 9cc:	2b03      	cmp	r3, #3
 9ce:	d0b0      	beq.n	932 <.LVL216+0xe>
 9d0:	2701      	movs	r7, #1
 9d2:	0038      	movs	r0, r7
 9d4:	b003      	add	sp, #12
 9d6:	bc3c      	pop	{r2, r3, r4, r5}
 9d8:	4690      	mov	r8, r2
 9da:	4699      	mov	r9, r3
 9dc:	46a2      	mov	sl, r4
 9de:	46ab      	mov	fp, r5
 9e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 9e2:	002c      	movs	r4, r5
 9e4:	464d      	mov	r5, r9
 9e6:	5daa      	ldrb	r2, [r5, r6]
 9e8:	234c      	movs	r3, #76	; 0x4c
 9ea:	54e2      	strb	r2, [r4, r3]
 9ec:	1c73      	adds	r3, r6, #1
 9ee:	b2db      	uxtb	r3, r3
 9f0:	5cef      	ldrb	r7, [r5, r3]
 9f2:	1cb3      	adds	r3, r6, #2
 9f4:	b2db      	uxtb	r3, r3
 9f6:	4698      	mov	r8, r3
 9f8:	2f01      	cmp	r7, #1
 9fa:	d009      	beq.n	a10 <L0+0x34>
 9fc:	2f00      	cmp	r7, #0
 9fe:	d069      	beq.n	ad4 <.LVL266+0xc>
 a00:	2f02      	cmp	r7, #2
 a02:	d044      	beq.n	a8e <.Ldebug_line0+0x22>
 a04:	2f03      	cmp	r7, #3
 a06:	d053      	beq.n	ab0 <.LVL262+0xa>
 a08:	2701      	movs	r7, #1
 a0a:	e7e2      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 a0c:	2604      	movs	r6, #4
 a0e:	e7ea      	b.n	9e6 <L0+0xa>
 a10:	4b6c      	ldr	r3, [pc, #432]	; (bc4 <.LLST18+0x2>)
 a12:	681b      	ldr	r3, [r3, #0]
 a14:	4699      	mov	r9, r3
 a16:	6818      	ldr	r0, [r3, #0]
 a18:	4643      	mov	r3, r8
 a1a:	18ea      	adds	r2, r5, r3
 a1c:	78d3      	ldrb	r3, [r2, #3]
 a1e:	021b      	lsls	r3, r3, #8
 a20:	7891      	ldrb	r1, [r2, #2]
 a22:	18c9      	adds	r1, r1, r3
 a24:	b289      	uxth	r1, r1
 a26:	f7ff fd34 	bl	492 <getBlockAddress>

00000a2a <.LVL244>:
 a2a:	4684      	mov	ip, r0
 a2c:	2800      	cmp	r0, #0
 a2e:	d0d0      	beq.n	9d2 <.Ldebug_abbrev0+0x57>
 a30:	8801      	ldrh	r1, [r0, #0]
 a32:	464b      	mov	r3, r9
 a34:	685b      	ldr	r3, [r3, #4]
 a36:	4699      	mov	r9, r3

00000a38 <.LBB78>:
 a38:	881b      	ldrh	r3, [r3, #0]
 a3a:	4299      	cmp	r1, r3
 a3c:	d010      	beq.n	a60 <.LBB78+0x28>
 a3e:	2b00      	cmp	r3, #0
 a40:	d0c7      	beq.n	9d2 <.Ldebug_abbrev0+0x57>
 a42:	2200      	movs	r2, #0
 a44:	4648      	mov	r0, r9
 a46:	46a1      	mov	r9, r4
 a48:	3201      	adds	r2, #1
 a4a:	b292      	uxth	r2, r2
 a4c:	0053      	lsls	r3, r2, #1
 a4e:	189b      	adds	r3, r3, r2
 a50:	00db      	lsls	r3, r3, #3
 a52:	18c3      	adds	r3, r0, r3
 a54:	881c      	ldrh	r4, [r3, #0]
 a56:	42a1      	cmp	r1, r4
 a58:	d005      	beq.n	a66 <.LBB78+0x2e>
 a5a:	2c00      	cmp	r4, #0
 a5c:	d1f4      	bne.n	a48 <.LBB78+0x10>
 a5e:	e7b8      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 a60:	0019      	movs	r1, r3
 a62:	464b      	mov	r3, r9
 a64:	e000      	b.n	a68 <.LBB78+0x30>
 a66:	464c      	mov	r4, r9
 a68:	2900      	cmp	r1, #0
 a6a:	d0b2      	beq.n	9d2 <.Ldebug_abbrev0+0x57>

00000a6c <.LBE78>:
 a6c:	2b00      	cmp	r3, #0
 a6e:	d0b0      	beq.n	9d2 <.Ldebug_abbrev0+0x57>
 a70:	4642      	mov	r2, r8
 a72:	18aa      	adds	r2, r5, r2
 a74:	7852      	ldrb	r2, [r2, #1]
 a76:	0212      	lsls	r2, r2, #8
 a78:	4641      	mov	r1, r8
 a7a:	5c69      	ldrb	r1, [r5, r1]
 a7c:	1889      	adds	r1, r1, r2
 a7e:	b289      	uxth	r1, r1
 a80:	695b      	ldr	r3, [r3, #20]
 a82:	4660      	mov	r0, ip
 a84:	4798      	blx	r3
 a86:	64a0      	str	r0, [r4, #72]	; 0x48
 a88:	2800      	cmp	r0, #0
 a8a:	d130      	bne.n	aee <.LLST16+0x9>
 a8c:	e7a1      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 a8e:	4b4d      	ldr	r3, [pc, #308]	; (bc4 <.LLST18+0x2>)
 a90:	681b      	ldr	r3, [r3, #0]
 a92:	6818      	ldr	r0, [r3, #0]
 a94:	4643      	mov	r3, r8
 a96:	18ea      	adds	r2, r5, r3
 a98:	78d3      	ldrb	r3, [r2, #3]
 a9a:	021b      	lsls	r3, r3, #8
 a9c:	7891      	ldrb	r1, [r2, #2]
 a9e:	18c9      	adds	r1, r1, r3
 aa0:	b289      	uxth	r1, r1
 aa2:	f7ff fcf6 	bl	492 <getBlockAddress>

00000aa6 <.LVL262>:
 aa6:	2800      	cmp	r0, #0
 aa8:	d100      	bne.n	aac <.LVL262+0x6>
 aaa:	e0f5      	b.n	c98 <.Ldebug_abbrev0+0x7>
 aac:	64a0      	str	r0, [r4, #72]	; 0x48
 aae:	e01e      	b.n	aee <.LLST16+0x9>
 ab0:	4b44      	ldr	r3, [pc, #272]	; (bc4 <.LLST18+0x2>)
 ab2:	681b      	ldr	r3, [r3, #0]
 ab4:	6818      	ldr	r0, [r3, #0]
 ab6:	4643      	mov	r3, r8
 ab8:	18ea      	adds	r2, r5, r3
 aba:	78d3      	ldrb	r3, [r2, #3]
 abc:	021b      	lsls	r3, r3, #8
 abe:	7891      	ldrb	r1, [r2, #2]
 ac0:	18c9      	adds	r1, r1, r3
 ac2:	b289      	uxth	r1, r1
 ac4:	f7ff fce5 	bl	492 <getBlockAddress>

00000ac8 <.LVL266>:
 ac8:	2800      	cmp	r0, #0
 aca:	d100      	bne.n	ace <.LVL266+0x6>
 acc:	e0e6      	b.n	c9c <.Ldebug_abbrev0+0xb>
 ace:	6803      	ldr	r3, [r0, #0]
 ad0:	64a3      	str	r3, [r4, #72]	; 0x48
 ad2:	e00c      	b.n	aee <.LLST16+0x9>
 ad4:	18ea      	adds	r2, r5, r3
 ad6:	7853      	ldrb	r3, [r2, #1]
 ad8:	021b      	lsls	r3, r3, #8
 ada:	7891      	ldrb	r1, [r2, #2]
 adc:	0409      	lsls	r1, r1, #16
 ade:	185b      	adds	r3, r3, r1
 ae0:	4641      	mov	r1, r8
 ae2:	5c69      	ldrb	r1, [r5, r1]
 ae4:	185b      	adds	r3, r3, r1
 ae6:	78d2      	ldrb	r2, [r2, #3]
 ae8:	0612      	lsls	r2, r2, #24
 aea:	189b      	adds	r3, r3, r2
 aec:	64a3      	str	r3, [r4, #72]	; 0x48
 aee:	1db7      	adds	r7, r6, #6
 af0:	b2fb      	uxtb	r3, r7
 af2:	4698      	mov	r8, r3
 af4:	234c      	movs	r3, #76	; 0x4c
 af6:	5ce3      	ldrb	r3, [r4, r3]
 af8:	469c      	mov	ip, r3
 afa:	270f      	movs	r7, #15
 afc:	401f      	ands	r7, r3
 afe:	2f02      	cmp	r7, #2
 b00:	d100      	bne.n	b04 <.LLST16+0x1f>
 b02:	e098      	b.n	c36 <.LVL277+0x6>
 b04:	d960      	bls.n	bc8 <.LLST18+0x6>
 b06:	2f04      	cmp	r7, #4
 b08:	d100      	bne.n	b0c <.LLST16+0x27>
 b0a:	e09f      	b.n	c4c <.LVL277+0x1c>
 b0c:	2f08      	cmp	r7, #8
 b0e:	d000      	beq.n	b12 <.LLST16+0x2d>
 b10:	e0c6      	b.n	ca0 <.Ldebug_abbrev0+0xf>
 b12:	46a9      	mov	r9, r5
 b14:	44c1      	add	r9, r8
 b16:	464b      	mov	r3, r9
 b18:	785b      	ldrb	r3, [r3, #1]
 b1a:	2100      	movs	r1, #0
 b1c:	2200      	movs	r2, #0
 b1e:	9100      	str	r1, [sp, #0]
 b20:	9201      	str	r2, [sp, #4]
 b22:	021b      	lsls	r3, r3, #8
 b24:	9300      	str	r3, [sp, #0]
 b26:	464b      	mov	r3, r9
 b28:	789b      	ldrb	r3, [r3, #2]
 b2a:	469b      	mov	fp, r3
 b2c:	2300      	movs	r3, #0
 b2e:	4659      	mov	r1, fp
 b30:	040a      	lsls	r2, r1, #16
 b32:	9800      	ldr	r0, [sp, #0]
 b34:	9901      	ldr	r1, [sp, #4]
 b36:	1880      	adds	r0, r0, r2
 b38:	4159      	adcs	r1, r3
 b3a:	9000      	str	r0, [sp, #0]
 b3c:	9101      	str	r1, [sp, #4]
 b3e:	4641      	mov	r1, r8
 b40:	5c6a      	ldrb	r2, [r5, r1]
 b42:	2300      	movs	r3, #0
 b44:	9800      	ldr	r0, [sp, #0]
 b46:	9901      	ldr	r1, [sp, #4]
 b48:	1880      	adds	r0, r0, r2
 b4a:	4159      	adcs	r1, r3
 b4c:	9000      	str	r0, [sp, #0]
 b4e:	9101      	str	r1, [sp, #4]
 b50:	4649      	mov	r1, r9
 b52:	78c9      	ldrb	r1, [r1, #3]
 b54:	468b      	mov	fp, r1
 b56:	2100      	movs	r1, #0
 b58:	465b      	mov	r3, fp
 b5a:	0618      	lsls	r0, r3, #24
 b5c:	9a00      	ldr	r2, [sp, #0]
 b5e:	9b01      	ldr	r3, [sp, #4]
 b60:	1812      	adds	r2, r2, r0
 b62:	414b      	adcs	r3, r1
 b64:	9200      	str	r2, [sp, #0]
 b66:	9301      	str	r3, [sp, #4]
 b68:	2200      	movs	r2, #0
 b6a:	4649      	mov	r1, r9
 b6c:	790b      	ldrb	r3, [r1, #4]
 b6e:	9800      	ldr	r0, [sp, #0]
 b70:	9901      	ldr	r1, [sp, #4]
 b72:	1880      	adds	r0, r0, r2
 b74:	4159      	adcs	r1, r3
 b76:	9000      	str	r0, [sp, #0]
 b78:	9101      	str	r1, [sp, #4]
 b7a:	464b      	mov	r3, r9
 b7c:	795b      	ldrb	r3, [r3, #5]
 b7e:	469b      	mov	fp, r3
 b80:	2200      	movs	r2, #0
 b82:	4659      	mov	r1, fp
 b84:	020b      	lsls	r3, r1, #8
 b86:	9800      	ldr	r0, [sp, #0]
 b88:	9901      	ldr	r1, [sp, #4]
 b8a:	1880      	adds	r0, r0, r2
 b8c:	4159      	adcs	r1, r3
 b8e:	9000      	str	r0, [sp, #0]
 b90:	9101      	str	r1, [sp, #4]
 b92:	4649      	mov	r1, r9
 b94:	7989      	ldrb	r1, [r1, #6]
 b96:	468b      	mov	fp, r1
 b98:	2000      	movs	r0, #0
 b9a:	465b      	mov	r3, fp
 b9c:	0419      	lsls	r1, r3, #16
 b9e:	9a00      	ldr	r2, [sp, #0]
 ba0:	9b01      	ldr	r3, [sp, #4]
 ba2:	1812      	adds	r2, r2, r0
 ba4:	414b      	adcs	r3, r1
 ba6:	9200      	str	r2, [sp, #0]
 ba8:	9301      	str	r3, [sp, #4]
 baa:	464b      	mov	r3, r9
 bac:	79db      	ldrb	r3, [r3, #7]
 bae:	4699      	mov	r9, r3
 bb0:	2200      	movs	r2, #0
 bb2:	4649      	mov	r1, r9
 bb4:	060b      	lsls	r3, r1, #24
 bb6:	9800      	ldr	r0, [sp, #0]
 bb8:	9901      	ldr	r1, [sp, #4]
 bba:	1812      	adds	r2, r2, r0
 bbc:	414b      	adcs	r3, r1
 bbe:	63a2      	str	r2, [r4, #56]	; 0x38
 bc0:	63e3      	str	r3, [r4, #60]	; 0x3c
 bc2:	e008      	b.n	bd6 <.LLST18+0x14>
 bc4:	20007dd8 	.word	0x20007dd8
 bc8:	2f01      	cmp	r7, #1
 bca:	d169      	bne.n	ca0 <.Ldebug_abbrev0+0xf>
 bcc:	4643      	mov	r3, r8
 bce:	5ceb      	ldrb	r3, [r5, r3]
 bd0:	63a3      	str	r3, [r4, #56]	; 0x38
 bd2:	2300      	movs	r3, #0
 bd4:	63e3      	str	r3, [r4, #60]	; 0x3c
 bd6:	4663      	mov	r3, ip
 bd8:	466a      	mov	r2, sp
 bda:	7013      	strb	r3, [r2, #0]
 bdc:	7813      	ldrb	r3, [r2, #0]
 bde:	b25b      	sxtb	r3, r3
 be0:	2b00      	cmp	r3, #0
 be2:	db44      	blt.n	c6e <.LLST8+0x2>
 be4:	2320      	movs	r3, #32
 be6:	4662      	mov	r2, ip
 be8:	431a      	orrs	r2, r3
 bea:	0013      	movs	r3, r2
 bec:	224c      	movs	r2, #76	; 0x4c
 bee:	54a3      	strb	r3, [r4, r2]
 bf0:	360a      	adds	r6, #10
 bf2:	b2f6      	uxtb	r6, r6
 bf4:	19ab      	adds	r3, r5, r6
 bf6:	7858      	ldrb	r0, [r3, #1]
 bf8:	0200      	lsls	r0, r0, #8
 bfa:	5daa      	ldrb	r2, [r5, r6]
 bfc:	1880      	adds	r0, r0, r2
 bfe:	789a      	ldrb	r2, [r3, #2]
 c00:	0412      	lsls	r2, r2, #16
 c02:	1880      	adds	r0, r0, r2
 c04:	78db      	ldrb	r3, [r3, #3]
 c06:	061b      	lsls	r3, r3, #24
 c08:	18c0      	adds	r0, r0, r3
 c0a:	6620      	str	r0, [r4, #96]	; 0x60
 c0c:	f001 fd58 	bl	26c0 <getAbsValI32>

00000c10 <.LVL273>:
 c10:	66e0      	str	r0, [r4, #108]	; 0x6c
 c12:	1d33      	adds	r3, r6, #4
 c14:	b2db      	uxtb	r3, r3
 c16:	5cea      	ldrb	r2, [r5, r3]
 c18:	2374      	movs	r3, #116	; 0x74
 c1a:	54e2      	strb	r2, [r4, r3]
 c1c:	3605      	adds	r6, #5
 c1e:	b2f6      	uxtb	r6, r6
 c20:	45b2      	cmp	sl, r6
 c22:	d928      	bls.n	c76 <.LLST8+0xa>
 c24:	5dab      	ldrb	r3, [r5, r6]
 c26:	2b01      	cmp	r3, #1
 c28:	d12a      	bne.n	c80 <.LVL281+0x4>
 c2a:	0020      	movs	r0, r4
 c2c:	f7ff fbf3 	bl	416 <getTriggerValue>

00000c30 <.LVL277>:
 c30:	6420      	str	r0, [r4, #64]	; 0x40
 c32:	6461      	str	r1, [r4, #68]	; 0x44
 c34:	e024      	b.n	c80 <.LVL281+0x4>
 c36:	4643      	mov	r3, r8
 c38:	18eb      	adds	r3, r5, r3
 c3a:	785b      	ldrb	r3, [r3, #1]
 c3c:	021b      	lsls	r3, r3, #8
 c3e:	4642      	mov	r2, r8
 c40:	5caa      	ldrb	r2, [r5, r2]
 c42:	189b      	adds	r3, r3, r2
 c44:	63a3      	str	r3, [r4, #56]	; 0x38
 c46:	17db      	asrs	r3, r3, #31
 c48:	63e3      	str	r3, [r4, #60]	; 0x3c
 c4a:	e7c4      	b.n	bd6 <.LLST18+0x14>
 c4c:	4643      	mov	r3, r8
 c4e:	18ea      	adds	r2, r5, r3
 c50:	7853      	ldrb	r3, [r2, #1]
 c52:	021b      	lsls	r3, r3, #8
 c54:	7891      	ldrb	r1, [r2, #2]
 c56:	0409      	lsls	r1, r1, #16
 c58:	185b      	adds	r3, r3, r1
 c5a:	4641      	mov	r1, r8
 c5c:	5c69      	ldrb	r1, [r5, r1]
 c5e:	185b      	adds	r3, r3, r1
 c60:	78d2      	ldrb	r2, [r2, #3]
 c62:	0612      	lsls	r2, r2, #24
 c64:	189b      	adds	r3, r3, r2
 c66:	63a3      	str	r3, [r4, #56]	; 0x38
 c68:	2300      	movs	r3, #0
 c6a:	63e3      	str	r3, [r4, #60]	; 0x3c
 c6c:	e7b3      	b.n	bd6 <.LLST18+0x14>
 c6e:	003e      	movs	r6, r7
 c70:	4446      	add	r6, r8
 c72:	b2f6      	uxtb	r6, r6
 c74:	e7be      	b.n	bf4 <.LLST19+0x6>
 c76:	0020      	movs	r0, r4
 c78:	f7ff fbcd 	bl	416 <getTriggerValue>

00000c7c <.LVL281>:
 c7c:	6420      	str	r0, [r4, #64]	; 0x40
 c7e:	6461      	str	r1, [r4, #68]	; 0x44
 c80:	786a      	ldrb	r2, [r5, #1]
 c82:	2355      	movs	r3, #85	; 0x55
 c84:	54e2      	strb	r2, [r4, r3]
 c86:	782a      	ldrb	r2, [r5, #0]
 c88:	3b08      	subs	r3, #8
 c8a:	54e2      	strb	r2, [r4, r3]
 c8c:	2700      	movs	r7, #0
 c8e:	e6a0      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 c90:	2701      	movs	r7, #1
 c92:	e69e      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 c94:	2701      	movs	r7, #1
 c96:	e69c      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 c98:	2701      	movs	r7, #1
 c9a:	e69a      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 c9c:	2701      	movs	r7, #1
 c9e:	e698      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 ca0:	2701      	movs	r7, #1
 ca2:	e696      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 ca4:	4647      	mov	r7, r8
 ca6:	e694      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 ca8:	4647      	mov	r7, r8
 caa:	e692      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 cac:	4647      	mov	r7, r8
 cae:	e690      	b.n	9d2 <.Ldebug_abbrev0+0x57>
 cb0:	4647      	mov	r7, r8
 cb2:	e68e      	b.n	9d2 <.Ldebug_abbrev0+0x57>

00000cb4 <Scope_Main_GetAddress>:
 cb4:	2000      	movs	r0, #0
 cb6:	4770      	bx	lr

Disassembly of section .dinit%21:

00000cb8 <.dinit>:
     cb8:	20007e24 	.word	0x20007e24
     cbc:	0000001c 	.word	0x0000001c
     cc0:	00000000 	.word	0x00000000
     cc4:	20007404 	.word	0x20007404
     cc8:	0000002c 	.word	0x0000002c
     ccc:	00000001 	.word	0x00000001
     cd0:	04830002 	.word	0x04830002
     cd4:	04410c9b 	.word	0x04410c9b
     cd8:	2180d503 	.word	0x2180d503
     cdc:	1acb01c9 	.word	0x1acb01c9
     ce0:	099bb29b 	.word	0x099bb29b
     ce4:	4904005b 	.word	0x4904005b
     ce8:	b2125e58 	.word	0xb2125e58
     cec:	db002a00 	.word	0xdb002a00
     cf0:	42404770 	.word	0x42404770
     cf4:	e7fbb200 	.word	0xe7fbb200
     cf8:	00002248 	.word	0x00002248
     cfc:	200073d0 	.word	0x200073d0
     d00:	00000034 	.word	0x00000034
     d04:	00000001 	.word	0x00000001
     d08:	01db2380 	.word	0x01db2380
     d0c:	4460469c 	.word	0x4460469c
     d10:	049ab283 	.word	0x049ab283
     d14:	04590c92 	.word	0x04590c92
     d18:	4661d502 	.word	0x4661d502
     d1c:	b2921a8a 	.word	0xb2921a8a
     d20:	00520992 	.word	0x00520992
     d24:	5e504904 	.word	0x5e504904
     d28:	2b00b21b 	.word	0x2b00b21b
     d2c:	4770db00 	.word	0x4770db00
     d30:	b2004240 	.word	0xb2004240
     d34:	46c0e7fb 	.word	0x46c0e7fb
     d38:	00002248 	.word	0x00002248
     d3c:	20007458 	.word	0x20007458
     d40:	00000020 	.word	0x00000020
     d44:	00000001 	.word	0x00000001
     d48:	0004b570 	.word	0x0004b570
     d4c:	00288805 	.word	0x00288805
     d50:	47984b03 	.word	0x47984b03
     d54:	00288060 	.word	0x00288060
     d58:	47984b02 	.word	0x47984b02
     d5c:	bd7080a0 	.word	0xbd7080a0
     d60:	20007405 	.word	0x20007405
     d64:	200073d1 	.word	0x200073d1
     d68:	20007430 	.word	0x20007430
     d6c:	00000028 	.word	0x00000028
     d70:	00000001 	.word	0x00000001
     d74:	2300b510 	.word	0x2300b510
     d78:	800a5ec2 	.word	0x800a5ec2
     d7c:	5ec42302 	.word	0x5ec42302
     d80:	43634b05 	.word	0x43634b05
     d84:	2400139b 	.word	0x2400139b
     d88:	1a1b5f00 	.word	0x1a1b5f00
     d8c:	804b105b 	.word	0x804b105b
     d90:	425b18d3 	.word	0x425b18d3
     d94:	bd10808b 	.word	0xbd10808b
     d98:	00006eda 	.word	0x00006eda
     d9c:	20007398 	.word	0x20007398
     da0:	00000038 	.word	0x00000038
     da4:	00000001 	.word	0x00000001
     da8:	2300b570 	.word	0x2300b570
     dac:	25045ecc 	.word	0x25045ecc
     db0:	435c5f43 	.word	0x435c5f43
     db4:	5ecd2302 	.word	0x5ecd2302
     db8:	5f832602 	.word	0x5f832602
     dbc:	1ae3436b 	.word	0x1ae3436b
     dc0:	8013139b 	.word	0x8013139b
     dc4:	5ecc2300 	.word	0x5ecc2300
     dc8:	5f432502 	.word	0x5f432502
     dcc:	2302435c 	.word	0x2302435c
     dd0:	23045ec9 	.word	0x23045ec9
     dd4:	434b5ec3 	.word	0x434b5ec3
     dd8:	139b191b 	.word	0x139b191b
     ddc:	bd708053 	.word	0xbd708053
     de0:	20007328 	.word	0x20007328
     de4:	00000070 	.word	0x00000070
     de8:	00000001 	.word	0x00000001
     dec:	4b19b530 	.word	0x4b19b530
     df0:	5e992200 	.word	0x5e992200
     df4:	5e9a2202 	.word	0x5e9a2202
     df8:	dc224291 	.word	0xdc224291
     dfc:	20044b15 	.word	0x20044b15
     e00:	00085e1b 	.word	0x00085e1b
     e04:	dd004299 	.word	0xdd004299
     e08:	00140018 	.word	0x00140018
     e0c:	da1f4291 	.word	0xda1f4291
     e10:	da00429c 	.word	0xda00429c
     e14:	1824001c 	.word	0x1824001c
     e18:	480f1064 	.word	0x480f1064
     e1c:	10491b09 	.word	0x10491b09
     e20:	00ad2596 	.word	0x00ad2596
     e24:	446146ac 	.word	0x446146ac
     e28:	6001b289 	.word	0x6001b289
     e2c:	10521b12 	.word	0x10521b12
     e30:	b2924462 	.word	0xb2924462
     e34:	1b1b6042 	.word	0x1b1b6042
     e38:	4463105b 	.word	0x4463105b
     e3c:	6083b29b 	.word	0x6083b29b
     e40:	4b04bd30 	.word	0x4b04bd30
     e44:	5e1b2004 	.word	0x5e1b2004
     e48:	429a0010 	.word	0x429a0010
     e4c:	0018dd00 	.word	0x0018dd00
     e50:	e7dd000c 	.word	0xe7dd000c
     e54:	20007dfc 	.word	0x20007dfc
     e58:	20007e14 	.word	0x20007e14
     e5c:	20007000 	.word	0x20007000
     e60:	00000328 	.word	0x00000328
     e64:	00000001 	.word	0x00000001
     e68:	4ba7b570 	.word	0x4ba7b570
     e6c:	48a78819 	.word	0x48a78819
     e70:	00538802 	.word	0x00538802
     e74:	008b189a 	.word	0x008b189a
     e78:	189b185b 	.word	0x189b185b
     e7c:	b29a10db 	.word	0xb29a10db
     e80:	48a38002 	.word	0x48a38002
     e84:	d8334282 	.word	0xd8334282
     e88:	48a22400 	.word	0x48a22400
     e8c:	20807004 	.word	0x20807004
     e90:	42820100 	.word	0x42820100
     e94:	041bd833 	.word	0x041bd833
     e98:	1ac20c1b 	.word	0x1ac20c1b
     e9c:	00db23e1 	.word	0x00db23e1
     ea0:	12db4353 	.word	0x12db4353
     ea4:	80134a9c 	.word	0x80134a9c
     ea8:	00db23e1 	.word	0x00db23e1
     eac:	88124a9a 	.word	0x88124a9a
     eb0:	d902429a 	.word	0xd902429a
     eb4:	4b98001a 	.word	0x4b98001a
     eb8:	4b96801a 	.word	0x4b96801a
     ebc:	4b97781d 	.word	0x4b97781d
     ec0:	42ab781b 	.word	0x42ab781b
     ec4:	4b96d02b 	.word	0x4b96d02b
     ec8:	2b00781b 	.word	0x2b00781b
     ecc:	2201d127 	.word	0x2201d127
     ed0:	701a4b94 	.word	0x701a4b94
     ed4:	24004b94 	.word	0x24004b94
     ed8:	2c005f1c 	.word	0x2c005f1c
     edc:	4b93d038 	.word	0x4b93d038
     ee0:	2b00781b 	.word	0x2b00781b
     ee4:	e0cbd100 	.word	0xe0cbd100
     ee8:	4b912200 	.word	0x4b912200
     eec:	e0c7801a 	.word	0xe0c7801a
     ef0:	42824890 	.word	0x42824890
     ef4:	2408d9cb 	.word	0x2408d9cb
     ef8:	70044886 	.word	0x70044886
     efc:	2280e7c7 	.word	0x2280e7c7
     f00:	42910112 	.word	0x42910112
     f04:	041bd9d0 	.word	0x041bd9d0
     f08:	4a8b0c1b 	.word	0x4a8b0c1b
     f0c:	44634694 	.word	0x44634694
     f10:	00d222e1 	.word	0x00d222e1
     f14:	12db4353 	.word	0x12db4353
     f18:	80134a7f 	.word	0x80134a7f
     f1c:	4b82e7c4 	.word	0x4b82e7c4
     f20:	5f1c2400 	.word	0x5f1c2400
     f24:	d0002c00 	.word	0xd0002c00
     f28:	4b7ee095 	.word	0x4b7ee095
     f2c:	2b01781b 	.word	0x2b01781b
     f30:	4b7ed00e 	.word	0x4b7ed00e
     f34:	2b00781b 	.word	0x2b00781b
     f38:	e090d000 	.word	0xe090d000
     f3c:	4b782201 	.word	0x4b782201
     f40:	4b7b701a 	.word	0x4b7b701a
     f44:	1e19881b 	.word	0x1e19881b
     f48:	e0b8dc00 	.word	0xe0b8dc00
     f4c:	e09c2400 	.word	0xe09c2400
     f50:	4a742300 	.word	0x4a742300
     f54:	4a717013 	.word	0x4a717013
     f58:	4a787015 	.word	0x4a787015
     f5c:	4b738013 	.word	0x4b738013
     f60:	2b00781b 	.word	0x2b00781b
     f64:	2400d0ea 	.word	0x2400d0ea
     f68:	2000e07e 	.word	0x2000e07e
     f6c:	70104a74 	.word	0x70104a74
     f70:	88124a74 	.word	0x88124a74
     f74:	b2241914 	.word	0xb2241914
     f78:	dc02428c 	.word	0xdc02428c
     f7c:	801c4b6a 	.word	0x801c4b6a
     f80:	4a69e098 	.word	0x4a69e098
     f84:	e0888013 	.word	0xe0888013
     f88:	486f2400 	.word	0x486f2400
     f8c:	486f7004 	.word	0x486f7004
     f90:	1a128800 	.word	0x1a128800
     f94:	428ab212 	.word	0x428ab212
     f98:	4b63db02 	.word	0x4b63db02
     f9c:	e089801a 	.word	0xe089801a
     fa0:	80134a61 	.word	0x80134a61
     fa4:	4c60e086 	.word	0x4c60e086
     fa8:	5ea32200 	.word	0x5ea32200
     fac:	014020e1 	.word	0x014020e1
     fb0:	49674358 	.word	0x49674358
     fb4:	47984b67 	.word	0x47984b67
     fb8:	4a67b283 	.word	0x4a67b283
     fbc:	485f8013 	.word	0x485f8013
     fc0:	189b8802 	.word	0x189b8802
     fc4:	4b658003 	.word	0x4b658003
     fc8:	22004798 	.word	0x22004798
     fcc:	24965ea3 	.word	0x24965ea3
     fd0:	435c0064 	.word	0x435c0064
     fd4:	00200b24 	.word	0x00200b24
     fd8:	47984b61 	.word	0x47984b61
     fdc:	4b624961 	.word	0x4b624961
     fe0:	28004798 	.word	0x28004798
     fe4:	4b61d023 	.word	0x4b61d023
     fe8:	801a2200 	.word	0x801a2200
     fec:	805a326c 	.word	0x805a326c
     ff0:	00224c5f 	.word	0x00224c5f
     ff4:	4851495d 	.word	0x4851495d
     ff8:	47984b5e 	.word	0x47984b5e
     ffc:	0020495e 	.word	0x0020495e
    1000:	47984b5e 	.word	0x47984b5e
    1004:	47984b5e 	.word	0x47984b5e
    1008:	781b4b44 	.word	0x781b4b44
    100c:	d0132b08 	.word	0xd0132b08
    1010:	680b495c 	.word	0x680b495c
    1014:	0a1b021b 	.word	0x0a1b021b
    1018:	67134a5b 	.word	0x67134a5b
    101c:	021b688b 	.word	0x021b688b
    1020:	67530a1b 	.word	0x67530a1b
    1024:	021b684b 	.word	0x021b684b
    1028:	67930a1b 	.word	0x67930a1b
    102c:	4b4fe06b 	.word	0x4b4fe06b
    1030:	801a2200 	.word	0x801a2200
    1034:	e7db805c 	.word	0xe7db805c
    1038:	680b4952 	.word	0x680b4952
    103c:	0a1b021b 	.word	0x0a1b021b
    1040:	67134a51 	.word	0x67134a51
    1044:	021b684b 	.word	0x021b684b
    1048:	67530a1b 	.word	0x67530a1b
    104c:	021b688b 	.word	0x021b688b
    1050:	67930a1b 	.word	0x67930a1b
    1054:	4b35e057 	.word	0x4b35e057
    1058:	2b00781b 	.word	0x2b00781b
    105c:	4b31d010 	.word	0x4b31d010
    1060:	2b00781b 	.word	0x2b00781b
    1064:	e73fd000 	.word	0xe73fd000
    1068:	20004b2b 	.word	0x20004b2b
    106c:	4b475e18 	.word	0x4b475e18
    1070:	03808018 	.word	0x03808018
    1074:	00c921e1 	.word	0x00c921e1
    1078:	47984b36 	.word	0x47984b36
    107c:	80184b2c 	.word	0x80184b2c
    1080:	881b4b2b 	.word	0x881b4b2b
    1084:	42a30019 	.word	0x42a30019
    1088:	4a2ddd07 	.word	0x4a2ddd07
    108c:	2a017812 	.word	0x2a017812
    1090:	e76ad100 	.word	0xe76ad100
    1094:	482a3201 	.word	0x482a3201
    1098:	4a237002 	.word	0x4a237002
    109c:	5e122000 	.word	0x5e122000
    10a0:	dd07428a 	.word	0xdd07428a
    10a4:	78004828 	.word	0x78004828
    10a8:	d1002801 	.word	0xd1002801
    10ac:	3001e76c 	.word	0x3001e76c
    10b0:	70184b25 	.word	0x70184b25
    10b4:	781b4b1a 	.word	0x781b4b1a
    10b8:	d1002b00 	.word	0xd1002b00
    10bc:	4a2ee773 	.word	0x4a2ee773
    10c0:	80132300 	.word	0x80132300
    10c4:	80938053 	.word	0x80938053
    10c8:	2296492e 	.word	0x2296492e
    10cc:	600a00d2 	.word	0x600a00d2
    10d0:	608a604a 	.word	0x608a604a
    10d4:	670a492c 	.word	0x670a492c
    10d8:	678a674a 	.word	0x678a674a
    10dc:	80134a17 	.word	0x80134a17
    10e0:	21808053 	.word	0x21808053
    10e4:	809101c9 	.word	0x809101c9
    10e8:	80134a20 	.word	0x80134a20
    10ec:	4a208053 	.word	0x4a208053
    10f0:	80538013 	.word	0x80538013
    10f4:	80134a18 	.word	0x80134a18
    10f8:	80134a0b 	.word	0x80134a0b
    10fc:	701d4b07 	.word	0x701d4b07
    1100:	22004b08 	.word	0x22004b08
    1104:	bd70701a 	.word	0xbd70701a
    1108:	20000014 	.word	0x20000014
    110c:	20000008 	.word	0x20000008
    1110:	0000076a 	.word	0x0000076a
    1114:	20000000 	.word	0x20000000
    1118:	20007ffc 	.word	0x20007ffc
    111c:	20007eb2 	.word	0x20007eb2
    1120:	20000010 	.word	0x20000010
    1124:	2000000a 	.word	0x2000000a
    1128:	20000012 	.word	0x20000012
    112c:	2000000b 	.word	0x2000000b
    1130:	20000006 	.word	0x20000006
    1134:	00000896 	.word	0x00000896
    1138:	fffff800 	.word	0xfffff800
    113c:	20007df0 	.word	0x20007df0
    1140:	20007fff 	.word	0x20007fff
    1144:	20000004 	.word	0x20000004
    1148:	20007ffe 	.word	0x20007ffe
    114c:	2000000e 	.word	0x2000000e
    1150:	000927c0 	.word	0x000927c0
    1154:	00003461 	.word	0x00003461
    1158:	20000002 	.word	0x20000002
    115c:	20007459 	.word	0x20007459
    1160:	00002acd 	.word	0x00002acd
    1164:	42d80001 	.word	0x42d80001
    1168:	00002d71 	.word	0x00002d71
    116c:	20007de0 	.word	0x20007de0
    1170:	20007de8 	.word	0x20007de8
    1174:	20007399 	.word	0x20007399
    1178:	20007dfc 	.word	0x20007dfc
    117c:	20007431 	.word	0x20007431
    1180:	20007329 	.word	0x20007329
    1184:	20007e14 	.word	0x20007e14
    1188:	42002400 	.word	0x42002400
    118c:	2000000c 	.word	0x2000000c
    1190:	20007fff 	.word	0x20007fff
    1194:	00000001 	.word	0x00000001
    1198:	00000000 	.word	0x00000000
    119c:	20007ffe 	.word	0x20007ffe
    11a0:	00000001 	.word	0x00000001
    11a4:	00000000 	.word	0x00000000
    11a8:	20007e14 	.word	0x20007e14
    11ac:	0000000c 	.word	0x0000000c
    11b0:	00000000 	.word	0x00000000
    11b4:	20007eb3 	.word	0x20007eb3
    11b8:	00000001 	.word	0x00000001
    11bc:	00000000 	.word	0x00000000
    11c0:	20007dfc 	.word	0x20007dfc
    11c4:	00000006 	.word	0x00000006
    11c8:	00000000 	.word	0x00000000
    11cc:	20007de8 	.word	0x20007de8
    11d0:	00000004 	.word	0x00000004
    11d4:	00000000 	.word	0x00000000
    11d8:	20007de0 	.word	0x20007de0
    11dc:	00000004 	.word	0x00000004
    11e0:	00000000 	.word	0x00000000
    11e4:	20007df0 	.word	0x20007df0
    11e8:	00000006 	.word	0x00000006
    11ec:	00000000 	.word	0x00000000
    11f0:	20000000 	.word	0x20000000
    11f4:	00000014 	.word	0x00000014
    11f8:	00000000 	.word	0x00000000
    11fc:	20007eb2 	.word	0x20007eb2
    1200:	00000001 	.word	0x00000001
    1204:	00000000 	.word	0x00000000
    1208:	20007ffc 	.word	0x20007ffc
    120c:	00000002 	.word	0x00000002
    1210:	00000000 	.word	0x00000000
    1214:	20007eb1 	.word	0x20007eb1
    1218:	00000001 	.word	0x00000001
    121c:	00000000 	.word	0x00000000
    1220:	20000014 	.word	0x20000014
    1224:	00000002 	.word	0x00000002
    1228:	00000000 	.word	0x00000000
    122c:	20000018 	.word	0x20000018
    1230:	00000008 	.word	0x00000008
    1234:	00000000 	.word	0x00000000
    1238:	20000020 	.word	0x20000020
    123c:	000000c0 	.word	0x000000c0
    1240:	00000000 	.word	0x00000000
    1244:	20007dd8 	.word	0x20007dd8
    1248:	00000004 	.word	0x00000004
    124c:	00000001 	.word	0x00000001
    1250:	200000e0 	.word	0x200000e0
    1254:	20007eb4 	.word	0x20007eb4
    1258:	00000148 	.word	0x00000148
    125c:	00000000 	.word	0x00000000
    1260:	200000e0 	.word	0x200000e0
    1264:	00000030 	.word	0x00000030
    1268:	00000000 	.word	0x00000000
    126c:	20007e08 	.word	0x20007e08
    1270:	00000008 	.word	0x00000008
    1274:	00000000 	.word	0x00000000
    1278:	20007e44 	.word	0x20007e44
    127c:	0000006c 	.word	0x0000006c
    1280:	00000000 	.word	0x00000000
    1284:	20000110 	.word	0x20000110
    1288:	00000078 	.word	0x00000078
    128c:	00000000 	.word	0x00000000
    1290:	20000188 	.word	0x20000188
    1294:	00002000 	.word	0x00002000
    1298:	00000000 	.word	0x00000000
    129c:	20002188 	.word	0x20002188
    12a0:	00000428 	.word	0x00000428
    12a4:	00000001 	.word	0x00000001
    12a8:	00000000 	.word	0x00000000
    12ac:	20002474 	.word	0x20002474
    12b0:	200024dc 	.word	0x200024dc
    12b4:	20002544 	.word	0x20002544
	...
    1350:	00000001 	.word	0x00000001
    1354:	00000000 	.word	0x00000000
    1358:	abcd330e 	.word	0xabcd330e
    135c:	e66d1234 	.word	0xe66d1234
    1360:	0005deec 	.word	0x0005deec
    1364:	0000000b 	.word	0x0000000b
	...

Disassembly of section .text%22:

000016d8 <sendSvNotAvailable>:
    16d8:	b510      	push	{r4, lr}
    16da:	2302      	movs	r3, #2
    16dc:	7203      	strb	r3, [r0, #8]
    16de:	331f      	adds	r3, #31
    16e0:	68c2      	ldr	r2, [r0, #12]
    16e2:	7053      	strb	r3, [r2, #1]
    16e4:	6843      	ldr	r3, [r0, #4]
    16e6:	4798      	blx	r3

000016e8 <.LVL1>:
    16e8:	bd10      	pop	{r4, pc}

000016ea <setTargetState>:
    16ea:	b510      	push	{r4, lr}
    16ec:	68c3      	ldr	r3, [r0, #12]
    16ee:	785b      	ldrb	r3, [r3, #1]
    16f0:	2b05      	cmp	r3, #5
    16f2:	d82c      	bhi.n	174e <.LLST4+0x35>
    16f4:	009a      	lsls	r2, r3, #2
    16f6:	4917      	ldr	r1, [pc, #92]	; (1754 <.LLST4+0x3b>)
    16f8:	588a      	ldr	r2, [r1, r2]
    16fa:	4697      	mov	pc, r2
    16fc:	4a16      	ldr	r2, [pc, #88]	; (1758 <.LLST4+0x3f>)
    16fe:	6812      	ldr	r2, [r2, #0]
    1700:	2100      	movs	r1, #0
    1702:	7311      	strb	r1, [r2, #12]
    1704:	68c2      	ldr	r2, [r0, #12]
    1706:	7053      	strb	r3, [r2, #1]
    1708:	2302      	movs	r3, #2
    170a:	7203      	strb	r3, [r0, #8]
    170c:	6843      	ldr	r3, [r0, #4]
    170e:	4798      	blx	r3

00001710 <.LVL7>:
    1710:	bd10      	pop	{r4, pc}
    1712:	4b11      	ldr	r3, [pc, #68]	; (1758 <.LLST4+0x3f>)
    1714:	681b      	ldr	r3, [r3, #0]
    1716:	2201      	movs	r2, #1
    1718:	731a      	strb	r2, [r3, #12]
    171a:	2300      	movs	r3, #0
    171c:	e7f2      	b.n	1704 <.LLST3+0x16>
    171e:	4b0e      	ldr	r3, [pc, #56]	; (1758 <.LLST4+0x3f>)
    1720:	681b      	ldr	r3, [r3, #0]
    1722:	2202      	movs	r2, #2
    1724:	731a      	strb	r2, [r3, #12]
    1726:	2300      	movs	r3, #0
    1728:	e7ec      	b.n	1704 <.LLST3+0x16>
    172a:	4b0b      	ldr	r3, [pc, #44]	; (1758 <.LLST4+0x3f>)
    172c:	681b      	ldr	r3, [r3, #0]
    172e:	2203      	movs	r2, #3
    1730:	731a      	strb	r2, [r3, #12]
    1732:	2300      	movs	r3, #0
    1734:	e7e6      	b.n	1704 <.LLST3+0x16>
    1736:	4b08      	ldr	r3, [pc, #32]	; (1758 <.LLST4+0x3f>)
    1738:	681b      	ldr	r3, [r3, #0]
    173a:	2204      	movs	r2, #4
    173c:	731a      	strb	r2, [r3, #12]
    173e:	2300      	movs	r3, #0
    1740:	e7e0      	b.n	1704 <.LLST3+0x16>
    1742:	4b05      	ldr	r3, [pc, #20]	; (1758 <.LLST4+0x3f>)
    1744:	681b      	ldr	r3, [r3, #0]
    1746:	2205      	movs	r2, #5
    1748:	731a      	strb	r2, [r3, #12]
    174a:	2300      	movs	r3, #0
    174c:	e7da      	b.n	1704 <.LLST3+0x16>
    174e:	2322      	movs	r3, #34	; 0x22
    1750:	e7d8      	b.n	1704 <.LLST3+0x16>
    1752:	46c0      	nop			; (mov r8, r8)
    1754:	000036dc 	.word	0x000036dc
    1758:	20007dd8 	.word	0x20007dd8

0000175c <getTargetState>:
    175c:	b510      	push	{r4, lr}
    175e:	2300      	movs	r3, #0
    1760:	68c2      	ldr	r2, [r0, #12]
    1762:	7053      	strb	r3, [r2, #1]
    1764:	4b04      	ldr	r3, [pc, #16]	; (1778 <.LVL10+0x2>)
    1766:	681b      	ldr	r3, [r3, #0]
    1768:	7b1b      	ldrb	r3, [r3, #12]
    176a:	68c2      	ldr	r2, [r0, #12]
    176c:	7093      	strb	r3, [r2, #2]
    176e:	2303      	movs	r3, #3
    1770:	7203      	strb	r3, [r0, #8]
    1772:	6843      	ldr	r3, [r0, #4]
    1774:	4798      	blx	r3

00001776 <.LVL10>:
    1776:	bd10      	pop	{r4, pc}
    1778:	20007dd8 	.word	0x20007dd8

0000177c <getBlockAddress>:
    177c:	b530      	push	{r4, r5, lr}
    177e:	2800      	cmp	r0, #0
    1780:	d012      	beq.n	17a8 <.Ldebug_line0+0x28>
    1782:	8804      	ldrh	r4, [r0, #0]
    1784:	42a1      	cmp	r1, r4
    1786:	d013      	beq.n	17b0 <.Ldebug_line0+0x30>
    1788:	2300      	movs	r3, #0
    178a:	2c00      	cmp	r4, #0
    178c:	d008      	beq.n	17a0 <.Ldebug_line0+0x20>
    178e:	3301      	adds	r3, #1
    1790:	b29b      	uxth	r3, r3
    1792:	00dc      	lsls	r4, r3, #3
    1794:	1904      	adds	r4, r0, r4
    1796:	8825      	ldrh	r5, [r4, #0]
    1798:	428d      	cmp	r5, r1
    179a:	d00a      	beq.n	17b2 <.Ldebug_line0+0x32>
    179c:	2d00      	cmp	r5, #0
    179e:	d1f6      	bne.n	178e <.Ldebug_line0+0xe>
    17a0:	2340      	movs	r3, #64	; 0x40
    17a2:	7013      	strb	r3, [r2, #0]
    17a4:	2000      	movs	r0, #0
    17a6:	e009      	b.n	17bc <.Ldebug_line0+0x3c>
    17a8:	2343      	movs	r3, #67	; 0x43
    17aa:	7013      	strb	r3, [r2, #0]
    17ac:	2000      	movs	r0, #0
    17ae:	e005      	b.n	17bc <.Ldebug_line0+0x3c>
    17b0:	0004      	movs	r4, r0
    17b2:	2900      	cmp	r1, #0
    17b4:	d0f4      	beq.n	17a0 <.Ldebug_line0+0x20>
    17b6:	6860      	ldr	r0, [r4, #4]
    17b8:	2300      	movs	r3, #0
    17ba:	7013      	strb	r3, [r2, #0]
    17bc:	bd30      	pop	{r4, r5, pc}

000017be <sendError>:
    17be:	b510      	push	{r4, lr}
    17c0:	2302      	movs	r3, #2
    17c2:	7203      	strb	r3, [r0, #8]
    17c4:	68c3      	ldr	r3, [r0, #12]
    17c6:	7059      	strb	r1, [r3, #1]
    17c8:	6843      	ldr	r3, [r0, #4]
    17ca:	4798      	blx	r3

000017cc <.LVL25>:
    17cc:	bd10      	pop	{r4, pc}

000017ce <loadParameter>:
    17ce:	b5f0      	push	{r4, r5, r6, r7, lr}
    17d0:	b083      	sub	sp, #12
    17d2:	0004      	movs	r4, r0
    17d4:	68c2      	ldr	r2, [r0, #12]
    17d6:	4b29      	ldr	r3, [pc, #164]	; (187c <.LVL48+0x2>)
    17d8:	681b      	ldr	r3, [r3, #0]
    17da:	6818      	ldr	r0, [r3, #0]
    17dc:	466b      	mov	r3, sp
    17de:	1ddd      	adds	r5, r3, #7
    17e0:	7893      	ldrb	r3, [r2, #2]
    17e2:	021b      	lsls	r3, r3, #8
    17e4:	7851      	ldrb	r1, [r2, #1]
    17e6:	18c9      	adds	r1, r1, r3
    17e8:	b289      	uxth	r1, r1
    17ea:	002a      	movs	r2, r5
    17ec:	f7ff ffc6 	bl	177c <getBlockAddress>

000017f0 <.LVL30>:
    17f0:	7829      	ldrb	r1, [r5, #0]
    17f2:	2900      	cmp	r1, #0
    17f4:	d126      	bne.n	1844 <.LVL37+0x4>
    17f6:	4b21      	ldr	r3, [pc, #132]	; (187c <.LVL48+0x2>)
    17f8:	6819      	ldr	r1, [r3, #0]
    17fa:	684b      	ldr	r3, [r1, #4]
    17fc:	2b00      	cmp	r3, #0
    17fe:	d025      	beq.n	184c <.LVL41+0x2>
    1800:	8807      	ldrh	r7, [r0, #0]
    1802:	684b      	ldr	r3, [r1, #4]
    1804:	881b      	ldrh	r3, [r3, #0]
    1806:	42bb      	cmp	r3, r7
    1808:	d025      	beq.n	1856 <.LVL44+0x2>
    180a:	684b      	ldr	r3, [r1, #4]
    180c:	881b      	ldrh	r3, [r3, #0]
    180e:	2b00      	cmp	r3, #0
    1810:	d023      	beq.n	185a <.LVL44+0x6>
    1812:	2200      	movs	r2, #0
    1814:	3201      	adds	r2, #1
    1816:	b292      	uxth	r2, r2
    1818:	684d      	ldr	r5, [r1, #4]
    181a:	0053      	lsls	r3, r2, #1
    181c:	189b      	adds	r3, r3, r2
    181e:	00db      	lsls	r3, r3, #3
    1820:	001e      	movs	r6, r3
    1822:	5aed      	ldrh	r5, [r5, r3]
    1824:	42bd      	cmp	r5, r7
    1826:	d003      	beq.n	1830 <.LLST4>
    1828:	684d      	ldr	r5, [r1, #4]
    182a:	5aeb      	ldrh	r3, [r5, r3]
    182c:	2b00      	cmp	r3, #0
    182e:	d1f1      	bne.n	1814 <.LLST3+0x5>
    1830:	684b      	ldr	r3, [r1, #4]
    1832:	5b9b      	ldrh	r3, [r3, r6]
    1834:	2b00      	cmp	r3, #0
    1836:	d112      	bne.n	185e <.LVL44+0xa>
    1838:	2141      	movs	r1, #65	; 0x41
    183a:	0020      	movs	r0, r4
    183c:	f7ff ffbf 	bl	17be <sendError>

00001840 <.LVL37>:
    1840:	b003      	add	sp, #12
    1842:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1844:	0020      	movs	r0, r4
    1846:	f7ff ffba 	bl	17be <sendError>

0000184a <.LVL41>:
    184a:	e7f9      	b.n	1840 <.LVL37>
    184c:	2144      	movs	r1, #68	; 0x44
    184e:	0020      	movs	r0, r4
    1850:	f7ff ffb5 	bl	17be <sendError>

00001854 <.LVL44>:
    1854:	e7f4      	b.n	1840 <.LVL37>
    1856:	2600      	movs	r6, #0
    1858:	e7ea      	b.n	1830 <.LLST4>
    185a:	2600      	movs	r6, #0
    185c:	e7e8      	b.n	1830 <.LLST4>
    185e:	684b      	ldr	r3, [r1, #4]
    1860:	68e2      	ldr	r2, [r4, #12]
    1862:	1c91      	adds	r1, r2, #2
    1864:	199e      	adds	r6, r3, r6
    1866:	68f3      	ldr	r3, [r6, #12]
    1868:	4798      	blx	r3
    186a:	3002      	adds	r0, #2
    186c:	7220      	strb	r0, [r4, #8]
    186e:	2300      	movs	r3, #0
    1870:	68e2      	ldr	r2, [r4, #12]
    1872:	7053      	strb	r3, [r2, #1]
    1874:	6863      	ldr	r3, [r4, #4]
    1876:	0020      	movs	r0, r4
    1878:	4798      	blx	r3

0000187a <.LVL48>:
    187a:	e7e1      	b.n	1840 <.LVL37>
    187c:	20007dd8 	.word	0x20007dd8

00001880 <saveParameter>:
    1880:	b5f0      	push	{r4, r5, r6, r7, lr}
    1882:	b083      	sub	sp, #12
    1884:	0004      	movs	r4, r0
    1886:	68c2      	ldr	r2, [r0, #12]
    1888:	7893      	ldrb	r3, [r2, #2]
    188a:	021b      	lsls	r3, r3, #8
    188c:	7856      	ldrb	r6, [r2, #1]
    188e:	18f6      	adds	r6, r6, r3
    1890:	b2b6      	uxth	r6, r6
    1892:	4b44      	ldr	r3, [pc, #272]	; (19a4 <.LVL83+0x4>)
    1894:	681b      	ldr	r3, [r3, #0]
    1896:	6818      	ldr	r0, [r3, #0]
    1898:	466b      	mov	r3, sp
    189a:	1ddd      	adds	r5, r3, #7
    189c:	002a      	movs	r2, r5
    189e:	0031      	movs	r1, r6
    18a0:	f7ff ff6c 	bl	177c <getBlockAddress>

000018a4 <.LVL52>:
    18a4:	7829      	ldrb	r1, [r5, #0]
    18a6:	2900      	cmp	r1, #0
    18a8:	d140      	bne.n	192c <.LVL64+0x2>
    18aa:	4b3e      	ldr	r3, [pc, #248]	; (19a4 <.LVL83+0x4>)
    18ac:	6819      	ldr	r1, [r3, #0]
    18ae:	688b      	ldr	r3, [r1, #8]
    18b0:	2b00      	cmp	r3, #0
    18b2:	d017      	beq.n	18e4 <.LLST1+0x10>
    18b4:	688b      	ldr	r3, [r1, #8]
    18b6:	881b      	ldrh	r3, [r3, #0]
    18b8:	42b3      	cmp	r3, r6
    18ba:	d03c      	beq.n	1936 <.LLST1+0x1>
    18bc:	688b      	ldr	r3, [r1, #8]
    18be:	881b      	ldrh	r3, [r3, #0]
    18c0:	2b00      	cmp	r3, #0
    18c2:	d03a      	beq.n	193a <.LLST1+0x5>
    18c4:	2300      	movs	r3, #0
    18c6:	3301      	adds	r3, #1
    18c8:	b29b      	uxth	r3, r3
    18ca:	688a      	ldr	r2, [r1, #8]
    18cc:	00dd      	lsls	r5, r3, #3
    18ce:	5b52      	ldrh	r2, [r2, r5]
    18d0:	42b2      	cmp	r2, r6
    18d2:	d003      	beq.n	18dc <.LLST1+0x8>
    18d4:	688a      	ldr	r2, [r1, #8]
    18d6:	5b52      	ldrh	r2, [r2, r5]
    18d8:	2a00      	cmp	r2, #0
    18da:	d1f4      	bne.n	18c6 <.LLST0+0x12>
    18dc:	688b      	ldr	r3, [r1, #8]
    18de:	5b5b      	ldrh	r3, [r3, r5]
    18e0:	2b00      	cmp	r3, #0
    18e2:	d12c      	bne.n	193e <.LLST1+0x9>
    18e4:	684b      	ldr	r3, [r1, #4]
    18e6:	2b00      	cmp	r3, #0
    18e8:	d039      	beq.n	195e <.LVL72+0x2>
    18ea:	8807      	ldrh	r7, [r0, #0]
    18ec:	684b      	ldr	r3, [r1, #4]
    18ee:	881b      	ldrh	r3, [r3, #0]
    18f0:	42bb      	cmp	r3, r7
    18f2:	d039      	beq.n	1968 <.LVL75+0x2>
    18f4:	684b      	ldr	r3, [r1, #4]
    18f6:	881b      	ldrh	r3, [r3, #0]
    18f8:	2b00      	cmp	r3, #0
    18fa:	d037      	beq.n	196c <.LVL75+0x6>
    18fc:	2200      	movs	r2, #0
    18fe:	3201      	adds	r2, #1
    1900:	b292      	uxth	r2, r2
    1902:	684d      	ldr	r5, [r1, #4]
    1904:	0053      	lsls	r3, r2, #1
    1906:	189b      	adds	r3, r3, r2
    1908:	00db      	lsls	r3, r3, #3
    190a:	001e      	movs	r6, r3
    190c:	5aed      	ldrh	r5, [r5, r3]
    190e:	42bd      	cmp	r5, r7
    1910:	d003      	beq.n	191a <.LLST0+0x5>
    1912:	684d      	ldr	r5, [r1, #4]
    1914:	5aeb      	ldrh	r3, [r5, r3]
    1916:	2b00      	cmp	r3, #0
    1918:	d1f1      	bne.n	18fe <.LLST2+0x9>
    191a:	684b      	ldr	r3, [r1, #4]
    191c:	5b9b      	ldrh	r3, [r3, r6]
    191e:	2b00      	cmp	r3, #0
    1920:	d126      	bne.n	1970 <.LVL75+0xa>
    1922:	2141      	movs	r1, #65	; 0x41
    1924:	0020      	movs	r0, r4
    1926:	f7ff ff4a 	bl	17be <sendError>

0000192a <.LVL64>:
    192a:	e002      	b.n	1932 <.LVL67>
    192c:	0020      	movs	r0, r4
    192e:	f7ff ff46 	bl	17be <sendError>

00001932 <.LVL67>:
    1932:	b003      	add	sp, #12
    1934:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1936:	2500      	movs	r5, #0
    1938:	e7d0      	b.n	18dc <.LLST1+0x8>
    193a:	2500      	movs	r5, #0
    193c:	e7ce      	b.n	18dc <.LLST1+0x8>
    193e:	688b      	ldr	r3, [r1, #8]
    1940:	7a22      	ldrb	r2, [r4, #8]
    1942:	3a03      	subs	r2, #3
    1944:	b2d2      	uxtb	r2, r2
    1946:	68e1      	ldr	r1, [r4, #12]
    1948:	3103      	adds	r1, #3
    194a:	195d      	adds	r5, r3, r5
    194c:	686b      	ldr	r3, [r5, #4]
    194e:	4798      	blx	r3
    1950:	2800      	cmp	r0, #0
    1952:	d0ee      	beq.n	1932 <.LVL67>
    1954:	2142      	movs	r1, #66	; 0x42
    1956:	0020      	movs	r0, r4
    1958:	f7ff ff31 	bl	17be <sendError>

0000195c <.LVL72>:
    195c:	e7e9      	b.n	1932 <.LVL67>
    195e:	2144      	movs	r1, #68	; 0x44
    1960:	0020      	movs	r0, r4
    1962:	f7ff ff2c 	bl	17be <sendError>

00001966 <.LVL75>:
    1966:	e7e4      	b.n	1932 <.LVL67>
    1968:	2600      	movs	r6, #0
    196a:	e7d6      	b.n	191a <.LLST0+0x5>
    196c:	2600      	movs	r6, #0
    196e:	e7d4      	b.n	191a <.LLST0+0x5>
    1970:	684b      	ldr	r3, [r1, #4]
    1972:	7a22      	ldrb	r2, [r4, #8]
    1974:	3a03      	subs	r2, #3
    1976:	b2d2      	uxtb	r2, r2
    1978:	68e1      	ldr	r1, [r4, #12]
    197a:	3103      	adds	r1, #3
    197c:	199e      	adds	r6, r3, r6
    197e:	6933      	ldr	r3, [r6, #16]
    1980:	4798      	blx	r3
    1982:	2800      	cmp	r0, #0
    1984:	d004      	beq.n	1990 <.LVL82+0x2>
    1986:	2114      	movs	r1, #20
    1988:	0020      	movs	r0, r4
    198a:	f7ff ff18 	bl	17be <sendError>

0000198e <.LVL82>:
    198e:	e7d0      	b.n	1932 <.LVL67>
    1990:	2302      	movs	r3, #2
    1992:	7223      	strb	r3, [r4, #8]
    1994:	2300      	movs	r3, #0
    1996:	68e2      	ldr	r2, [r4, #12]
    1998:	7053      	strb	r3, [r2, #1]
    199a:	6863      	ldr	r3, [r4, #4]
    199c:	0020      	movs	r0, r4
    199e:	4798      	blx	r3

000019a0 <.LVL83>:
    19a0:	e7c7      	b.n	1932 <.LVL67>
    19a2:	46c0      	nop			; (mov r8, r8)
    19a4:	20007dd8 	.word	0x20007dd8

000019a8 <getDeviceInfo>:
    19a8:	b510      	push	{r4, lr}
    19aa:	7a43      	ldrb	r3, [r0, #9]
    19ac:	2b2d      	cmp	r3, #45	; 0x2d
    19ae:	d800      	bhi.n	19b2 <getDeviceInfo+0xa>
    19b0:	e0ae      	b.n	1b10 <.LVL87+0x2>
    19b2:	232e      	movs	r3, #46	; 0x2e
    19b4:	7203      	strb	r3, [r0, #8]
    19b6:	2300      	movs	r3, #0
    19b8:	68c2      	ldr	r2, [r0, #12]
    19ba:	7053      	strb	r3, [r2, #1]
    19bc:	2205      	movs	r2, #5
    19be:	68c1      	ldr	r1, [r0, #12]
    19c0:	708a      	strb	r2, [r1, #2]
    19c2:	68c2      	ldr	r2, [r0, #12]
    19c4:	70d3      	strb	r3, [r2, #3]
    19c6:	4b58      	ldr	r3, [pc, #352]	; (1b28 <.LLST0+0x6>)
    19c8:	681b      	ldr	r3, [r3, #0]
    19ca:	8c1a      	ldrh	r2, [r3, #32]
    19cc:	68c1      	ldr	r1, [r0, #12]
    19ce:	710a      	strb	r2, [r1, #4]
    19d0:	8c1a      	ldrh	r2, [r3, #32]
    19d2:	0a12      	lsrs	r2, r2, #8
    19d4:	68c1      	ldr	r1, [r0, #12]
    19d6:	714a      	strb	r2, [r1, #5]
    19d8:	7a42      	ldrb	r2, [r0, #9]
    19da:	68c1      	ldr	r1, [r0, #12]
    19dc:	718a      	strb	r2, [r1, #6]
    19de:	2220      	movs	r2, #32
    19e0:	68c1      	ldr	r1, [r0, #12]
    19e2:	71ca      	strb	r2, [r1, #7]
    19e4:	2182      	movs	r1, #130	; 0x82
    19e6:	68c4      	ldr	r4, [r0, #12]
    19e8:	7221      	strb	r1, [r4, #8]
    19ea:	3938      	subs	r1, #56	; 0x38
    19ec:	68c4      	ldr	r4, [r0, #12]
    19ee:	7261      	strb	r1, [r4, #9]
    19f0:	3117      	adds	r1, #23
    19f2:	68c4      	ldr	r4, [r0, #12]
    19f4:	72a1      	strb	r1, [r4, #10]
    19f6:	310d      	adds	r1, #13
    19f8:	68c4      	ldr	r4, [r0, #12]
    19fa:	72e1      	strb	r1, [r4, #11]
    19fc:	68c1      	ldr	r1, [r0, #12]
    19fe:	730a      	strb	r2, [r1, #12]
    1a00:	3213      	adds	r2, #19
    1a02:	68c1      	ldr	r1, [r0, #12]
    1a04:	734a      	strb	r2, [r1, #13]
    1a06:	3a01      	subs	r2, #1
    1a08:	68c1      	ldr	r1, [r0, #12]
    1a0a:	738a      	strb	r2, [r1, #14]
    1a0c:	3a02      	subs	r2, #2
    1a0e:	68c1      	ldr	r1, [r0, #12]
    1a10:	73ca      	strb	r2, [r1, #15]
    1a12:	2131      	movs	r1, #49	; 0x31
    1a14:	68c4      	ldr	r4, [r0, #12]
    1a16:	7421      	strb	r1, [r4, #16]
    1a18:	3108      	adds	r1, #8
    1a1a:	68c4      	ldr	r4, [r0, #12]
    1a1c:	7461      	strb	r1, [r4, #17]
    1a1e:	68c1      	ldr	r1, [r0, #12]
    1a20:	748a      	strb	r2, [r1, #18]
    1a22:	68c1      	ldr	r1, [r0, #12]
    1a24:	74ca      	strb	r2, [r1, #19]
    1a26:	3204      	adds	r2, #4
    1a28:	68c1      	ldr	r1, [r0, #12]
    1a2a:	750a      	strb	r2, [r1, #20]
    1a2c:	3204      	adds	r2, #4
    1a2e:	68c1      	ldr	r1, [r0, #12]
    1a30:	754a      	strb	r2, [r1, #21]
    1a32:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a34:	2a00      	cmp	r2, #0
    1a36:	d100      	bne.n	1a3a <.LLST0+0x1>
    1a38:	e06e      	b.n	1b18 <.LVL89+0x2>
    1a3a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a3c:	7812      	ldrb	r2, [r2, #0]
    1a3e:	68c1      	ldr	r1, [r0, #12]
    1a40:	758a      	strb	r2, [r1, #22]
    1a42:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a44:	7852      	ldrb	r2, [r2, #1]
    1a46:	68c1      	ldr	r1, [r0, #12]
    1a48:	75ca      	strb	r2, [r1, #23]
    1a4a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a4c:	7892      	ldrb	r2, [r2, #2]
    1a4e:	68c1      	ldr	r1, [r0, #12]
    1a50:	760a      	strb	r2, [r1, #24]
    1a52:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a54:	7912      	ldrb	r2, [r2, #4]
    1a56:	68c1      	ldr	r1, [r0, #12]
    1a58:	764a      	strb	r2, [r1, #25]
    1a5a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a5c:	7952      	ldrb	r2, [r2, #5]
    1a5e:	68c1      	ldr	r1, [r0, #12]
    1a60:	768a      	strb	r2, [r1, #26]
    1a62:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a64:	79d2      	ldrb	r2, [r2, #7]
    1a66:	68c1      	ldr	r1, [r0, #12]
    1a68:	76ca      	strb	r2, [r1, #27]
    1a6a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a6c:	7a12      	ldrb	r2, [r2, #8]
    1a6e:	68c1      	ldr	r1, [r0, #12]
    1a70:	770a      	strb	r2, [r1, #28]
    1a72:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a74:	7a52      	ldrb	r2, [r2, #9]
    1a76:	68c1      	ldr	r1, [r0, #12]
    1a78:	774a      	strb	r2, [r1, #29]
    1a7a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a7c:	7a92      	ldrb	r2, [r2, #10]
    1a7e:	68c1      	ldr	r1, [r0, #12]
    1a80:	778a      	strb	r2, [r1, #30]
    1a82:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a84:	7ad2      	ldrb	r2, [r2, #11]
    1a86:	68c1      	ldr	r1, [r0, #12]
    1a88:	77ca      	strb	r2, [r1, #31]
    1a8a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a8c:	7b11      	ldrb	r1, [r2, #12]
    1a8e:	2220      	movs	r2, #32
    1a90:	68c4      	ldr	r4, [r0, #12]
    1a92:	54a1      	strb	r1, [r4, r2]
    1a94:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    1a96:	7b91      	ldrb	r1, [r2, #14]
    1a98:	2221      	movs	r2, #33	; 0x21
    1a9a:	68c4      	ldr	r4, [r0, #12]
    1a9c:	54a1      	strb	r1, [r4, r2]
    1a9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    1aa0:	7bda      	ldrb	r2, [r3, #15]
    1aa2:	2322      	movs	r3, #34	; 0x22
    1aa4:	68c1      	ldr	r1, [r0, #12]
    1aa6:	54ca      	strb	r2, [r1, r3]
    1aa8:	4b1f      	ldr	r3, [pc, #124]	; (1b28 <.LLST0+0x6>)
    1aaa:	681b      	ldr	r3, [r3, #0]
    1aac:	7b19      	ldrb	r1, [r3, #12]
    1aae:	2223      	movs	r2, #35	; 0x23
    1ab0:	68c4      	ldr	r4, [r0, #12]
    1ab2:	54a1      	strb	r1, [r4, r2]
    1ab4:	89d9      	ldrh	r1, [r3, #14]
    1ab6:	3201      	adds	r2, #1
    1ab8:	68c4      	ldr	r4, [r0, #12]
    1aba:	54a1      	strb	r1, [r4, r2]
    1abc:	89da      	ldrh	r2, [r3, #14]
    1abe:	0a12      	lsrs	r2, r2, #8
    1ac0:	2125      	movs	r1, #37	; 0x25
    1ac2:	68c4      	ldr	r4, [r0, #12]
    1ac4:	5462      	strb	r2, [r4, r1]
    1ac6:	6919      	ldr	r1, [r3, #16]
    1ac8:	2226      	movs	r2, #38	; 0x26
    1aca:	68c4      	ldr	r4, [r0, #12]
    1acc:	54a1      	strb	r1, [r4, r2]
    1ace:	691a      	ldr	r2, [r3, #16]
    1ad0:	0a12      	lsrs	r2, r2, #8
    1ad2:	2127      	movs	r1, #39	; 0x27
    1ad4:	68c4      	ldr	r4, [r0, #12]
    1ad6:	5462      	strb	r2, [r4, r1]
    1ad8:	691a      	ldr	r2, [r3, #16]
    1ada:	0c12      	lsrs	r2, r2, #16
    1adc:	3101      	adds	r1, #1
    1ade:	68c4      	ldr	r4, [r0, #12]
    1ae0:	5462      	strb	r2, [r4, r1]
    1ae2:	691a      	ldr	r2, [r3, #16]
    1ae4:	0e12      	lsrs	r2, r2, #24
    1ae6:	3101      	adds	r1, #1
    1ae8:	68c4      	ldr	r4, [r0, #12]
    1aea:	5462      	strb	r2, [r4, r1]
    1aec:	222a      	movs	r2, #42	; 0x2a
    1aee:	68c1      	ldr	r1, [r0, #12]
    1af0:	548b      	strb	r3, [r1, r2]
    1af2:	0a19      	lsrs	r1, r3, #8
    1af4:	3201      	adds	r2, #1
    1af6:	68c4      	ldr	r4, [r0, #12]
    1af8:	54a1      	strb	r1, [r4, r2]
    1afa:	0c19      	lsrs	r1, r3, #16
    1afc:	3201      	adds	r2, #1
    1afe:	68c4      	ldr	r4, [r0, #12]
    1b00:	54a1      	strb	r1, [r4, r2]
    1b02:	0e1b      	lsrs	r3, r3, #24
    1b04:	3201      	adds	r2, #1
    1b06:	68c1      	ldr	r1, [r0, #12]
    1b08:	548b      	strb	r3, [r1, r2]
    1b0a:	6843      	ldr	r3, [r0, #4]
    1b0c:	4798      	blx	r3

00001b0e <.LVL87>:
    1b0e:	bd10      	pop	{r4, pc}
    1b10:	2115      	movs	r1, #21
    1b12:	f7ff fe54 	bl	17be <sendError>

00001b16 <.LVL89>:
    1b16:	e7fa      	b.n	1b0e <.LVL87>
    1b18:	2322      	movs	r3, #34	; 0x22
    1b1a:	322d      	adds	r2, #45	; 0x2d
    1b1c:	68c1      	ldr	r1, [r0, #12]
    1b1e:	54ca      	strb	r2, [r1, r3]
    1b20:	3b01      	subs	r3, #1
    1b22:	2b15      	cmp	r3, #21
    1b24:	d1fa      	bne.n	1b1c <.LVL89+0x6>
    1b26:	e7bf      	b.n	1aa8 <.LLST5+0xb>
    1b28:	20007dd8 	.word	0x20007dd8

00001b2c <initServiceTable>:
    1b2c:	4b04      	ldr	r3, [pc, #16]	; (1b40 <.Ldebug_abbrev0>)
    1b2e:	0019      	movs	r1, r3
    1b30:	316c      	adds	r1, #108	; 0x6c
    1b32:	4a04      	ldr	r2, [pc, #16]	; (1b44 <.LLST3+0x1>)
    1b34:	c304      	stmia	r3!, {r2}
    1b36:	428b      	cmp	r3, r1
    1b38:	d1fc      	bne.n	1b34 <initServiceTable+0x8>
    1b3a:	4b01      	ldr	r3, [pc, #4]	; (1b40 <.Ldebug_abbrev0>)
    1b3c:	6103      	str	r3, [r0, #16]
    1b3e:	4770      	bx	lr
    1b40:	20007e44 	.word	0x20007e44
    1b44:	000016d9 	.word	0x000016d9

00001b48 <addCoreServices>:
    1b48:	6903      	ldr	r3, [r0, #16]
    1b4a:	4a05      	ldr	r2, [pc, #20]	; (1b60 <addCoreServices+0x18>)
    1b4c:	601a      	str	r2, [r3, #0]
    1b4e:	4a05      	ldr	r2, [pc, #20]	; (1b64 <addCoreServices+0x1c>)
    1b50:	605a      	str	r2, [r3, #4]
    1b52:	4a05      	ldr	r2, [pc, #20]	; (1b68 <addCoreServices+0x20>)
    1b54:	609a      	str	r2, [r3, #8]
    1b56:	4a05      	ldr	r2, [pc, #20]	; (1b6c <addCoreServices+0x24>)
    1b58:	649a      	str	r2, [r3, #72]	; 0x48
    1b5a:	4a05      	ldr	r2, [pc, #20]	; (1b70 <.LLST4+0x1>)
    1b5c:	645a      	str	r2, [r3, #68]	; 0x44
    1b5e:	4770      	bx	lr
    1b60:	000019a9 	.word	0x000019a9
    1b64:	0000175d 	.word	0x0000175d
    1b68:	000016eb 	.word	0x000016eb
    1b6c:	00001881 	.word	0x00001881
    1b70:	000017cf 	.word	0x000017cf

00001b74 <enableSend>:
    1b74:	2301      	movs	r3, #1
    1b76:	76c3      	strb	r3, [r0, #27]
    1b78:	2300      	movs	r3, #0
    1b7a:	7683      	strb	r3, [r0, #26]
    1b7c:	4770      	bx	lr

00001b7e <checkFill>:
    1b7e:	2955      	cmp	r1, #85	; 0x55
    1b80:	d003      	beq.n	1b8a <checkFill+0xc>
    1b82:	2902      	cmp	r1, #2
    1b84:	d001      	beq.n	1b8a <checkFill+0xc>
    1b86:	7013      	strb	r3, [r2, #0]
    1b88:	4770      	bx	lr
    1b8a:	4803      	ldr	r0, [pc, #12]	; (1b98 <checkFill+0x1a>)
    1b8c:	7001      	strb	r1, [r0, #0]
    1b8e:	7043      	strb	r3, [r0, #1]
    1b90:	2304      	movs	r3, #4
    1b92:	7013      	strb	r3, [r2, #0]
    1b94:	e7f8      	b.n	1b88 <checkFill+0xa>
    1b96:	46c0      	nop			; (mov r8, r8)
    1b98:	20007e08 	.word	0x20007e08

00001b9c <communicate>:
    1b9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1b9e:	46de      	mov	lr, fp
    1ba0:	4657      	mov	r7, sl
    1ba2:	464e      	mov	r6, r9
    1ba4:	4645      	mov	r5, r8
    1ba6:	b5e0      	push	{r5, r6, r7, lr}
    1ba8:	0004      	movs	r4, r0

00001baa <.LBB17>:
    1baa:	2600      	movs	r6, #0
    1bac:	4da7      	ldr	r5, [pc, #668]	; (1e4c <.LLST7+0xd>)
    1bae:	e008      	b.n	1bc2 <.LVL8+0x4>
    1bb0:	2355      	movs	r3, #85	; 0x55
    1bb2:	7723      	strb	r3, [r4, #28]
    1bb4:	7766      	strb	r6, [r4, #29]
    1bb6:	6960      	ldr	r0, [r4, #20]
    1bb8:	6803      	ldr	r3, [r0, #0]
    1bba:	2155      	movs	r1, #85	; 0x55
    1bbc:	4798      	blx	r3

00001bbe <.LVL8>:
    1bbe:	2301      	movs	r3, #1
    1bc0:	76a3      	strb	r3, [r4, #26]
    1bc2:	7ee3      	ldrb	r3, [r4, #27]
    1bc4:	2b01      	cmp	r3, #1
    1bc6:	d16b      	bne.n	1ca0 <.LBE20+0xc>
    1bc8:	6960      	ldr	r0, [r4, #20]
    1bca:	68c3      	ldr	r3, [r0, #12]
    1bcc:	4798      	blx	r3
    1bce:	2800      	cmp	r0, #0
    1bd0:	d066      	beq.n	1ca0 <.LBE20+0xc>
    1bd2:	7ea3      	ldrb	r3, [r4, #26]
    1bd4:	2b05      	cmp	r3, #5
    1bd6:	d860      	bhi.n	1c9a <.LBE20+0x6>
    1bd8:	009b      	lsls	r3, r3, #2
    1bda:	58eb      	ldr	r3, [r5, r3]
    1bdc:	469f      	mov	pc, r3
    1bde:	7a21      	ldrb	r1, [r4, #8]
    1be0:	7f23      	ldrb	r3, [r4, #28]
    1be2:	18cb      	adds	r3, r1, r3
    1be4:	7723      	strb	r3, [r4, #28]
    1be6:	6960      	ldr	r0, [r4, #20]
    1be8:	6803      	ldr	r3, [r0, #0]
    1bea:	4798      	blx	r3
    1bec:	7a21      	ldrb	r1, [r4, #8]
    1bee:	2302      	movs	r3, #2
    1bf0:	0022      	movs	r2, r4
    1bf2:	321a      	adds	r2, #26
    1bf4:	0020      	movs	r0, r4
    1bf6:	f7ff ffc2 	bl	1b7e <checkFill>

00001bfa <.LVL11>:
    1bfa:	e7e2      	b.n	1bc2 <.LVL8+0x4>
    1bfc:	7e21      	ldrb	r1, [r4, #24]
    1bfe:	7f23      	ldrb	r3, [r4, #28]
    1c00:	18cb      	adds	r3, r1, r3
    1c02:	7723      	strb	r3, [r4, #28]
    1c04:	6960      	ldr	r0, [r4, #20]
    1c06:	6803      	ldr	r3, [r0, #0]
    1c08:	4798      	blx	r3
    1c0a:	7e21      	ldrb	r1, [r4, #24]
    1c0c:	2303      	movs	r3, #3
    1c0e:	0022      	movs	r2, r4
    1c10:	321a      	adds	r2, #26
    1c12:	0020      	movs	r0, r4
    1c14:	f7ff ffb3 	bl	1b7e <checkFill>

00001c18 <.LVL13>:
    1c18:	e7d3      	b.n	1bc2 <.LVL8+0x4>
    1c1a:	7f63      	ldrb	r3, [r4, #29]
    1c1c:	68e2      	ldr	r2, [r4, #12]
    1c1e:	4694      	mov	ip, r2
    1c20:	4463      	add	r3, ip
    1c22:	781a      	ldrb	r2, [r3, #0]
    1c24:	7f21      	ldrb	r1, [r4, #28]
    1c26:	1852      	adds	r2, r2, r1
    1c28:	7722      	strb	r2, [r4, #28]
    1c2a:	6960      	ldr	r0, [r4, #20]
    1c2c:	7819      	ldrb	r1, [r3, #0]
    1c2e:	6803      	ldr	r3, [r0, #0]
    1c30:	4798      	blx	r3
    1c32:	7f63      	ldrb	r3, [r4, #29]
    1c34:	1c59      	adds	r1, r3, #1
    1c36:	7a22      	ldrb	r2, [r4, #8]
    1c38:	4291      	cmp	r1, r2
    1c3a:	db0b      	blt.n	1c54 <.LVL15+0x8>
    1c3c:	68e2      	ldr	r2, [r4, #12]
    1c3e:	5cd1      	ldrb	r1, [r2, r3]
    1c40:	2305      	movs	r3, #5
    1c42:	0022      	movs	r2, r4
    1c44:	321a      	adds	r2, #26
    1c46:	0020      	movs	r0, r4
    1c48:	f7ff ff99 	bl	1b7e <checkFill>

00001c4c <.LVL15>:
    1c4c:	7f63      	ldrb	r3, [r4, #29]
    1c4e:	3301      	adds	r3, #1
    1c50:	7763      	strb	r3, [r4, #29]
    1c52:	e7b6      	b.n	1bc2 <.LVL8+0x4>
    1c54:	68e2      	ldr	r2, [r4, #12]
    1c56:	5cd1      	ldrb	r1, [r2, r3]
    1c58:	2303      	movs	r3, #3
    1c5a:	0022      	movs	r2, r4
    1c5c:	321a      	adds	r2, #26
    1c5e:	0020      	movs	r0, r4
    1c60:	f7ff ff8d 	bl	1b7e <checkFill>

00001c64 <.LVL16>:
    1c64:	e7f2      	b.n	1c4c <.LVL15>
    1c66:	6960      	ldr	r0, [r4, #20]
    1c68:	6803      	ldr	r3, [r0, #0]
    1c6a:	0031      	movs	r1, r6
    1c6c:	4798      	blx	r3

00001c6e <.LVL17>:
    1c6e:	4b78      	ldr	r3, [pc, #480]	; (1e50 <.LLST7+0x11>)
    1c70:	785b      	ldrb	r3, [r3, #1]
    1c72:	76a3      	strb	r3, [r4, #26]
    1c74:	e7a5      	b.n	1bc2 <.LVL8+0x4>
    1c76:	7f23      	ldrb	r3, [r4, #28]
    1c78:	2b55      	cmp	r3, #85	; 0x55
    1c7a:	d00b      	beq.n	1c94 <.LBE20>
    1c7c:	2b02      	cmp	r3, #2
    1c7e:	d009      	beq.n	1c94 <.LBE20>
    1c80:	6960      	ldr	r0, [r4, #20]
    1c82:	7f21      	ldrb	r1, [r4, #28]
    1c84:	6803      	ldr	r3, [r0, #0]
    1c86:	4798      	blx	r3
    1c88:	6960      	ldr	r0, [r4, #20]
    1c8a:	6943      	ldr	r3, [r0, #20]
    1c8c:	4798      	blx	r3

00001c8e <.LBB20>:
    1c8e:	76e6      	strb	r6, [r4, #27]
    1c90:	7666      	strb	r6, [r4, #25]
    1c92:	e796      	b.n	1bc2 <.LVL8+0x4>

00001c94 <.LBE20>:
    1c94:	43db      	mvns	r3, r3
    1c96:	7723      	strb	r3, [r4, #28]
    1c98:	e7f2      	b.n	1c80 <.LVL17+0x12>
    1c9a:	76e6      	strb	r6, [r4, #27]
    1c9c:	7666      	strb	r6, [r4, #25]
    1c9e:	e790      	b.n	1bc2 <.LVL8+0x4>
    1ca0:	4d6c      	ldr	r5, [pc, #432]	; (1e54 <.LLST7+0x15>)
    1ca2:	e098      	b.n	1dd6 <.LVL58+0x6>
    1ca4:	2855      	cmp	r0, #85	; 0x55
    1ca6:	d000      	beq.n	1caa <.LLST31+0x8>
    1ca8:	e095      	b.n	1dd6 <.LVL58+0x6>
    1caa:	2355      	movs	r3, #85	; 0x55
    1cac:	7723      	strb	r3, [r4, #28]
    1cae:	3b54      	subs	r3, #84	; 0x54
    1cb0:	7663      	strb	r3, [r4, #25]
    1cb2:	e090      	b.n	1dd6 <.LVL58+0x6>

00001cb4 <.LBB23>:
    1cb4:	2800      	cmp	r0, #0
    1cb6:	d01a      	beq.n	1cee <.LBE25>
    1cb8:	7a63      	ldrb	r3, [r4, #9]
    1cba:	4283      	cmp	r3, r0
    1cbc:	d30e      	bcc.n	1cdc <.LVL27+0x2>
    1cbe:	0003      	movs	r3, r0
    1cc0:	3355      	adds	r3, #85	; 0x55
    1cc2:	7723      	strb	r3, [r4, #28]
    1cc4:	7220      	strb	r0, [r4, #8]
    1cc6:	2300      	movs	r3, #0
    1cc8:	7763      	strb	r3, [r4, #29]
    1cca:	3302      	adds	r3, #2
    1ccc:	7663      	strb	r3, [r4, #25]
    1cce:	0022      	movs	r2, r4
    1cd0:	3219      	adds	r2, #25
    1cd2:	0001      	movs	r1, r0
    1cd4:	0020      	movs	r0, r4
    1cd6:	f7ff ff52 	bl	1b7e <checkFill>

00001cda <.LVL27>:
    1cda:	e07c      	b.n	1dd6 <.LVL58+0x6>
    1cdc:	2300      	movs	r3, #0
    1cde:	7663      	strb	r3, [r4, #25]

00001ce0 <.LBB25>:
    1ce0:	68e2      	ldr	r2, [r4, #12]
    1ce2:	7013      	strb	r3, [r2, #0]
    1ce4:	2115      	movs	r1, #21
    1ce6:	0020      	movs	r0, r4
    1ce8:	f7ff fd69 	bl	17be <sendError>

00001cec <.LVL31>:
    1cec:	e073      	b.n	1dd6 <.LVL58+0x6>

00001cee <.LBE25>:
    1cee:	2300      	movs	r3, #0
    1cf0:	7663      	strb	r3, [r4, #25]
    1cf2:	e070      	b.n	1dd6 <.LVL58+0x6>
    1cf4:	7e23      	ldrb	r3, [r4, #24]
    1cf6:	4283      	cmp	r3, r0
    1cf8:	d002      	beq.n	1d00 <.LBE25+0x12>
    1cfa:	2300      	movs	r3, #0
    1cfc:	7663      	strb	r3, [r4, #25]
    1cfe:	e06a      	b.n	1dd6 <.LVL58+0x6>
    1d00:	7f23      	ldrb	r3, [r4, #28]
    1d02:	18c3      	adds	r3, r0, r3
    1d04:	7723      	strb	r3, [r4, #28]
    1d06:	2303      	movs	r3, #3
    1d08:	0022      	movs	r2, r4
    1d0a:	3219      	adds	r2, #25
    1d0c:	0001      	movs	r1, r0
    1d0e:	0020      	movs	r0, r4
    1d10:	f7ff ff35 	bl	1b7e <checkFill>

00001d14 <.LVL35>:
    1d14:	e05f      	b.n	1dd6 <.LVL58+0x6>
    1d16:	7f23      	ldrb	r3, [r4, #28]
    1d18:	18c3      	adds	r3, r0, r3
    1d1a:	7723      	strb	r3, [r4, #28]
    1d1c:	7f63      	ldrb	r3, [r4, #29]
    1d1e:	68e2      	ldr	r2, [r4, #12]
    1d20:	54d0      	strb	r0, [r2, r3]
    1d22:	7f63      	ldrb	r3, [r4, #29]
    1d24:	3301      	adds	r3, #1
    1d26:	b2db      	uxtb	r3, r3
    1d28:	7763      	strb	r3, [r4, #29]
    1d2a:	7a22      	ldrb	r2, [r4, #8]
    1d2c:	429a      	cmp	r2, r3
    1d2e:	d807      	bhi.n	1d40 <.LLST25>
    1d30:	2305      	movs	r3, #5
    1d32:	0022      	movs	r2, r4
    1d34:	3219      	adds	r2, #25
    1d36:	0001      	movs	r1, r0
    1d38:	0020      	movs	r0, r4
    1d3a:	f7ff ff20 	bl	1b7e <checkFill>

00001d3e <.LVL38>:
    1d3e:	e04a      	b.n	1dd6 <.LVL58+0x6>
    1d40:	2303      	movs	r3, #3
    1d42:	0022      	movs	r2, r4
    1d44:	3219      	adds	r2, #25
    1d46:	0001      	movs	r1, r0
    1d48:	0020      	movs	r0, r4
    1d4a:	f7ff ff18 	bl	1b7e <checkFill>

00001d4e <.LVL41>:
    1d4e:	e042      	b.n	1dd6 <.LVL58+0x6>
    1d50:	2800      	cmp	r0, #0
    1d52:	d103      	bne.n	1d5c <.LLST26+0x9>
    1d54:	4b3e      	ldr	r3, [pc, #248]	; (1e50 <.LLST7+0x11>)
    1d56:	785b      	ldrb	r3, [r3, #1]
    1d58:	7663      	strb	r3, [r4, #25]
    1d5a:	e03c      	b.n	1dd6 <.LVL58+0x6>
    1d5c:	4b3c      	ldr	r3, [pc, #240]	; (1e50 <.LLST7+0x11>)
    1d5e:	781b      	ldrb	r3, [r3, #0]
    1d60:	2b55      	cmp	r3, #85	; 0x55
    1d62:	d002      	beq.n	1d6a <.LBB29>
    1d64:	2300      	movs	r3, #0
    1d66:	7663      	strb	r3, [r4, #25]
    1d68:	e035      	b.n	1dd6 <.LVL58+0x6>

00001d6a <.LBB29>:
    1d6a:	7a63      	ldrb	r3, [r4, #9]
    1d6c:	4283      	cmp	r3, r0
    1d6e:	d308      	bcc.n	1d82 <.LLST14+0x8>
    1d70:	0003      	movs	r3, r0
    1d72:	3355      	adds	r3, #85	; 0x55
    1d74:	7723      	strb	r3, [r4, #28]
    1d76:	7220      	strb	r0, [r4, #8]
    1d78:	2300      	movs	r3, #0
    1d7a:	7763      	strb	r3, [r4, #29]
    1d7c:	3302      	adds	r3, #2
    1d7e:	7663      	strb	r3, [r4, #25]
    1d80:	e029      	b.n	1dd6 <.LVL58+0x6>
    1d82:	2300      	movs	r3, #0
    1d84:	7663      	strb	r3, [r4, #25]

00001d86 <.LBB31>:
    1d86:	68e2      	ldr	r2, [r4, #12]
    1d88:	7013      	strb	r3, [r2, #0]
    1d8a:	2115      	movs	r1, #21
    1d8c:	0020      	movs	r0, r4
    1d8e:	f7ff fd16 	bl	17be <sendError>

00001d92 <.LVL48>:
    1d92:	e020      	b.n	1dd6 <.LVL58+0x6>

00001d94 <.LBE29>:
    1d94:	7f23      	ldrb	r3, [r4, #28]
    1d96:	2b55      	cmp	r3, #85	; 0x55
    1d98:	d009      	beq.n	1dae <.LVL51+0x2>
    1d9a:	2b02      	cmp	r3, #2
    1d9c:	d007      	beq.n	1dae <.LVL51+0x2>
    1d9e:	7f23      	ldrb	r3, [r4, #28]
    1da0:	4293      	cmp	r3, r2
    1da2:	d007      	beq.n	1db4 <.LVL51+0x8>
    1da4:	2113      	movs	r1, #19
    1da6:	0020      	movs	r0, r4
    1da8:	f7ff fd09 	bl	17be <sendError>

00001dac <.LVL51>:
    1dac:	e013      	b.n	1dd6 <.LVL58+0x6>
    1dae:	43db      	mvns	r3, r3
    1db0:	7723      	strb	r3, [r4, #28]
    1db2:	e7f4      	b.n	1d9e <.LBE29+0xa>
    1db4:	68e3      	ldr	r3, [r4, #12]
    1db6:	781b      	ldrb	r3, [r3, #0]
    1db8:	2b1a      	cmp	r3, #26
    1dba:	d805      	bhi.n	1dc8 <.LLST16+0x1>
    1dbc:	009b      	lsls	r3, r3, #2
    1dbe:	6922      	ldr	r2, [r4, #16]
    1dc0:	589b      	ldr	r3, [r3, r2]
    1dc2:	0020      	movs	r0, r4
    1dc4:	4798      	blx	r3

00001dc6 <.LVL55>:
    1dc6:	e006      	b.n	1dd6 <.LVL58+0x6>
    1dc8:	2121      	movs	r1, #33	; 0x21
    1dca:	0020      	movs	r0, r4
    1dcc:	f7ff fcf7 	bl	17be <sendError>

00001dd0 <.LVL58>:
    1dd0:	e001      	b.n	1dd6 <.LVL58+0x6>
    1dd2:	2300      	movs	r3, #0
    1dd4:	7663      	strb	r3, [r4, #25]
    1dd6:	7ee3      	ldrb	r3, [r4, #27]
    1dd8:	2b00      	cmp	r3, #0
    1dda:	d10e      	bne.n	1dfa <.LBB33>
    1ddc:	6960      	ldr	r0, [r4, #20]
    1dde:	6883      	ldr	r3, [r0, #8]
    1de0:	4798      	blx	r3
    1de2:	2800      	cmp	r0, #0
    1de4:	d009      	beq.n	1dfa <.LBB33>
    1de6:	6960      	ldr	r0, [r4, #20]
    1de8:	6843      	ldr	r3, [r0, #4]
    1dea:	4798      	blx	r3
    1dec:	0002      	movs	r2, r0
    1dee:	7e63      	ldrb	r3, [r4, #25]
    1df0:	2b05      	cmp	r3, #5
    1df2:	d8ee      	bhi.n	1dd2 <.LVL58+0x2>
    1df4:	009b      	lsls	r3, r3, #2
    1df6:	58eb      	ldr	r3, [r5, r3]
    1df8:	469f      	mov	pc, r3

00001dfa <.LBB33>:
    1dfa:	4b17      	ldr	r3, [pc, #92]	; (1e58 <.LLST7+0x19>)
    1dfc:	681b      	ldr	r3, [r3, #0]
    1dfe:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    1e00:	2a00      	cmp	r2, #0
    1e02:	d004      	beq.n	1e0e <.LLST18+0x9>
    1e04:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    1e06:	234d      	movs	r3, #77	; 0x4d
    1e08:	5cd3      	ldrb	r3, [r2, r3]
    1e0a:	2b04      	cmp	r3, #4
    1e0c:	d005      	beq.n	1e1a <.LLST19+0x2>
    1e0e:	bc3c      	pop	{r2, r3, r4, r5}
    1e10:	4690      	mov	r8, r2
    1e12:	4699      	mov	r9, r3
    1e14:	46a2      	mov	sl, r4
    1e16:	46ab      	mov	fp, r5
    1e18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1e1a:	6960      	ldr	r0, [r4, #20]
    1e1c:	6903      	ldr	r3, [r0, #16]
    1e1e:	4798      	blx	r3
    1e20:	4b0d      	ldr	r3, [pc, #52]	; (1e58 <.LLST7+0x19>)
    1e22:	681a      	ldr	r2, [r3, #0]
    1e24:	6a91      	ldr	r1, [r2, #40]	; 0x28
    1e26:	235c      	movs	r3, #92	; 0x5c
    1e28:	5ccb      	ldrb	r3, [r1, r3]
    1e2a:	3304      	adds	r3, #4
    1e2c:	4298      	cmp	r0, r3
    1e2e:	db07      	blt.n	1e40 <.LLST7+0x1>
    1e30:	6a91      	ldr	r1, [r2, #40]	; 0x28
    1e32:	6a90      	ldr	r0, [r2, #40]	; 0x28
    1e34:	2358      	movs	r3, #88	; 0x58
    1e36:	5ac9      	ldrh	r1, [r1, r3]
    1e38:	3b02      	subs	r3, #2
    1e3a:	5ac3      	ldrh	r3, [r0, r3]
    1e3c:	4299      	cmp	r1, r3
    1e3e:	d20d      	bcs.n	1e5c <.LLST7+0x1d>
    1e40:	4a03      	ldr	r2, [pc, #12]	; (1e50 <.LLST7+0x11>)
    1e42:	6853      	ldr	r3, [r2, #4]
    1e44:	3301      	adds	r3, #1
    1e46:	6053      	str	r3, [r2, #4]
    1e48:	e7e1      	b.n	1e0e <.LLST18+0x9>
    1e4a:	46c0      	nop			; (mov r8, r8)
    1e4c:	00003530 	.word	0x00003530
    1e50:	20007e08 	.word	0x20007e08
    1e54:	00003548 	.word	0x00003548
    1e58:	20007dd8 	.word	0x20007dd8
    1e5c:	6a92      	ldr	r2, [r2, #40]	; 0x28
    1e5e:	2100      	movs	r1, #0
    1e60:	2358      	movs	r3, #88	; 0x58
    1e62:	52d1      	strh	r1, [r2, r3]
    1e64:	6960      	ldr	r0, [r4, #20]
    1e66:	6803      	ldr	r3, [r0, #0]
    1e68:	3102      	adds	r1, #2
    1e6a:	4798      	blx	r3

00001e6c <.LVL71>:
    1e6c:	6960      	ldr	r0, [r4, #20]
    1e6e:	4e2c      	ldr	r6, [pc, #176]	; (1f20 <.LVL87+0x6>)
    1e70:	6833      	ldr	r3, [r6, #0]
    1e72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1e74:	275c      	movs	r7, #92	; 0x5c
    1e76:	5dd9      	ldrb	r1, [r3, r7]
    1e78:	6803      	ldr	r3, [r0, #0]
    1e7a:	4798      	blx	r3
    1e7c:	6960      	ldr	r0, [r4, #20]
    1e7e:	7e21      	ldrb	r1, [r4, #24]
    1e80:	6803      	ldr	r3, [r0, #0]
    1e82:	4798      	blx	r3
    1e84:	6960      	ldr	r0, [r4, #20]
    1e86:	6833      	ldr	r3, [r6, #0]
    1e88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1e8a:	255a      	movs	r5, #90	; 0x5a
    1e8c:	5d59      	ldrb	r1, [r3, r5]
    1e8e:	6803      	ldr	r3, [r0, #0]
    1e90:	4798      	blx	r3
    1e92:	6960      	ldr	r0, [r4, #20]
    1e94:	6833      	ldr	r3, [r6, #0]
    1e96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1e98:	5b59      	ldrh	r1, [r3, r5]
    1e9a:	0a09      	lsrs	r1, r1, #8
    1e9c:	6803      	ldr	r3, [r0, #0]
    1e9e:	4798      	blx	r3
    1ea0:	6833      	ldr	r3, [r6, #0]
    1ea2:	6a98      	ldr	r0, [r3, #40]	; 0x28
    1ea4:	6a99      	ldr	r1, [r3, #40]	; 0x28
    1ea6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    1ea8:	5dc3      	ldrb	r3, [r0, r7]
    1eaa:	3302      	adds	r3, #2
    1eac:	7e27      	ldrb	r7, [r4, #24]
    1eae:	19db      	adds	r3, r3, r7
    1eb0:	5b4f      	ldrh	r7, [r1, r5]
    1eb2:	18fb      	adds	r3, r7, r3
    1eb4:	5b57      	ldrh	r7, [r2, r5]
    1eb6:	0a3f      	lsrs	r7, r7, #8
    1eb8:	18ff      	adds	r7, r7, r3
    1eba:	b2ff      	uxtb	r7, r7
    1ebc:	2300      	movs	r3, #0
    1ebe:	4699      	mov	r9, r3
    1ec0:	4b17      	ldr	r3, [pc, #92]	; (1f20 <.LVL87+0x6>)
    1ec2:	4698      	mov	r8, r3
    1ec4:	2355      	movs	r3, #85	; 0x55
    1ec6:	469b      	mov	fp, r3
    1ec8:	2500      	movs	r5, #0
    1eca:	464b      	mov	r3, r9
    1ecc:	009b      	lsls	r3, r3, #2
    1ece:	469a      	mov	sl, r3
    1ed0:	4643      	mov	r3, r8
    1ed2:	681b      	ldr	r3, [r3, #0]
    1ed4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1ed6:	4453      	add	r3, sl
    1ed8:	685b      	ldr	r3, [r3, #4]
    1eda:	5d5e      	ldrb	r6, [r3, r5]
    1edc:	6960      	ldr	r0, [r4, #20]
    1ede:	6803      	ldr	r3, [r0, #0]
    1ee0:	0031      	movs	r1, r6
    1ee2:	4798      	blx	r3

00001ee4 <.LVL80>:
    1ee4:	19f7      	adds	r7, r6, r7
    1ee6:	b2ff      	uxtb	r7, r7
    1ee8:	3501      	adds	r5, #1
    1eea:	b2ad      	uxth	r5, r5
    1eec:	4643      	mov	r3, r8
    1eee:	681a      	ldr	r2, [r3, #0]
    1ef0:	6a93      	ldr	r3, [r2, #40]	; 0x28
    1ef2:	444b      	add	r3, r9
    1ef4:	3324      	adds	r3, #36	; 0x24
    1ef6:	781b      	ldrb	r3, [r3, #0]
    1ef8:	42ab      	cmp	r3, r5
    1efa:	d8e9      	bhi.n	1ed0 <.LLST11+0x6>
    1efc:	464b      	mov	r3, r9
    1efe:	3301      	adds	r3, #1
    1f00:	b29b      	uxth	r3, r3
    1f02:	4699      	mov	r9, r3
    1f04:	6a93      	ldr	r3, [r2, #40]	; 0x28
    1f06:	465a      	mov	r2, fp
    1f08:	5c9b      	ldrb	r3, [r3, r2]
    1f0a:	454b      	cmp	r3, r9
    1f0c:	d8dc      	bhi.n	1ec8 <.LLST10+0x1d>
    1f0e:	2f02      	cmp	r7, #2
    1f10:	d004      	beq.n	1f1c <.LVL87+0x2>
    1f12:	6960      	ldr	r0, [r4, #20]
    1f14:	6803      	ldr	r3, [r0, #0]
    1f16:	0039      	movs	r1, r7
    1f18:	4798      	blx	r3

00001f1a <.LVL87>:
    1f1a:	e778      	b.n	1e0e <.LLST18+0x9>
    1f1c:	37fb      	adds	r7, #251	; 0xfb
    1f1e:	e7f8      	b.n	1f12 <.LLST0+0xe>
    1f20:	20007dd8 	.word	0x20007dd8

00001f24 <initLNet>:
    1f24:	60c1      	str	r1, [r0, #12]
    1f26:	7242      	strb	r2, [r0, #9]
    1f28:	7603      	strb	r3, [r0, #24]
    1f2a:	4b04      	ldr	r3, [pc, #16]	; (1f3c <.LBE43+0x4>)
    1f2c:	6003      	str	r3, [r0, #0]
    1f2e:	4b04      	ldr	r3, [pc, #16]	; (1f40 <.LBE43+0x8>)
    1f30:	6043      	str	r3, [r0, #4]

00001f32 <.LBB43>:
    1f32:	2300      	movs	r3, #0
    1f34:	76c3      	strb	r3, [r0, #27]
    1f36:	7643      	strb	r3, [r0, #25]

00001f38 <.LBE43>:
    1f38:	4770      	bx	lr
    1f3a:	46c0      	nop			; (mov r8, r8)
    1f3c:	00001b9d 	.word	0x00001b9d
    1f40:	00001b75 	.word	0x00001b75

00001f44 <putRAMBlock>:
    1f44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1f46:	0005      	movs	r5, r0
    1f48:	68c3      	ldr	r3, [r0, #12]
    1f4a:	789e      	ldrb	r6, [r3, #2]
    1f4c:	0236      	lsls	r6, r6, #8
    1f4e:	78da      	ldrb	r2, [r3, #3]
    1f50:	0412      	lsls	r2, r2, #16
    1f52:	18b6      	adds	r6, r6, r2
    1f54:	785a      	ldrb	r2, [r3, #1]
    1f56:	18b6      	adds	r6, r6, r2
    1f58:	791a      	ldrb	r2, [r3, #4]
    1f5a:	0612      	lsls	r2, r2, #24
    1f5c:	18b6      	adds	r6, r6, r2
    1f5e:	7a04      	ldrb	r4, [r0, #8]
    1f60:	3c06      	subs	r4, #6
    1f62:	b2e4      	uxtb	r4, r4
    1f64:	795f      	ldrb	r7, [r3, #5]
    1f66:	0039      	movs	r1, r7
    1f68:	0020      	movs	r0, r4
    1f6a:	f001 fa21 	bl	33b0 <.LFE51>
    1f6e:	b2c9      	uxtb	r1, r1
    1f70:	2900      	cmp	r1, #0
    1f72:	d10a      	bne.n	1f8a <.LVL7+0x2>
    1f74:	2f02      	cmp	r7, #2
    1f76:	d028      	beq.n	1fca <.LBB3>
    1f78:	2f04      	cmp	r7, #4
    1f7a:	d00b      	beq.n	1f94 <.LBB2>
    1f7c:	2f01      	cmp	r7, #1
    1f7e:	d03b      	beq.n	1ff8 <.LBB4>
    1f80:	2114      	movs	r1, #20
    1f82:	0028      	movs	r0, r5
    1f84:	f7ff fc1b 	bl	17be <sendError>

00001f88 <.LVL7>:
    1f88:	e04a      	b.n	2020 <.LVL22>
    1f8a:	2114      	movs	r1, #20
    1f8c:	0028      	movs	r0, r5
    1f8e:	f7ff fc16 	bl	17be <sendError>

00001f92 <.LVL8>:
    1f92:	e045      	b.n	2020 <.LVL22>

00001f94 <.LBB2>:
    1f94:	08a4      	lsrs	r4, r4, #2
    1f96:	d03b      	beq.n	2010 <.LBE4>
    1f98:	3c01      	subs	r4, #1
    1f9a:	b2a4      	uxth	r4, r4
    1f9c:	3403      	adds	r4, #3
    1f9e:	00a4      	lsls	r4, r4, #2
    1fa0:	2208      	movs	r2, #8
    1fa2:	3e08      	subs	r6, #8
    1fa4:	68e8      	ldr	r0, [r5, #12]
    1fa6:	1881      	adds	r1, r0, r2
    1fa8:	1e4b      	subs	r3, r1, #1
    1faa:	781b      	ldrb	r3, [r3, #0]
    1fac:	021b      	lsls	r3, r3, #8
    1fae:	1e8f      	subs	r7, r1, #2
    1fb0:	783f      	ldrb	r7, [r7, #0]
    1fb2:	19db      	adds	r3, r3, r7
    1fb4:	5c80      	ldrb	r0, [r0, r2]
    1fb6:	0400      	lsls	r0, r0, #16
    1fb8:	181b      	adds	r3, r3, r0
    1fba:	7849      	ldrb	r1, [r1, #1]
    1fbc:	0609      	lsls	r1, r1, #24
    1fbe:	185b      	adds	r3, r3, r1
    1fc0:	50b3      	str	r3, [r6, r2]
    1fc2:	3204      	adds	r2, #4
    1fc4:	4294      	cmp	r4, r2
    1fc6:	d1ed      	bne.n	1fa4 <.LLST5+0x2>
    1fc8:	e022      	b.n	2010 <.LBE4>

00001fca <.LBB3>:
    1fca:	0864      	lsrs	r4, r4, #1
    1fcc:	d020      	beq.n	2010 <.LBE4>
    1fce:	3c01      	subs	r4, #1
    1fd0:	b2a3      	uxth	r3, r4
    1fd2:	005b      	lsls	r3, r3, #1
    1fd4:	199b      	adds	r3, r3, r6
    1fd6:	3302      	adds	r3, #2
    1fd8:	0032      	movs	r2, r6
    1fda:	2407      	movs	r4, #7
    1fdc:	1ba4      	subs	r4, r4, r6
    1fde:	2106      	movs	r1, #6
    1fe0:	1b8e      	subs	r6, r1, r6
    1fe2:	68e9      	ldr	r1, [r5, #12]
    1fe4:	1889      	adds	r1, r1, r2
    1fe6:	5d08      	ldrb	r0, [r1, r4]
    1fe8:	0200      	lsls	r0, r0, #8
    1fea:	5d89      	ldrb	r1, [r1, r6]
    1fec:	1809      	adds	r1, r1, r0
    1fee:	8011      	strh	r1, [r2, #0]
    1ff0:	3202      	adds	r2, #2
    1ff2:	429a      	cmp	r2, r3
    1ff4:	d1f5      	bne.n	1fe2 <.LBB3+0x18>
    1ff6:	e00b      	b.n	2010 <.LBE4>

00001ff8 <.LBB4>:
    1ff8:	b2a4      	uxth	r4, r4
    1ffa:	2c00      	cmp	r4, #0
    1ffc:	d008      	beq.n	2010 <.LBE4>
    1ffe:	2300      	movs	r3, #0
    2000:	68ea      	ldr	r2, [r5, #12]
    2002:	18d2      	adds	r2, r2, r3
    2004:	7992      	ldrb	r2, [r2, #6]
    2006:	559a      	strb	r2, [r3, r6]
    2008:	3301      	adds	r3, #1
    200a:	b29a      	uxth	r2, r3
    200c:	42a2      	cmp	r2, r4
    200e:	d3f7      	bcc.n	2000 <.LBB4+0x8>

00002010 <.LBE4>:
    2010:	2302      	movs	r3, #2
    2012:	722b      	strb	r3, [r5, #8]
    2014:	2300      	movs	r3, #0
    2016:	68ea      	ldr	r2, [r5, #12]
    2018:	7053      	strb	r3, [r2, #1]
    201a:	686b      	ldr	r3, [r5, #4]
    201c:	0028      	movs	r0, r5
    201e:	4798      	blx	r3

00002020 <.LVL22>:
    2020:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00002022 <getRAMBlock>:
    2022:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2024:	68c2      	ldr	r2, [r0, #12]
    2026:	7955      	ldrb	r5, [r2, #5]
    2028:	1ca9      	adds	r1, r5, #2
    202a:	7a43      	ldrb	r3, [r0, #9]
    202c:	4299      	cmp	r1, r3
    202e:	dc59      	bgt.n	20e4 <.LBE7>
    2030:	7893      	ldrb	r3, [r2, #2]
    2032:	021b      	lsls	r3, r3, #8
    2034:	78d1      	ldrb	r1, [r2, #3]
    2036:	0409      	lsls	r1, r1, #16
    2038:	185b      	adds	r3, r3, r1
    203a:	7851      	ldrb	r1, [r2, #1]
    203c:	185b      	adds	r3, r3, r1
    203e:	7911      	ldrb	r1, [r2, #4]
    2040:	0609      	lsls	r1, r1, #24
    2042:	185b      	adds	r3, r3, r1
    2044:	7992      	ldrb	r2, [r2, #6]
    2046:	2a02      	cmp	r2, #2
    2048:	d037      	beq.n	20ba <.LBB7>
    204a:	2a04      	cmp	r2, #4
    204c:	d016      	beq.n	207c <.LBB6>
    204e:	2114      	movs	r1, #20
    2050:	2a01      	cmp	r2, #1
    2052:	d148      	bne.n	20e6 <.LBE7+0x2>

00002054 <.LBB5>:
    2054:	b2ae      	uxth	r6, r5
    2056:	2e00      	cmp	r6, #0
    2058:	d008      	beq.n	206c <.LBE5>
    205a:	2200      	movs	r2, #0
    205c:	5cd4      	ldrb	r4, [r2, r3]
    205e:	68c1      	ldr	r1, [r0, #12]
    2060:	1889      	adds	r1, r1, r2
    2062:	708c      	strb	r4, [r1, #2]
    2064:	3201      	adds	r2, #1
    2066:	b291      	uxth	r1, r2
    2068:	42b1      	cmp	r1, r6
    206a:	d3f7      	bcc.n	205c <.LBB5+0x8>

0000206c <.LBE5>:
    206c:	3502      	adds	r5, #2
    206e:	7205      	strb	r5, [r0, #8]
    2070:	2300      	movs	r3, #0
    2072:	68c2      	ldr	r2, [r0, #12]
    2074:	7053      	strb	r3, [r2, #1]
    2076:	6843      	ldr	r3, [r0, #4]
    2078:	4798      	blx	r3

0000207a <.LVL36>:
    207a:	e036      	b.n	20ea <.LVL49>

0000207c <.LBB6>:
    207c:	b2af      	uxth	r7, r5
    207e:	2200      	movs	r2, #0
    2080:	2f00      	cmp	r7, #0
    2082:	d0f3      	beq.n	206c <.LBE5>
    2084:	0411      	lsls	r1, r2, #16
    2086:	0c09      	lsrs	r1, r1, #16
    2088:	68c4      	ldr	r4, [r0, #12]
    208a:	1864      	adds	r4, r4, r1
    208c:	5cd6      	ldrb	r6, [r2, r3]
    208e:	70a6      	strb	r6, [r4, #2]
    2090:	68c4      	ldr	r4, [r0, #12]
    2092:	1864      	adds	r4, r4, r1
    2094:	58d6      	ldr	r6, [r2, r3]
    2096:	0a36      	lsrs	r6, r6, #8
    2098:	70e6      	strb	r6, [r4, #3]
    209a:	68c4      	ldr	r4, [r0, #12]
    209c:	1864      	adds	r4, r4, r1
    209e:	58d6      	ldr	r6, [r2, r3]
    20a0:	0c36      	lsrs	r6, r6, #16
    20a2:	7126      	strb	r6, [r4, #4]
    20a4:	68c4      	ldr	r4, [r0, #12]
    20a6:	46a4      	mov	ip, r4
    20a8:	4461      	add	r1, ip
    20aa:	58d4      	ldr	r4, [r2, r3]
    20ac:	0e24      	lsrs	r4, r4, #24
    20ae:	714c      	strb	r4, [r1, #5]
    20b0:	3204      	adds	r2, #4
    20b2:	b291      	uxth	r1, r2
    20b4:	42b9      	cmp	r1, r7
    20b6:	d3e5      	bcc.n	2084 <.LBB6+0x8>
    20b8:	e7d8      	b.n	206c <.LBE5>

000020ba <.LBB7>:
    20ba:	b2af      	uxth	r7, r5
    20bc:	2200      	movs	r2, #0
    20be:	2f00      	cmp	r7, #0
    20c0:	d0d4      	beq.n	206c <.LBE5>
    20c2:	0411      	lsls	r1, r2, #16
    20c4:	0c09      	lsrs	r1, r1, #16
    20c6:	68c4      	ldr	r4, [r0, #12]
    20c8:	1864      	adds	r4, r4, r1
    20ca:	5ad6      	ldrh	r6, [r2, r3]
    20cc:	70a6      	strb	r6, [r4, #2]
    20ce:	68c4      	ldr	r4, [r0, #12]
    20d0:	46a4      	mov	ip, r4
    20d2:	4461      	add	r1, ip
    20d4:	5ad4      	ldrh	r4, [r2, r3]
    20d6:	0a24      	lsrs	r4, r4, #8
    20d8:	70cc      	strb	r4, [r1, #3]
    20da:	3202      	adds	r2, #2
    20dc:	b291      	uxth	r1, r2
    20de:	42b9      	cmp	r1, r7
    20e0:	d3ef      	bcc.n	20c2 <.LBB7+0x8>
    20e2:	e7c3      	b.n	206c <.LBE5>

000020e4 <.LBE7>:
    20e4:	2115      	movs	r1, #21
    20e6:	f7ff fb6a 	bl	17be <sendError>

000020ea <.LVL49>:
    20ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000020ec <putBlockData>:
    20ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    20ee:	0005      	movs	r5, r0
    20f0:	68c3      	ldr	r3, [r0, #12]
    20f2:	469c      	mov	ip, r3
    20f4:	7898      	ldrb	r0, [r3, #2]
    20f6:	0200      	lsls	r0, r0, #8
    20f8:	78db      	ldrb	r3, [r3, #3]
    20fa:	041b      	lsls	r3, r3, #16
    20fc:	18c0      	adds	r0, r0, r3
    20fe:	4663      	mov	r3, ip
    2100:	785b      	ldrb	r3, [r3, #1]
    2102:	18c0      	adds	r0, r0, r3
    2104:	4663      	mov	r3, ip
    2106:	791b      	ldrb	r3, [r3, #4]
    2108:	061b      	lsls	r3, r3, #24
    210a:	18c0      	adds	r0, r0, r3
    210c:	8801      	ldrh	r1, [r0, #0]
    210e:	4b1f      	ldr	r3, [pc, #124]	; (218c <.LVL69+0x2>)
    2110:	681e      	ldr	r6, [r3, #0]
    2112:	6873      	ldr	r3, [r6, #4]
    2114:	881b      	ldrh	r3, [r3, #0]
    2116:	428b      	cmp	r3, r1
    2118:	d02a      	beq.n	2170 <.LVL61+0x2>
    211a:	6873      	ldr	r3, [r6, #4]
    211c:	881b      	ldrh	r3, [r3, #0]
    211e:	2b00      	cmp	r3, #0
    2120:	d028      	beq.n	2174 <.LVL61+0x6>
    2122:	2200      	movs	r2, #0
    2124:	3201      	adds	r2, #1
    2126:	b292      	uxth	r2, r2
    2128:	6874      	ldr	r4, [r6, #4]
    212a:	0053      	lsls	r3, r2, #1
    212c:	189b      	adds	r3, r3, r2
    212e:	00db      	lsls	r3, r3, #3
    2130:	001f      	movs	r7, r3
    2132:	5ae4      	ldrh	r4, [r4, r3]
    2134:	428c      	cmp	r4, r1
    2136:	d003      	beq.n	2140 <.LLST11+0x12>
    2138:	6874      	ldr	r4, [r6, #4]
    213a:	5ae3      	ldrh	r3, [r4, r3]
    213c:	2b00      	cmp	r3, #0
    213e:	d1f1      	bne.n	2124 <.LLST12+0x16>
    2140:	6873      	ldr	r3, [r6, #4]
    2142:	5bdb      	ldrh	r3, [r3, r7]
    2144:	2b00      	cmp	r3, #0
    2146:	d017      	beq.n	2178 <.LVL61+0xa>
    2148:	6873      	ldr	r3, [r6, #4]
    214a:	7a2a      	ldrb	r2, [r5, #8]
    214c:	3a05      	subs	r2, #5
    214e:	b2d2      	uxtb	r2, r2
    2150:	4661      	mov	r1, ip
    2152:	3105      	adds	r1, #5
    2154:	19df      	adds	r7, r3, r7
    2156:	693b      	ldr	r3, [r7, #16]
    2158:	4798      	blx	r3
    215a:	2800      	cmp	r0, #0
    215c:	d111      	bne.n	2182 <.LVL66+0x2>
    215e:	2302      	movs	r3, #2
    2160:	722b      	strb	r3, [r5, #8]
    2162:	2300      	movs	r3, #0
    2164:	68ea      	ldr	r2, [r5, #12]
    2166:	7053      	strb	r3, [r2, #1]
    2168:	686b      	ldr	r3, [r5, #4]
    216a:	0028      	movs	r0, r5
    216c:	4798      	blx	r3

0000216e <.LVL61>:
    216e:	e007      	b.n	2180 <.LVL66>
    2170:	2700      	movs	r7, #0
    2172:	e7e5      	b.n	2140 <.LLST11+0x12>
    2174:	2700      	movs	r7, #0
    2176:	e7e3      	b.n	2140 <.LLST11+0x12>
    2178:	2141      	movs	r1, #65	; 0x41
    217a:	0028      	movs	r0, r5
    217c:	f7ff fb1f 	bl	17be <sendError>

00002180 <.LVL66>:
    2180:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2182:	2114      	movs	r1, #20
    2184:	0028      	movs	r0, r5
    2186:	f7ff fb1a 	bl	17be <sendError>

0000218a <.LVL69>:
    218a:	e7f9      	b.n	2180 <.LVL66>
    218c:	20007dd8 	.word	0x20007dd8

00002190 <getBlockData>:
    2190:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2192:	0005      	movs	r5, r0
    2194:	68c1      	ldr	r1, [r0, #12]
    2196:	7888      	ldrb	r0, [r1, #2]
    2198:	0200      	lsls	r0, r0, #8
    219a:	78cb      	ldrb	r3, [r1, #3]
    219c:	041b      	lsls	r3, r3, #16
    219e:	18c0      	adds	r0, r0, r3
    21a0:	784b      	ldrb	r3, [r1, #1]
    21a2:	18c0      	adds	r0, r0, r3
    21a4:	790b      	ldrb	r3, [r1, #4]
    21a6:	061b      	lsls	r3, r3, #24
    21a8:	4684      	mov	ip, r0
    21aa:	449c      	add	ip, r3
    21ac:	4663      	mov	r3, ip
    21ae:	881f      	ldrh	r7, [r3, #0]
    21b0:	4b1a      	ldr	r3, [pc, #104]	; (221c <.LVL84+0x4>)
    21b2:	681e      	ldr	r6, [r3, #0]
    21b4:	6873      	ldr	r3, [r6, #4]
    21b6:	881b      	ldrh	r3, [r3, #0]
    21b8:	42bb      	cmp	r3, r7
    21ba:	d025      	beq.n	2208 <.LVL79+0x2>
    21bc:	6873      	ldr	r3, [r6, #4]
    21be:	881b      	ldrh	r3, [r3, #0]
    21c0:	2b00      	cmp	r3, #0
    21c2:	d023      	beq.n	220c <.LVL79+0x6>
    21c4:	2200      	movs	r2, #0
    21c6:	3201      	adds	r2, #1
    21c8:	b292      	uxth	r2, r2
    21ca:	6874      	ldr	r4, [r6, #4]
    21cc:	0053      	lsls	r3, r2, #1
    21ce:	189b      	adds	r3, r3, r2
    21d0:	00db      	lsls	r3, r3, #3
    21d2:	0018      	movs	r0, r3
    21d4:	5ae4      	ldrh	r4, [r4, r3]
    21d6:	42bc      	cmp	r4, r7
    21d8:	d003      	beq.n	21e2 <.LLST26+0x5>
    21da:	6874      	ldr	r4, [r6, #4]
    21dc:	5ae3      	ldrh	r3, [r4, r3]
    21de:	2b00      	cmp	r3, #0
    21e0:	d1f1      	bne.n	21c6 <.LLST25+0x20>
    21e2:	6873      	ldr	r3, [r6, #4]
    21e4:	5a1b      	ldrh	r3, [r3, r0]
    21e6:	2b00      	cmp	r3, #0
    21e8:	d012      	beq.n	2210 <.LVL79+0xa>
    21ea:	6873      	ldr	r3, [r6, #4]
    21ec:	3102      	adds	r1, #2
    21ee:	1818      	adds	r0, r3, r0
    21f0:	68c3      	ldr	r3, [r0, #12]
    21f2:	4660      	mov	r0, ip
    21f4:	4798      	blx	r3
    21f6:	3002      	adds	r0, #2
    21f8:	7228      	strb	r0, [r5, #8]
    21fa:	2300      	movs	r3, #0
    21fc:	68ea      	ldr	r2, [r5, #12]
    21fe:	7053      	strb	r3, [r2, #1]
    2200:	686b      	ldr	r3, [r5, #4]
    2202:	0028      	movs	r0, r5
    2204:	4798      	blx	r3

00002206 <.LVL79>:
    2206:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2208:	2000      	movs	r0, #0
    220a:	e7ea      	b.n	21e2 <.LLST26+0x5>
    220c:	2000      	movs	r0, #0
    220e:	e7e8      	b.n	21e2 <.LLST26+0x5>
    2210:	2141      	movs	r1, #65	; 0x41
    2212:	0028      	movs	r0, r5
    2214:	f7ff fad3 	bl	17be <sendError>

00002218 <.LVL84>:
    2218:	e7f5      	b.n	2206 <.LVL79>
    221a:	46c0      	nop			; (mov r8, r8)
    221c:	20007dd8 	.word	0x20007dd8

00002220 <addBlockServices>:
    2220:	6903      	ldr	r3, [r0, #16]
    2222:	4a03      	ldr	r2, [pc, #12]	; (2230 <addBlockServices+0x10>)
    2224:	625a      	str	r2, [r3, #36]	; 0x24
    2226:	4a03      	ldr	r2, [pc, #12]	; (2234 <.LLST28+0x3>)
    2228:	61da      	str	r2, [r3, #28]
    222a:	4a03      	ldr	r2, [pc, #12]	; (2238 <.LLST28+0x7>)
    222c:	621a      	str	r2, [r3, #32]
    222e:	4770      	bx	lr
    2230:	00002023 	.word	0x00002023
    2234:	00002191 	.word	0x00002191
    2238:	000020ed 	.word	0x000020ed

0000223c <addExtendedBlockServices>:
    223c:	6903      	ldr	r3, [r0, #16]
    223e:	4a01      	ldr	r2, [pc, #4]	; (2244 <addExtendedBlockServices+0x8>)
    2240:	629a      	str	r2, [r3, #40]	; 0x28
    2242:	4770      	bx	lr
    2244:	00001f45 	.word	0x00001f45

Disassembly of section .rodata.sin_table%25:

00002248 <sin_table>:
    2248:	00650000 012e00c9 01f70192 02c0025b     ..e.........[...
    2258:	03880324 045103ed 051a04b5 05e2057e     $.....Q.....~...
    2268:	06aa0646 0772070e 083907d6 0901089d     F.....r...9.....
    2278:	09c70964 0a8e0a2b 0b540af1 0c1a0bb7     d...+.....T.....
    2288:	0cdf0c7c 0da40d41 0e680e06 0f2b0eca     |...A.....h...+.
    2298:	0fee0f8d 10b11050 11731112 123411d3     ....P.....s...4.
    22a8:	12f41294 13b41354 14731413 153114d2     ....T.....s...1.
    22b8:	15ee1590 16ab164c 17661709 182117c4     ....L.....f...!.
    22c8:	18db187e 19931937 1a4b19ef 1b021aa7     ~...7.....K.....
    22d8:	1bb81b5d 1c6c1c12 1d201cc6 1dd31d79     ].....l... .y...
    22e8:	1e841e2b 1f341edc 1fe31f8c 2091203a     +.....4.....: . 
    22f8:	213d20e7 21e82193 2292223d 233b22e7     . =!.!.!=".".";#
    2308:	23e2238e 24882435 252c24da 25cf257e     .#.#5$.$.$,%~%.%
    2318:	26712620 271126c1 27af2760 284c27fe      &q&.&.'`'.'.'L(
    2328:	28e7289a 29812935 2a1a29ce 2ab02a65     .(.(5).).).*e*.*
    2338:	2b452afb 2bd82b8f 2c6a2c21 2cfa2cb2     .*E+.+.+!,j,.,.,
    2348:	2d882d41 2e152dcf 2e9f2e5a 2f282ee4     A-.-.-..Z.....(/
    2358:	2faf2f6c 30342ff2 30b83076 313930f9     l/././40v0.0.091
    2368:	31b93179 323631f8 32b23274 332c32ef     y1.1.162t2.2.2,3
    2378:	33a33368 341933df 348d3453 34ff34c6     h3.3.3.4S4.4.4.4
    2388:	356e3537 35dc35a5 36483612 36b1367d     75n5.5.5.6H6}6.6
    2398:	371836e5 377e374b 37e137b0 38423812     .6.7K7~7.7.7.8B8
    23a8:	38a13871 38fd38cf 3958392b 39b03984     q8.8.8.8+9X9.9.9
    23b8:	3a0639db 3a593a30 3aab3a82 3afa3ad3     .9.:0:Y:.:.:.:.:
    23c8:	3b473b21 3b923b6d 3bda3bb6 3c203bfd     !;G;m;.;.;.;.; <
    23d8:	3c643c42 3ca53c85 3ce43cc5 3d213d03     B<d<.<.<.<.<.=!=
    23e8:	3d5b3d3f 3d933d78 3dc93daf 3dfc3de3     ?=[=x=.=.=.=.=.=
    23f8:	3e2d3e15 3e5c3e45 3e883e72 3eb13e9d     .>->E>\>r>.>.>.>
    2408:	3ed83ec5 3efd3eeb 3f203f0f 3f403f30     .>.>.>.>.? ?0?@?
    2418:	3f5d3f4f 3f783f6b 3f913f85 3fa73f9c     O?]?k?x?.?.?.?.?
    2428:	3fbb3fb1 3fcc3fc4 3fdb3fd4 3fe73fe1     .?.?.?.?.?.?.?.?
    2438:	3ff13fec 3ff83ff5 3ffd3ffb 40003fff     .?.?.?.?.?.?.?.@
    2448:	46c04000                                .@.F

Disassembly of section .text%26:

0000244c <sendSerialWrapper>:
    244c:	b510      	push	{r4, lr}
    244e:	4b02      	ldr	r3, [pc, #8]	; (2458 <sendSerialWrapper+0xc>)
    2450:	681b      	ldr	r3, [r3, #0]
    2452:	0008      	movs	r0, r1
    2454:	4798      	blx	r3
    2456:	bd10      	pop	{r4, pc}
    2458:	20007eb4 	.word	0x20007eb4

0000245c <receiveSerialWrapper>:
    245c:	b510      	push	{r4, lr}
    245e:	4b02      	ldr	r3, [pc, #8]	; (2468 <receiveSerialWrapper+0xc>)
    2460:	685b      	ldr	r3, [r3, #4]
    2462:	4798      	blx	r3
    2464:	bd10      	pop	{r4, pc}
    2466:	46c0      	nop			; (mov r8, r8)
    2468:	20007eb4 	.word	0x20007eb4

0000246c <isReceiveDataAvailableWrapper>:
    246c:	b510      	push	{r4, lr}
    246e:	4b02      	ldr	r3, [pc, #8]	; (2478 <isReceiveDataAvailableWrapper+0xc>)
    2470:	689b      	ldr	r3, [r3, #8]
    2472:	4798      	blx	r3
    2474:	bd10      	pop	{r4, pc}
    2476:	46c0      	nop			; (mov r8, r8)
    2478:	20007eb4 	.word	0x20007eb4

0000247c <isSendReadyWrapper>:
    247c:	b510      	push	{r4, lr}
    247e:	4b02      	ldr	r3, [pc, #8]	; (2488 <isSendReadyWrapper+0xc>)
    2480:	68db      	ldr	r3, [r3, #12]
    2482:	4798      	blx	r3
    2484:	bd10      	pop	{r4, pc}
    2486:	46c0      	nop			; (mov r8, r8)
    2488:	20007eb4 	.word	0x20007eb4

0000248c <X2CScope_Initialise>:
    248c:	b570      	push	{r4, r5, r6, lr}
    248e:	f000 fe9d 	bl	31cc <initTableStruct>

00002492 <.LVL9>:
    2492:	4d1d      	ldr	r5, [pc, #116]	; (2508 <.LVL21+0x4>)
    2494:	002e      	movs	r6, r5
    2496:	3610      	adds	r6, #16
    2498:	0030      	movs	r0, r6
    249a:	f000 fe7b 	bl	3194 <initSerialGeneric>

0000249e <.LVL10>:
    249e:	0029      	movs	r1, r5
    24a0:	3128      	adds	r1, #40	; 0x28
    24a2:	4c1a      	ldr	r4, [pc, #104]	; (250c <.LVL21+0x8>)
    24a4:	3428      	adds	r4, #40	; 0x28
    24a6:	2301      	movs	r3, #1
    24a8:	22ff      	movs	r2, #255	; 0xff
    24aa:	0020      	movs	r0, r4
    24ac:	f7ff fd3a 	bl	1f24 <initLNet>

000024b0 <.LVL11>:
    24b0:	0020      	movs	r0, r4
    24b2:	f7ff fb3b 	bl	1b2c <initServiceTable>

000024b6 <.LVL12>:
    24b6:	0020      	movs	r0, r4
    24b8:	f7ff fb46 	bl	1b48 <addCoreServices>

000024bc <.LVL13>:
    24bc:	0020      	movs	r0, r4
    24be:	f7ff feaf 	bl	2220 <addBlockServices>

000024c2 <.LVL14>:
    24c2:	0020      	movs	r0, r4
    24c4:	f7ff feba 	bl	223c <addExtendedBlockServices>

000024c8 <.LVL15>:
    24c8:	0020      	movs	r0, r4
    24ca:	f000 fe93 	bl	31f4 <addTableStructProtocol>

000024ce <.LVL16>:
    24ce:	0031      	movs	r1, r6
    24d0:	0020      	movs	r0, r4
    24d2:	f000 fe79 	bl	31c8 <linkSerial>

000024d6 <.LVL17>:
    24d6:	4c0e      	ldr	r4, [pc, #56]	; (2510 <.LVL21+0xc>)
    24d8:	2301      	movs	r3, #1
    24da:	6822      	ldr	r2, [r4, #0]
    24dc:	7313      	strb	r3, [r2, #12]
    24de:	2101      	movs	r1, #1
    24e0:	0010      	movs	r0, r2
    24e2:	f001 f957 	bl	3794 <.LFE54>

000024e6 <.LVL18>:
    24e6:	6823      	ldr	r3, [r4, #0]
    24e8:	4a0a      	ldr	r2, [pc, #40]	; (2514 <.Ldebug_abbrev0+0x2>)
    24ea:	605a      	str	r2, [r3, #4]
    24ec:	4a0a      	ldr	r2, [pc, #40]	; (2518 <.Ldebug_abbrev0+0x6>)
    24ee:	601a      	str	r2, [r3, #0]

000024f0 <.LBB4>:
    24f0:	4b0a      	ldr	r3, [pc, #40]	; (251c <.Ldebug_abbrev0+0xa>)
    24f2:	612b      	str	r3, [r5, #16]
    24f4:	4b0a      	ldr	r3, [pc, #40]	; (2520 <.Ldebug_abbrev0+0xe>)
    24f6:	616b      	str	r3, [r5, #20]
    24f8:	4b0a      	ldr	r3, [pc, #40]	; (2524 <.LLST16+0x3>)
    24fa:	61ab      	str	r3, [r5, #24]
    24fc:	4b0a      	ldr	r3, [pc, #40]	; (2528 <.LLST16+0x7>)
    24fe:	61eb      	str	r3, [r5, #28]

00002500 <.LBE4>:
    2500:	f001 f8b4 	bl	366c <.LFE47>

00002504 <.LVL21>:
    2504:	bd70      	pop	{r4, r5, r6, pc}
    2506:	46c0      	nop			; (mov r8, r8)
    2508:	20007eb4 	.word	0x20007eb4
    250c:	20007fb4 	.word	0x20007fb4
    2510:	20007dd8 	.word	0x20007dd8
    2514:	00003344 	.word	0x00003344
    2518:	00003334 	.word	0x00003334
    251c:	0000244d 	.word	0x0000244d
    2520:	0000245d 	.word	0x0000245d
    2524:	0000246d 	.word	0x0000246d
    2528:	0000247d 	.word	0x0000247d

0000252c <X2CScope_Communicate>:
    252c:	b510      	push	{r4, lr}
    252e:	4b03      	ldr	r3, [pc, #12]	; (253c <.LVL22+0x4>)
    2530:	0018      	movs	r0, r3
    2532:	3028      	adds	r0, #40	; 0x28
    2534:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2536:	4798      	blx	r3

00002538 <.LVL22>:
    2538:	bd10      	pop	{r4, pc}
    253a:	46c0      	nop			; (mov r8, r8)
    253c:	20007fb4 	.word	0x20007fb4

00002540 <X2CScope_Update>:
    2540:	b510      	push	{r4, lr}
    2542:	f001 f89b 	bl	367c <X2C_Update>

00002546 <.LVL23>:
    2546:	bd10      	pop	{r4, pc}

00002548 <X2CScope_HookUARTFunctions>:
    2548:	b510      	push	{r4, lr}
    254a:	4c03      	ldr	r4, [pc, #12]	; (2558 <.LLST18+0x2>)
    254c:	6020      	str	r0, [r4, #0]
    254e:	6061      	str	r1, [r4, #4]
    2550:	60a2      	str	r2, [r4, #8]
    2552:	60e3      	str	r3, [r4, #12]
    2554:	bd10      	pop	{r4, pc}
    2556:	46c0      	nop			; (mov r8, r8)
    2558:	20007eb4 	.word	0x20007eb4

0000255c <initSerial>:
    255c:	4b04      	ldr	r3, [pc, #16]	; (2570 <initSerial+0x14>)
    255e:	6003      	str	r3, [r0, #0]
    2560:	4b04      	ldr	r3, [pc, #16]	; (2574 <initSerial+0x18>)
    2562:	6043      	str	r3, [r0, #4]
    2564:	4b04      	ldr	r3, [pc, #16]	; (2578 <initSerial+0x1c>)
    2566:	6083      	str	r3, [r0, #8]
    2568:	4b04      	ldr	r3, [pc, #16]	; (257c <initSerial+0x20>)
    256a:	60c3      	str	r3, [r0, #12]
    256c:	4770      	bx	lr
    256e:	46c0      	nop			; (mov r8, r8)
    2570:	0000244d 	.word	0x0000244d
    2574:	0000245d 	.word	0x0000245d
    2578:	0000246d 	.word	0x0000246d
    257c:	0000247d 	.word	0x0000247d

Disassembly of section .text.CLOCK_Initialize%27:

00002580 <CLOCK_Initialize>:
}

void CLOCK_Initialize (void)
{
    /* NVM Wait States */
    NVMCTRL_REGS->NVMCTRL_CTRLB |= NVMCTRL_CTRLB_RWS(NVMCTRL_CTRLB_RWS_DUAL_Val);
    2580:	4a34      	ldr	r2, [pc, #208]	; (2654 <.LLST2+0x28>)
    2582:	6853      	ldr	r3, [r2, #4]
    2584:	2104      	movs	r1, #4
    2586:	430b      	orrs	r3, r1
    2588:	6053      	str	r3, [r2, #4]

0000258a <.LBB8>:
    uint32_t calibValue = (uint32_t)(((*(uint64_t*)0x806020) >> 19 ) & 0x3fffff);
    258a:	4b33      	ldr	r3, [pc, #204]	; (2658 <.LLST2+0x2c>)
    258c:	685a      	ldr	r2, [r3, #4]
    258e:	0352      	lsls	r2, r2, #13
    2590:	681b      	ldr	r3, [r3, #0]
    2592:	0cdb      	lsrs	r3, r3, #19
    2594:	4313      	orrs	r3, r2
    2596:	029b      	lsls	r3, r3, #10
    2598:	0a9b      	lsrs	r3, r3, #10

0000259a <.LVL0>:
    OSCCTRL_REGS->OSCCTRL_CAL48M = calibValue;
    259a:	4a30      	ldr	r2, [pc, #192]	; (265c <.LLST2+0x30>)
    259c:	6393      	str	r3, [r2, #56]	; 0x38
    OSCCTRL_REGS->OSCCTRL_OSC48MDIV = OSCCTRL_OSC48MDIV_DIV(0);
    259e:	2300      	movs	r3, #0

000025a0 <.LVL1>:
    25a0:	7553      	strb	r3, [r2, #21]

000025a2 <.LVL2>:
    while((OSCCTRL_REGS->OSCCTRL_OSC48MSYNCBUSY & OSCCTRL_OSC48MSYNCBUSY_OSC48MDIV_Msk) == OSCCTRL_OSC48MSYNCBUSY_OSC48MDIV_Msk)
    25a2:	0011      	movs	r1, r2
    25a4:	2204      	movs	r2, #4
    25a6:	698b      	ldr	r3, [r1, #24]
    25a8:	421a      	tst	r2, r3
    25aa:	d1fc      	bne.n	25a6 <.LVL2+0x4>
    while((OSCCTRL_REGS->OSCCTRL_STATUS & OSCCTRL_STATUS_OSC48MRDY_Msk) != OSCCTRL_STATUS_OSC48MRDY_Msk)
    25ac:	492b      	ldr	r1, [pc, #172]	; (265c <.LLST2+0x30>)
    25ae:	2210      	movs	r2, #16
    25b0:	68cb      	ldr	r3, [r1, #12]
    25b2:	421a      	tst	r2, r3
    25b4:	d0fc      	beq.n	25b0 <.LVL2+0xe>

000025b6 <.LBB10>:
	OSC32KCTRL_REGS->OSC32KCTRL_OSC32K = 0x0;
    25b6:	4b2a      	ldr	r3, [pc, #168]	; (2660 <.LLST2+0x34>)
    25b8:	2200      	movs	r2, #0
    25ba:	619a      	str	r2, [r3, #24]
	OSC32KCTRL_REGS->OSC32KCTRL_RTCCTRL = OSC32KCTRL_RTCCTRL_RTCSEL(0);
    25bc:	611a      	str	r2, [r3, #16]

000025be <.LBB12>:
    GCLK_REGS->GCLK_GENCTRL[0] = GCLK_GENCTRL_DIV(1) | GCLK_GENCTRL_SRC(6) | GCLK_GENCTRL_GENEN_Msk;
    25be:	4a29      	ldr	r2, [pc, #164]	; (2664 <.LLST3+0x2>)
    25c0:	4b29      	ldr	r3, [pc, #164]	; (2668 <.LLST3+0x6>)
    25c2:	621a      	str	r2, [r3, #32]
    while((GCLK_REGS->GCLK_SYNCBUSY & GCLK_SYNCBUSY_GENCTRL0_Msk) == GCLK_SYNCBUSY_GENCTRL0_Msk)
    25c4:	0019      	movs	r1, r3
    25c6:	2204      	movs	r2, #4
    25c8:	684b      	ldr	r3, [r1, #4]
    25ca:	421a      	tst	r2, r3
    25cc:	d1fc      	bne.n	25c8 <.LBB12+0xa>

000025ce <.LBE12>:
   GCLK0_Initialize();



	/* Selection of the Generator and write Lock for EIC */
    GCLK_REGS->GCLK_PCHCTRL[2] = GCLK_PCHCTRL_GEN(0x0)  | GCLK_PCHCTRL_CHEN_Msk;
    25ce:	2140      	movs	r1, #64	; 0x40
    25d0:	2388      	movs	r3, #136	; 0x88
    25d2:	4a25      	ldr	r2, [pc, #148]	; (2668 <.LLST3+0x6>)
    25d4:	50d1      	str	r1, [r2, r3]

    while ((GCLK_REGS->GCLK_PCHCTRL[2] & GCLK_PCHCTRL_CHEN_Msk) != GCLK_PCHCTRL_CHEN_Msk)
    25d6:	0010      	movs	r0, r2
    25d8:	3148      	adds	r1, #72	; 0x48
    25da:	2240      	movs	r2, #64	; 0x40
    25dc:	5843      	ldr	r3, [r0, r1]
    25de:	421a      	tst	r2, r3
    25e0:	d0fc      	beq.n	25dc <.LBE12+0xe>
    {
        /* Wait for synchronization */
    }
	/* Selection of the Generator and write Lock for EVSYS_0 */
    GCLK_REGS->GCLK_PCHCTRL[6] = GCLK_PCHCTRL_GEN(0x0)  | GCLK_PCHCTRL_CHEN_Msk;
    25e2:	2140      	movs	r1, #64	; 0x40
    25e4:	2398      	movs	r3, #152	; 0x98
    25e6:	4a20      	ldr	r2, [pc, #128]	; (2668 <.LLST3+0x6>)
    25e8:	50d1      	str	r1, [r2, r3]

    while ((GCLK_REGS->GCLK_PCHCTRL[6] & GCLK_PCHCTRL_CHEN_Msk) != GCLK_PCHCTRL_CHEN_Msk)
    25ea:	0010      	movs	r0, r2
    25ec:	3158      	adds	r1, #88	; 0x58
    25ee:	2240      	movs	r2, #64	; 0x40
    25f0:	5843      	ldr	r3, [r0, r1]
    25f2:	421a      	tst	r2, r3
    25f4:	d0fc      	beq.n	25f0 <.LLST0+0x10>
    {
        /* Wait for synchronization */
    }
	/* Selection of the Generator and write Lock for EVSYS_1 */
    GCLK_REGS->GCLK_PCHCTRL[7] = GCLK_PCHCTRL_GEN(0x0)  | GCLK_PCHCTRL_CHEN_Msk;
    25f6:	2140      	movs	r1, #64	; 0x40
    25f8:	239c      	movs	r3, #156	; 0x9c
    25fa:	4a1b      	ldr	r2, [pc, #108]	; (2668 <.LLST3+0x6>)
    25fc:	50d1      	str	r1, [r2, r3]

    while ((GCLK_REGS->GCLK_PCHCTRL[7] & GCLK_PCHCTRL_CHEN_Msk) != GCLK_PCHCTRL_CHEN_Msk)
    25fe:	0010      	movs	r0, r2
    2600:	315c      	adds	r1, #92	; 0x5c
    2602:	2240      	movs	r2, #64	; 0x40
    2604:	5843      	ldr	r3, [r0, r1]
    2606:	421a      	tst	r2, r3
    2608:	d0fc      	beq.n	2604 <.LLST1+0x4>
    {
        /* Wait for synchronization */
    }
	/* Selection of the Generator and write Lock for SERCOM3_CORE */
    GCLK_REGS->GCLK_PCHCTRL[22] = GCLK_PCHCTRL_GEN(0x0)  | GCLK_PCHCTRL_CHEN_Msk;
    260a:	2140      	movs	r1, #64	; 0x40
    260c:	23d8      	movs	r3, #216	; 0xd8
    260e:	4a16      	ldr	r2, [pc, #88]	; (2668 <.LLST3+0x6>)
    2610:	50d1      	str	r1, [r2, r3]

    while ((GCLK_REGS->GCLK_PCHCTRL[22] & GCLK_PCHCTRL_CHEN_Msk) != GCLK_PCHCTRL_CHEN_Msk)
    2612:	0010      	movs	r0, r2
    2614:	3198      	adds	r1, #152	; 0x98
    2616:	2240      	movs	r2, #64	; 0x40
    2618:	5843      	ldr	r3, [r0, r1]
    261a:	421a      	tst	r2, r3
    261c:	d0fc      	beq.n	2618 <.LLST1+0x18>
    {
        /* Wait for synchronization */
    }
	/* Selection of the Generator and write Lock for TCC0 TCC1 */
    GCLK_REGS->GCLK_PCHCTRL[28] = GCLK_PCHCTRL_GEN(0x0)  | GCLK_PCHCTRL_CHEN_Msk;
    261e:	2140      	movs	r1, #64	; 0x40
    2620:	23f0      	movs	r3, #240	; 0xf0
    2622:	4a11      	ldr	r2, [pc, #68]	; (2668 <.LLST3+0x6>)
    2624:	50d1      	str	r1, [r2, r3]

    while ((GCLK_REGS->GCLK_PCHCTRL[28] & GCLK_PCHCTRL_CHEN_Msk) != GCLK_PCHCTRL_CHEN_Msk)
    2626:	0010      	movs	r0, r2
    2628:	31b0      	adds	r1, #176	; 0xb0
    262a:	2240      	movs	r2, #64	; 0x40
    262c:	5843      	ldr	r3, [r0, r1]
    262e:	421a      	tst	r2, r3
    2630:	d0fc      	beq.n	262c <.LLST2>
    {
        /* Wait for synchronization */
    }
	/* Selection of the Generator and write Lock for ADC1 */
    GCLK_REGS->GCLK_PCHCTRL[34] = GCLK_PCHCTRL_GEN(0x0)  | GCLK_PCHCTRL_CHEN_Msk;
    2632:	2140      	movs	r1, #64	; 0x40
    2634:	2384      	movs	r3, #132	; 0x84
    2636:	005b      	lsls	r3, r3, #1
    2638:	4a0b      	ldr	r2, [pc, #44]	; (2668 <.LLST3+0x6>)
    263a:	50d1      	str	r1, [r2, r3]

    while ((GCLK_REGS->GCLK_PCHCTRL[34] & GCLK_PCHCTRL_CHEN_Msk) != GCLK_PCHCTRL_CHEN_Msk)
    263c:	0010      	movs	r0, r2
    263e:	0019      	movs	r1, r3
    2640:	2240      	movs	r2, #64	; 0x40
    2642:	5843      	ldr	r3, [r0, r1]
    2644:	421a      	tst	r2, r3
    2646:	d0fc      	beq.n	2642 <.LLST2+0x16>
    {
        /* Wait for synchronization */
    }

    /* Configure the AHB Bridge Clocks */
    MCLK_REGS->MCLK_AHBMASK = 0x1cff;
    2648:	4b08      	ldr	r3, [pc, #32]	; (266c <.LLST3+0xa>)
    264a:	4a09      	ldr	r2, [pc, #36]	; (2670 <.LLST3+0xe>)
    264c:	611a      	str	r2, [r3, #16]

    /* Configure the APBC Bridge Clocks */
    MCLK_REGS->MCLK_APBCMASK = 0x40211;
    264e:	4a09      	ldr	r2, [pc, #36]	; (2674 <.LLST3+0x12>)
    2650:	61da      	str	r2, [r3, #28]

}
    2652:	4770      	bx	lr
    2654:	41004000 	.word	0x41004000
    2658:	00806020 	.word	0x00806020
    265c:	40001000 	.word	0x40001000
    2660:	40001400 	.word	0x40001400
    2664:	00010106 	.word	0x00010106
    2668:	40001c00 	.word	0x40001c00
    266c:	40000800 	.word	0x40000800
    2670:	00001cff 	.word	0x00001cff
    2674:	00040211 	.word	0x00040211

Disassembly of section .text%28:

00002678 <Common_Init>:
    2678:	4770      	bx	lr

0000267a <Common_Update>:
    267a:	4770      	bx	lr

0000267c <Common_Load>:
    267c:	2000      	movs	r0, #0
    267e:	4770      	bx	lr

00002680 <Common_Save>:
    2680:	1e50      	subs	r0, r2, #1
    2682:	4182      	sbcs	r2, r0
    2684:	b210      	sxth	r0, r2
    2686:	4770      	bx	lr

00002688 <Common_GetAddress>:
    2688:	2000      	movs	r0, #0
    268a:	4770      	bx	lr

0000268c <getAbsValI8>:
    268c:	237f      	movs	r3, #127	; 0x7f
    268e:	0002      	movs	r2, r0
    2690:	3280      	adds	r2, #128	; 0x80
    2692:	d001      	beq.n	2698 <getAbsValI8+0xc>
    2694:	1e03      	subs	r3, r0, #0
    2696:	db01      	blt.n	269c <getAbsValI8+0x10>
    2698:	0018      	movs	r0, r3
    269a:	4770      	bx	lr
    269c:	4240      	negs	r0, r0
    269e:	b243      	sxtb	r3, r0
    26a0:	e7fa      	b.n	2698 <getAbsValI8+0xc>

000026a2 <getAbsValI16>:
    26a2:	4b05      	ldr	r3, [pc, #20]	; (26b8 <.Ldebug_line0>)
    26a4:	4298      	cmp	r0, r3
    26a6:	d004      	beq.n	26b2 <.LLST5+0x9>
    26a8:	1e03      	subs	r3, r0, #0
    26aa:	da03      	bge.n	26b4 <.LLST5+0xb>
    26ac:	4240      	negs	r0, r0
    26ae:	b203      	sxth	r3, r0
    26b0:	e000      	b.n	26b4 <.LLST5+0xb>
    26b2:	4b02      	ldr	r3, [pc, #8]	; (26bc <.Ldebug_line0+0x4>)
    26b4:	0018      	movs	r0, r3
    26b6:	4770      	bx	lr
    26b8:	ffff8000 	.word	0xffff8000
    26bc:	00007fff 	.word	0x00007fff

000026c0 <getAbsValI32>:
    26c0:	2380      	movs	r3, #128	; 0x80
    26c2:	061b      	lsls	r3, r3, #24
    26c4:	4298      	cmp	r0, r3
    26c6:	d003      	beq.n	26d0 <getAbsValI32+0x10>
    26c8:	17c3      	asrs	r3, r0, #31
    26ca:	18c0      	adds	r0, r0, r3
    26cc:	4058      	eors	r0, r3
    26ce:	4770      	bx	lr
    26d0:	4800      	ldr	r0, [pc, #0]	; (26d4 <getAbsValI32+0x14>)
    26d2:	e7fc      	b.n	26ce <getAbsValI32+0xe>
    26d4:	7fffffff 	.word	0x7fffffff

000026d8 <getAbsValI64>:
    26d8:	b530      	push	{r4, r5, lr}
    26da:	2800      	cmp	r0, #0
    26dc:	d00a      	beq.n	26f4 <.LLST8+0x7>
    26de:	17cc      	asrs	r4, r1, #31
    26e0:	0025      	movs	r5, r4
    26e2:	4060      	eors	r0, r4
    26e4:	0002      	movs	r2, r0
    26e6:	4061      	eors	r1, r4
    26e8:	000b      	movs	r3, r1
    26ea:	1b12      	subs	r2, r2, r4
    26ec:	41ab      	sbcs	r3, r5
    26ee:	0010      	movs	r0, r2
    26f0:	0019      	movs	r1, r3
    26f2:	bd30      	pop	{r4, r5, pc}
    26f4:	2380      	movs	r3, #128	; 0x80
    26f6:	061b      	lsls	r3, r3, #24
    26f8:	4299      	cmp	r1, r3
    26fa:	d1f0      	bne.n	26de <getAbsValI64+0x6>
    26fc:	2201      	movs	r2, #1
    26fe:	4252      	negs	r2, r2
    2700:	4b00      	ldr	r3, [pc, #0]	; (2704 <.LLST8+0x17>)
    2702:	e7f4      	b.n	26ee <.LLST8+0x1>
    2704:	7fffffff 	.word	0x7fffffff

00002708 <getAbsValR32>:
    2708:	b510      	push	{r4, lr}
    270a:	1c04      	adds	r4, r0, #0
    270c:	2100      	movs	r1, #0
    270e:	f000 fb2f 	bl	2d70 <__aeabi_fcmplt>
    2712:	2800      	cmp	r0, #0
    2714:	d101      	bne.n	271a <getAbsValR32+0x12>
    2716:	1c20      	adds	r0, r4, #0
    2718:	bd10      	pop	{r4, pc}
    271a:	2380      	movs	r3, #128	; 0x80
    271c:	061b      	lsls	r3, r3, #24
    271e:	469c      	mov	ip, r3
    2720:	4464      	add	r4, ip
    2722:	e7f8      	b.n	2716 <getAbsValR32+0xe>

00002724 <getAbsValR64>:
    2724:	b570      	push	{r4, r5, r6, lr}
    2726:	0005      	movs	r5, r0
    2728:	000c      	movs	r4, r1
    272a:	2200      	movs	r2, #0
    272c:	2300      	movs	r3, #0
    272e:	0028      	movs	r0, r5
    2730:	0021      	movs	r1, r4
    2732:	f000 faa9 	bl	2c88 <__aeabi_dcmplt>
    2736:	2800      	cmp	r0, #0
    2738:	d102      	bne.n	2740 <getAbsValR64+0x1c>
    273a:	0028      	movs	r0, r5
    273c:	0021      	movs	r1, r4
    273e:	bd70      	pop	{r4, r5, r6, pc}
    2740:	2380      	movs	r3, #128	; 0x80
    2742:	061b      	lsls	r3, r3, #24
    2744:	469c      	mov	ip, r3
    2746:	4464      	add	r4, ip
    2748:	e7f7      	b.n	273a <getAbsValR64+0x16>

0000274a <.LFE10>:
    274a:	46c0      	nop			; (mov r8, r8)

Disassembly of section .text.__register_exitproc%29:

0000274c <__register_exitproc>:
    274c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

0000274e <.LCFI0>:
    274e:	46de      	mov	lr, fp
    2750:	469b      	mov	fp, r3
    2752:	4b31      	ldr	r3, [pc, #196]	; (2818 <.LVL20+0x6>)

00002754 <.LVL1>:
    2754:	4645      	mov	r5, r8
    2756:	681c      	ldr	r4, [r3, #0]
    2758:	23a4      	movs	r3, #164	; 0xa4
    275a:	464e      	mov	r6, r9
    275c:	4657      	mov	r7, sl
    275e:	005b      	lsls	r3, r3, #1
    2760:	b5e0      	push	{r5, r6, r7, lr}

00002762 <.LCFI1>:
    2762:	0005      	movs	r5, r0
    2764:	58e0      	ldr	r0, [r4, r3]

00002766 <.LVL2>:
    2766:	000e      	movs	r6, r1
    2768:	4690      	mov	r8, r2
    276a:	2800      	cmp	r0, #0
    276c:	d04b      	beq.n	2806 <.LVL16>
    276e:	6843      	ldr	r3, [r0, #4]
    2770:	2b1f      	cmp	r3, #31
    2772:	dc0d      	bgt.n	2790 <.LVL7>
    2774:	1c5c      	adds	r4, r3, #1
    2776:	2d00      	cmp	r5, #0
    2778:	d121      	bne.n	27be <.LVL10>

0000277a <.LVL3>:
    277a:	3302      	adds	r3, #2
    277c:	009b      	lsls	r3, r3, #2
    277e:	6044      	str	r4, [r0, #4]
    2780:	501e      	str	r6, [r3, r0]
    2782:	2000      	movs	r0, #0

00002784 <.LVL4>:
    2784:	bc3c      	pop	{r2, r3, r4, r5}
    2786:	4690      	mov	r8, r2
    2788:	4699      	mov	r9, r3
    278a:	46a2      	mov	sl, r4
    278c:	46ab      	mov	fp, r5
    278e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00002790 <.LVL7>:
    2790:	4b22      	ldr	r3, [pc, #136]	; (281c <.LVL20+0xa>)
    2792:	2b00      	cmp	r3, #0
    2794:	d03c      	beq.n	2810 <.LVL19>
    2796:	20c8      	movs	r0, #200	; 0xc8

00002798 <.LVL8>:
    2798:	0040      	lsls	r0, r0, #1
    279a:	e000      	b.n	279e <.LVL9>
    279c:	bf00      	nop

0000279e <.LVL9>:
    279e:	2800      	cmp	r0, #0
    27a0:	d036      	beq.n	2810 <.LVL19>
    27a2:	22a4      	movs	r2, #164	; 0xa4
    27a4:	2300      	movs	r3, #0
    27a6:	0052      	lsls	r2, r2, #1
    27a8:	58a1      	ldr	r1, [r4, r2]
    27aa:	6043      	str	r3, [r0, #4]
    27ac:	6001      	str	r1, [r0, #0]
    27ae:	50a0      	str	r0, [r4, r2]
    27b0:	3240      	adds	r2, #64	; 0x40
    27b2:	5083      	str	r3, [r0, r2]
    27b4:	3204      	adds	r2, #4
    27b6:	5083      	str	r3, [r0, r2]
    27b8:	2401      	movs	r4, #1
    27ba:	2d00      	cmp	r5, #0
    27bc:	d0dd      	beq.n	277a <.LVL3>

000027be <.LVL10>:
    27be:	009a      	lsls	r2, r3, #2
    27c0:	4691      	mov	r9, r2
    27c2:	4481      	add	r9, r0
    27c4:	4642      	mov	r2, r8
    27c6:	2188      	movs	r1, #136	; 0x88
    27c8:	464f      	mov	r7, r9
    27ca:	507a      	str	r2, [r7, r1]
    27cc:	22c4      	movs	r2, #196	; 0xc4
    27ce:	0052      	lsls	r2, r2, #1
    27d0:	4690      	mov	r8, r2

000027d2 <.LVL11>:
    27d2:	4480      	add	r8, r0
    27d4:	4642      	mov	r2, r8
    27d6:	3987      	subs	r1, #135	; 0x87

000027d8 <.LVL12>:
    27d8:	4099      	lsls	r1, r3
    27da:	6812      	ldr	r2, [r2, #0]
    27dc:	468a      	mov	sl, r1
    27de:	430a      	orrs	r2, r1
    27e0:	4694      	mov	ip, r2
    27e2:	4642      	mov	r2, r8
    27e4:	4661      	mov	r1, ip
    27e6:	6011      	str	r1, [r2, #0]

000027e8 <.LVL13>:
    27e8:	2284      	movs	r2, #132	; 0x84
    27ea:	4649      	mov	r1, r9
    27ec:	465f      	mov	r7, fp
    27ee:	0052      	lsls	r2, r2, #1
    27f0:	508f      	str	r7, [r1, r2]
    27f2:	2d02      	cmp	r5, #2
    27f4:	d1c1      	bne.n	277a <.LVL3>

000027f6 <.LVL14>:
    27f6:	0002      	movs	r2, r0
    27f8:	4655      	mov	r5, sl

000027fa <.LVL15>:
    27fa:	328d      	adds	r2, #141	; 0x8d
    27fc:	32ff      	adds	r2, #255	; 0xff
    27fe:	6811      	ldr	r1, [r2, #0]
    2800:	430d      	orrs	r5, r1
    2802:	6015      	str	r5, [r2, #0]
    2804:	e7b9      	b.n	277a <.LVL3>

00002806 <.LVL16>:
    2806:	0020      	movs	r0, r4

00002808 <.LVL17>:
    2808:	304d      	adds	r0, #77	; 0x4d
    280a:	30ff      	adds	r0, #255	; 0xff

0000280c <.LVL18>:
    280c:	50e0      	str	r0, [r4, r3]
    280e:	e7ae      	b.n	276e <.LVL2+0x8>

00002810 <.LVL19>:
    2810:	2001      	movs	r0, #1

00002812 <.LVL20>:
    2812:	4240      	negs	r0, r0
    2814:	e7b6      	b.n	2784 <.LVL4>
    2816:	46c0      	nop			; (mov r8, r8)
    2818:	000037a0 	.word	0x000037a0
    281c:	00000000 	.word	0x00000000

Disassembly of section .text%30:

00002820 <__gedf2>:
    2820:	b5f0      	push	{r4, r5, r6, r7, lr}
    2822:	4645      	mov	r5, r8
    2824:	46de      	mov	lr, fp
    2826:	4657      	mov	r7, sl
    2828:	464e      	mov	r6, r9
    282a:	b5e0      	push	{r5, r6, r7, lr}
    282c:	031f      	lsls	r7, r3, #12
    282e:	0b3d      	lsrs	r5, r7, #12
    2830:	4f2c      	ldr	r7, [pc, #176]	; (28e4 <.LLST5+0x66>)
    2832:	030e      	lsls	r6, r1, #12
    2834:	004c      	lsls	r4, r1, #1
    2836:	46ab      	mov	fp, r5
    2838:	005d      	lsls	r5, r3, #1
    283a:	4684      	mov	ip, r0
    283c:	0b36      	lsrs	r6, r6, #12
    283e:	0d64      	lsrs	r4, r4, #21
    2840:	0fc9      	lsrs	r1, r1, #31
    2842:	4690      	mov	r8, r2
    2844:	0d6d      	lsrs	r5, r5, #21
    2846:	0fdb      	lsrs	r3, r3, #31
    2848:	42bc      	cmp	r4, r7
    284a:	d02a      	beq.n	28a2 <.LLST5+0x24>
    284c:	4f25      	ldr	r7, [pc, #148]	; (28e4 <.LLST5+0x66>)
    284e:	42bd      	cmp	r5, r7
    2850:	d02d      	beq.n	28ae <.LLST5+0x30>
    2852:	2c00      	cmp	r4, #0
    2854:	d10f      	bne.n	2876 <.LLST4+0xc>
    2856:	4330      	orrs	r0, r6
    2858:	0007      	movs	r7, r0
    285a:	4681      	mov	r9, r0
    285c:	4278      	negs	r0, r7
    285e:	4178      	adcs	r0, r7
    2860:	b2c0      	uxtb	r0, r0
    2862:	2d00      	cmp	r5, #0
    2864:	d117      	bne.n	2896 <.LLST5+0x18>
    2866:	465f      	mov	r7, fp
    2868:	433a      	orrs	r2, r7
    286a:	d114      	bne.n	2896 <.LLST5+0x18>
    286c:	464b      	mov	r3, r9
    286e:	2000      	movs	r0, #0
    2870:	2b00      	cmp	r3, #0
    2872:	d00a      	beq.n	288a <.LLST5+0xc>
    2874:	e006      	b.n	2884 <.LLST5+0x6>
    2876:	2d00      	cmp	r5, #0
    2878:	d102      	bne.n	2880 <.LLST5+0x2>
    287a:	4658      	mov	r0, fp
    287c:	4302      	orrs	r2, r0
    287e:	d001      	beq.n	2884 <.LLST5+0x6>
    2880:	4299      	cmp	r1, r3
    2882:	d018      	beq.n	28b6 <.LLST5+0x38>
    2884:	4248      	negs	r0, r1
    2886:	2101      	movs	r1, #1
    2888:	4308      	orrs	r0, r1
    288a:	bc3c      	pop	{r2, r3, r4, r5}
    288c:	4690      	mov	r8, r2
    288e:	4699      	mov	r9, r3
    2890:	46a2      	mov	sl, r4
    2892:	46ab      	mov	fp, r5
    2894:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2896:	2800      	cmp	r0, #0
    2898:	d0f2      	beq.n	2880 <.LLST5+0x2>
    289a:	2001      	movs	r0, #1
    289c:	3b01      	subs	r3, #1
    289e:	4318      	orrs	r0, r3
    28a0:	e7f3      	b.n	288a <.LLST5+0xc>
    28a2:	0037      	movs	r7, r6
    28a4:	4307      	orrs	r7, r0
    28a6:	d0d1      	beq.n	284c <.LLST3+0x19>
    28a8:	2002      	movs	r0, #2
    28aa:	4240      	negs	r0, r0
    28ac:	e7ed      	b.n	288a <.LLST5+0xc>
    28ae:	465f      	mov	r7, fp
    28b0:	4317      	orrs	r7, r2
    28b2:	d0ce      	beq.n	2852 <.LLST3+0x1f>
    28b4:	e7f8      	b.n	28a8 <.LLST5+0x2a>
    28b6:	42ac      	cmp	r4, r5
    28b8:	dce4      	bgt.n	2884 <.LLST5+0x6>
    28ba:	da03      	bge.n	28c4 <.LLST5+0x46>
    28bc:	1e48      	subs	r0, r1, #1
    28be:	2101      	movs	r1, #1
    28c0:	4308      	orrs	r0, r1
    28c2:	e7e2      	b.n	288a <.LLST5+0xc>
    28c4:	455e      	cmp	r6, fp
    28c6:	d8dd      	bhi.n	2884 <.LLST5+0x6>
    28c8:	d006      	beq.n	28d8 <.LLST5+0x5a>
    28ca:	2000      	movs	r0, #0
    28cc:	455e      	cmp	r6, fp
    28ce:	d2dc      	bcs.n	288a <.LLST5+0xc>
    28d0:	2301      	movs	r3, #1
    28d2:	1e48      	subs	r0, r1, #1
    28d4:	4318      	orrs	r0, r3
    28d6:	e7d8      	b.n	288a <.LLST5+0xc>
    28d8:	45c4      	cmp	ip, r8
    28da:	d8d3      	bhi.n	2884 <.LLST5+0x6>
    28dc:	2000      	movs	r0, #0
    28de:	45c4      	cmp	ip, r8
    28e0:	d3f6      	bcc.n	28d0 <.LLST5+0x52>
    28e2:	e7d2      	b.n	288a <.LLST5+0xc>
    28e4:	000007ff 	.word	0x000007ff

000028e8 <__ledf2>:
    28e8:	b5f0      	push	{r4, r5, r6, r7, lr}
    28ea:	464e      	mov	r6, r9
    28ec:	4645      	mov	r5, r8
    28ee:	46de      	mov	lr, fp
    28f0:	4657      	mov	r7, sl
    28f2:	005c      	lsls	r4, r3, #1
    28f4:	b5e0      	push	{r5, r6, r7, lr}
    28f6:	031f      	lsls	r7, r3, #12
    28f8:	0fdb      	lsrs	r3, r3, #31
    28fa:	4699      	mov	r9, r3
    28fc:	4b2a      	ldr	r3, [pc, #168]	; (29a8 <.LLST11+0x10>)

000028fe <.LBB4>:
    28fe:	030e      	lsls	r6, r1, #12
    2900:	004d      	lsls	r5, r1, #1
    2902:	0fc9      	lsrs	r1, r1, #31
    2904:	4684      	mov	ip, r0
    2906:	0b36      	lsrs	r6, r6, #12
    2908:	0d6d      	lsrs	r5, r5, #21
    290a:	468b      	mov	fp, r1

0000290c <.LBE4>:
    290c:	4690      	mov	r8, r2
    290e:	0b3f      	lsrs	r7, r7, #12
    2910:	0d64      	lsrs	r4, r4, #21
    2912:	429d      	cmp	r5, r3
    2914:	d020      	beq.n	2958 <.LLST8+0x27>
    2916:	4b24      	ldr	r3, [pc, #144]	; (29a8 <.LLST11+0x10>)
    2918:	429c      	cmp	r4, r3
    291a:	d022      	beq.n	2962 <.LLST9+0x8>
    291c:	2d00      	cmp	r5, #0
    291e:	d112      	bne.n	2946 <.LLST8+0x15>
    2920:	4330      	orrs	r0, r6
    2922:	4243      	negs	r3, r0
    2924:	4143      	adcs	r3, r0
    2926:	b2db      	uxtb	r3, r3
    2928:	2c00      	cmp	r4, #0
    292a:	d01f      	beq.n	296c <.LLST9+0x12>
    292c:	2b00      	cmp	r3, #0
    292e:	d00c      	beq.n	294a <.LLST8+0x19>
    2930:	464b      	mov	r3, r9
    2932:	2001      	movs	r0, #1
    2934:	3b01      	subs	r3, #1
    2936:	4303      	orrs	r3, r0
    2938:	0018      	movs	r0, r3
    293a:	bc3c      	pop	{r2, r3, r4, r5}
    293c:	4690      	mov	r8, r2
    293e:	4699      	mov	r9, r3
    2940:	46a2      	mov	sl, r4
    2942:	46ab      	mov	fp, r5
    2944:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2946:	2c00      	cmp	r4, #0
    2948:	d016      	beq.n	2978 <.LLST10>
    294a:	45cb      	cmp	fp, r9
    294c:	d017      	beq.n	297e <.Ldebug_abbrev0+0x1>
    294e:	465b      	mov	r3, fp
    2950:	4259      	negs	r1, r3
    2952:	2301      	movs	r3, #1
    2954:	430b      	orrs	r3, r1
    2956:	e7ef      	b.n	2938 <.LLST8+0x7>
    2958:	0031      	movs	r1, r6
    295a:	2302      	movs	r3, #2
    295c:	4301      	orrs	r1, r0
    295e:	d1eb      	bne.n	2938 <.LLST8+0x7>
    2960:	e7d9      	b.n	2916 <.LBE4+0xa>
    2962:	0039      	movs	r1, r7
    2964:	2302      	movs	r3, #2
    2966:	4311      	orrs	r1, r2
    2968:	d1e6      	bne.n	2938 <.LLST8+0x7>
    296a:	e7d7      	b.n	291c <.LBE4+0x10>
    296c:	433a      	orrs	r2, r7
    296e:	d1dd      	bne.n	292c <.LLST7+0xe>
    2970:	2300      	movs	r3, #0
    2972:	2800      	cmp	r0, #0
    2974:	d0e0      	beq.n	2938 <.LLST8+0x7>
    2976:	e7ea      	b.n	294e <.LLST8+0x1d>
    2978:	433a      	orrs	r2, r7
    297a:	d1e6      	bne.n	294a <.LLST8+0x19>
    297c:	e7e7      	b.n	294e <.LLST8+0x1d>
    297e:	42a5      	cmp	r5, r4
    2980:	dce5      	bgt.n	294e <.LLST8+0x1d>
    2982:	db05      	blt.n	2990 <.Ldebug_abbrev0+0x13>
    2984:	42be      	cmp	r6, r7
    2986:	d8e2      	bhi.n	294e <.LLST8+0x1d>
    2988:	d007      	beq.n	299a <.LLST11+0x2>
    298a:	2300      	movs	r3, #0
    298c:	42be      	cmp	r6, r7
    298e:	d2d3      	bcs.n	2938 <.LLST8+0x7>
    2990:	4659      	mov	r1, fp
    2992:	2301      	movs	r3, #1
    2994:	3901      	subs	r1, #1
    2996:	430b      	orrs	r3, r1
    2998:	e7ce      	b.n	2938 <.LLST8+0x7>
    299a:	45c4      	cmp	ip, r8
    299c:	d8d7      	bhi.n	294e <.LLST8+0x1d>
    299e:	2300      	movs	r3, #0
    29a0:	45c4      	cmp	ip, r8
    29a2:	d3f5      	bcc.n	2990 <.Ldebug_abbrev0+0x13>
    29a4:	e7c8      	b.n	2938 <.LLST8+0x7>
    29a6:	46c0      	nop			; (mov r8, r8)
    29a8:	000007ff 	.word	0x000007ff

Disassembly of section .text.EIC_Initialize%32:

000029ac <EIC_Initialize>:
/* EIC Channel Callback object */
EIC_CALLBACK_OBJ    eicCallbackObject[EXTINT_COUNT];


void EIC_Initialize (void)
{
    29ac:	b510      	push	{r4, lr}

000029ae <.LCFI0>:
    /* Reset all registers in the EIC module to their initial state and
	   EIC will be disabled. */
    EIC_REGS->EIC_CTRLA |= EIC_CTRLA_SWRST_Msk;
    29ae:	4a1e      	ldr	r2, [pc, #120]	; (2a28 <.LLST17+0x3>)
    29b0:	7813      	ldrb	r3, [r2, #0]
    29b2:	2101      	movs	r1, #1
    29b4:	430b      	orrs	r3, r1
    29b6:	7013      	strb	r3, [r2, #0]

    while((EIC_REGS->EIC_SYNCBUSY & EIC_SYNCBUSY_SWRST_Msk) == EIC_SYNCBUSY_SWRST_Msk)
    29b8:	0011      	movs	r1, r2
    29ba:	2201      	movs	r2, #1
    29bc:	684b      	ldr	r3, [r1, #4]
    29be:	421a      	tst	r2, r3
    29c0:	d1fc      	bne.n	29bc <.LCFI0+0xe>
    /* EIC is by default clocked by GCLK */

    /* NMI Control register */

    /* Interrupt sense type and filter control for EXTINT channels 0 to 7*/
    EIC_REGS->EIC_CONFIG[0] =  EIC_CONFIG_SENSE0_RISE  |
    29c2:	4919      	ldr	r1, [pc, #100]	; (2a28 <.LLST17+0x3>)
    29c4:	4b19      	ldr	r3, [pc, #100]	; (2a2c <.LLST17+0x7>)
    29c6:	61cb      	str	r3, [r1, #28]
                              EIC_CONFIG_SENSE5_NONE  |
                              EIC_CONFIG_SENSE6_NONE  |
                              EIC_CONFIG_SENSE7_NONE ;

    /* Interrupt sense type and filter control for EXTINT channels 8 to 15 */
    EIC_REGS->EIC_CONFIG[1] =  EIC_CONFIG_SENSE0_NONE  |
    29c8:	4b19      	ldr	r3, [pc, #100]	; (2a30 <.LLST17+0xb>)
    29ca:	620b      	str	r3, [r1, #32]
                              EIC_CONFIG_SENSE7_RISE ;



    /* Event Control Output enable */
    EIC_REGS->EIC_EVCTRL = 0x4;
    29cc:	2304      	movs	r3, #4
    29ce:	608b      	str	r3, [r1, #8]


    /* External Interrupt enable*/
    EIC_REGS->EIC_INTENSET = 0x804;
    29d0:	4b18      	ldr	r3, [pc, #96]	; (2a34 <.LLST17+0xf>)
    29d2:	610b      	str	r3, [r1, #16]

    /* Callbacks for enabled interrupts */
    eicCallbackObject[0].eicPinNo = EIC_PIN_MAX;
    29d4:	4b18      	ldr	r3, [pc, #96]	; (2a38 <.LLST17+0x13>)
    29d6:	2210      	movs	r2, #16
    29d8:	721a      	strb	r2, [r3, #8]
    eicCallbackObject[1].eicPinNo = EIC_PIN_MAX;
    29da:	751a      	strb	r2, [r3, #20]
    eicCallbackObject[2].eicPinNo = EIC_PIN_2;
    29dc:	2402      	movs	r4, #2
    29de:	2020      	movs	r0, #32
    29e0:	541c      	strb	r4, [r3, r0]
    eicCallbackObject[3].eicPinNo = EIC_PIN_MAX;
    29e2:	300c      	adds	r0, #12
    29e4:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[4].eicPinNo = EIC_PIN_MAX;
    29e6:	300c      	adds	r0, #12
    29e8:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[5].eicPinNo = EIC_PIN_MAX;
    29ea:	300c      	adds	r0, #12
    29ec:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[6].eicPinNo = EIC_PIN_MAX;
    29ee:	300c      	adds	r0, #12
    29f0:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[7].eicPinNo = EIC_PIN_MAX;
    29f2:	300c      	adds	r0, #12
    29f4:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[8].eicPinNo = EIC_PIN_MAX;
    29f6:	300c      	adds	r0, #12
    29f8:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[9].eicPinNo = EIC_PIN_MAX;
    29fa:	300c      	adds	r0, #12
    29fc:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[10].eicPinNo = EIC_PIN_MAX;
    29fe:	300c      	adds	r0, #12
    2a00:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[11].eicPinNo = EIC_PIN_11;
    2a02:	3409      	adds	r4, #9
    2a04:	300c      	adds	r0, #12
    2a06:	541c      	strb	r4, [r3, r0]
    eicCallbackObject[12].eicPinNo = EIC_PIN_MAX;
    2a08:	300c      	adds	r0, #12
    2a0a:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[13].eicPinNo = EIC_PIN_MAX;
    2a0c:	300c      	adds	r0, #12
    2a0e:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[14].eicPinNo = EIC_PIN_MAX;
    2a10:	300c      	adds	r0, #12
    2a12:	541a      	strb	r2, [r3, r0]
    eicCallbackObject[15].eicPinNo = EIC_PIN_MAX;
    2a14:	300c      	adds	r0, #12
    2a16:	541a      	strb	r2, [r3, r0]
    /* Enable the EIC */
    EIC_REGS->EIC_CTRLA |= EIC_CTRLA_ENABLE_Msk;
    2a18:	780b      	ldrb	r3, [r1, #0]
    2a1a:	3a0e      	subs	r2, #14
    2a1c:	4313      	orrs	r3, r2
    2a1e:	700b      	strb	r3, [r1, #0]

    while((EIC_REGS->EIC_SYNCBUSY & EIC_SYNCBUSY_ENABLE_Msk) == EIC_SYNCBUSY_ENABLE_Msk)
    2a20:	684b      	ldr	r3, [r1, #4]
    2a22:	421a      	tst	r2, r3
    2a24:	d1fc      	bne.n	2a20 <.LLST16+0x27>
    {
        /* Wait for sync */
    }
}
    2a26:	bd10      	pop	{r4, pc}
    2a28:	40002800 	.word	0x40002800
    2a2c:	00000501 	.word	0x00000501
    2a30:	10001000 	.word	0x10001000
    2a34:	00000804 	.word	0x00000804
    2a38:	20000020 	.word	0x20000020

Disassembly of section .text.__pic32c_data_initialization%33:

00002a3c <__pic32c_data_initialization>:
    2a3c:	4a20      	ldr	r2, [pc, #128]	; (2ac0 <.LLST22+0x18>)
    2a3e:	4b21      	ldr	r3, [pc, #132]	; (2ac4 <.LLST22+0x1c>)
    2a40:	b570      	push	{r4, r5, r6, lr}
    2a42:	2100      	movs	r1, #0
    2a44:	4293      	cmp	r3, r2
    2a46:	d203      	bcs.n	2a50 <.LLST19+0x3>
    2a48:	7019      	strb	r1, [r3, #0]
    2a4a:	3301      	adds	r3, #1
    2a4c:	4293      	cmp	r3, r2
    2a4e:	d1fb      	bne.n	2a48 <.Ldebug_line0+0x2>
    2a50:	2500      	movs	r5, #0
    2a52:	2603      	movs	r6, #3
    2a54:	481c      	ldr	r0, [pc, #112]	; (2ac8 <.LLST22+0x20>)
    2a56:	6803      	ldr	r3, [r0, #0]
    2a58:	6841      	ldr	r1, [r0, #4]
    2a5a:	2b00      	cmp	r3, #0
    2a5c:	d118      	bne.n	2a90 <.LLST21+0x7>
    2a5e:	2900      	cmp	r1, #0
    2a60:	d02d      	beq.n	2abe <.LLST22+0x16>
    2a62:	6883      	ldr	r3, [r0, #8]
    2a64:	300c      	adds	r0, #12
    2a66:	2b00      	cmp	r3, #0
    2a68:	d018      	beq.n	2a9c <.LLST21+0x13>
    2a6a:	2300      	movs	r3, #0
    2a6c:	2200      	movs	r2, #0
    2a6e:	5c84      	ldrb	r4, [r0, r2]
    2a70:	549c      	strb	r4, [r3, r2]
    2a72:	3201      	adds	r2, #1
    2a74:	428a      	cmp	r2, r1
    2a76:	d3fa      	bcc.n	2a6e <.LLST20+0xe>
    2a78:	0033      	movs	r3, r6
    2a7a:	400b      	ands	r3, r1
    2a7c:	1e5a      	subs	r2, r3, #1
    2a7e:	4193      	sbcs	r3, r2
    2a80:	0889      	lsrs	r1, r1, #2
    2a82:	1859      	adds	r1, r3, r1
    2a84:	0089      	lsls	r1, r1, #2
    2a86:	1840      	adds	r0, r0, r1
    2a88:	6803      	ldr	r3, [r0, #0]
    2a8a:	6841      	ldr	r1, [r0, #4]
    2a8c:	2b00      	cmp	r3, #0
    2a8e:	d0e6      	beq.n	2a5e <.LLST19+0x11>
    2a90:	6882      	ldr	r2, [r0, #8]
    2a92:	300c      	adds	r0, #12
    2a94:	2a00      	cmp	r2, #0
    2a96:	d107      	bne.n	2aa8 <.LLST22>
    2a98:	2900      	cmp	r1, #0
    2a9a:	d0dc      	beq.n	2a56 <.LLST19+0x9>
    2a9c:	1859      	adds	r1, r3, r1
    2a9e:	701d      	strb	r5, [r3, #0]
    2aa0:	3301      	adds	r3, #1
    2aa2:	428b      	cmp	r3, r1
    2aa4:	d1fb      	bne.n	2a9e <.LLST21+0x15>
    2aa6:	e7d6      	b.n	2a56 <.LLST19+0x9>
    2aa8:	2900      	cmp	r1, #0
    2aaa:	d1df      	bne.n	2a6c <.LLST20+0xc>
    2aac:	0033      	movs	r3, r6
    2aae:	400b      	ands	r3, r1
    2ab0:	1e5a      	subs	r2, r3, #1
    2ab2:	4193      	sbcs	r3, r2
    2ab4:	0889      	lsrs	r1, r1, #2
    2ab6:	1859      	adds	r1, r3, r1
    2ab8:	0089      	lsls	r1, r1, #2
    2aba:	1840      	adds	r0, r0, r1
    2abc:	e7e4      	b.n	2a88 <.LLST20+0x28>
    2abe:	bd70      	pop	{r4, r5, r6, pc}
    2ac0:	20002188 	.word	0x20002188
    2ac4:	20000000 	.word	0x20000000
    2ac8:	00000cb8 	.word	0x00000cb8

Disassembly of section .text%34:

00002acc <__aeabi_ui2f>:
    2acc:	b510      	push	{r4, lr}
    2ace:	1e04      	subs	r4, r0, #0
    2ad0:	d027      	beq.n	2b22 <.LLST2+0x3>

00002ad2 <.LBB4>:
    2ad2:	f000 fc8b 	bl	33ec <.LFE52>
    2ad6:	239e      	movs	r3, #158	; 0x9e
    2ad8:	1a1b      	subs	r3, r3, r0

00002ada <.LBE4>:
    2ada:	2b96      	cmp	r3, #150	; 0x96
    2adc:	dc0a      	bgt.n	2af4 <.LBE9+0x2>
    2ade:	2296      	movs	r2, #150	; 0x96
    2ae0:	1ad2      	subs	r2, r2, r3
    2ae2:	4094      	lsls	r4, r2
    2ae4:	0264      	lsls	r4, r4, #9
    2ae6:	0a64      	lsrs	r4, r4, #9
    2ae8:	b2db      	uxtb	r3, r3

00002aea <.LBB9>:
    2aea:	0264      	lsls	r4, r4, #9
    2aec:	05db      	lsls	r3, r3, #23
    2aee:	0a60      	lsrs	r0, r4, #9
    2af0:	4318      	orrs	r0, r3

00002af2 <.LBE9>:
    2af2:	bd10      	pop	{r4, pc}
    2af4:	2b99      	cmp	r3, #153	; 0x99
    2af6:	dc17      	bgt.n	2b28 <.LLST2+0x9>
    2af8:	2299      	movs	r2, #153	; 0x99
    2afa:	1ad2      	subs	r2, r2, r3
    2afc:	2a00      	cmp	r2, #0
    2afe:	dd27      	ble.n	2b50 <.LLST1+0x10>
    2b00:	4094      	lsls	r4, r2
    2b02:	0022      	movs	r2, r4
    2b04:	4c13      	ldr	r4, [pc, #76]	; (2b54 <.LLST1+0x14>)
    2b06:	4014      	ands	r4, r2

00002b08 <.LDL1>:
    2b08:	0751      	lsls	r1, r2, #29
    2b0a:	d004      	beq.n	2b16 <.LDL1+0xe>
    2b0c:	210f      	movs	r1, #15
    2b0e:	400a      	ands	r2, r1
    2b10:	2a04      	cmp	r2, #4
    2b12:	d000      	beq.n	2b16 <.LDL1+0xe>
    2b14:	3404      	adds	r4, #4
    2b16:	0162      	lsls	r2, r4, #5
    2b18:	d412      	bmi.n	2b40 <.LLST1>
    2b1a:	01a4      	lsls	r4, r4, #6
    2b1c:	0a64      	lsrs	r4, r4, #9
    2b1e:	b2db      	uxtb	r3, r3
    2b20:	e7e3      	b.n	2aea <.LBB9>
    2b22:	2300      	movs	r3, #0
    2b24:	2400      	movs	r4, #0
    2b26:	e7e0      	b.n	2aea <.LBB9>
    2b28:	22b9      	movs	r2, #185	; 0xb9
    2b2a:	0021      	movs	r1, r4
    2b2c:	1ad2      	subs	r2, r2, r3
    2b2e:	4091      	lsls	r1, r2
    2b30:	000a      	movs	r2, r1
    2b32:	1e51      	subs	r1, r2, #1
    2b34:	418a      	sbcs	r2, r1
    2b36:	2105      	movs	r1, #5
    2b38:	1a09      	subs	r1, r1, r0
    2b3a:	40cc      	lsrs	r4, r1
    2b3c:	4314      	orrs	r4, r2
    2b3e:	e7db      	b.n	2af8 <.Ldebug_abbrev0+0x1>
    2b40:	4b04      	ldr	r3, [pc, #16]	; (2b54 <.LLST1+0x14>)
    2b42:	401c      	ands	r4, r3
    2b44:	239f      	movs	r3, #159	; 0x9f
    2b46:	01a4      	lsls	r4, r4, #6
    2b48:	1a1b      	subs	r3, r3, r0
    2b4a:	0a64      	lsrs	r4, r4, #9
    2b4c:	b2db      	uxtb	r3, r3
    2b4e:	e7cc      	b.n	2aea <.LBB9>
    2b50:	0022      	movs	r2, r4
    2b52:	e7d7      	b.n	2b04 <.LLST3+0x6>
    2b54:	fbffffff 	.word	0xfbffffff

00002b58 <__lesf2>:
    2b58:	b5f0      	push	{r4, r5, r6, r7, lr}
    2b5a:	0042      	lsls	r2, r0, #1
    2b5c:	024d      	lsls	r5, r1, #9
    2b5e:	004c      	lsls	r4, r1, #1
    2b60:	0246      	lsls	r6, r0, #9
    2b62:	0a76      	lsrs	r6, r6, #9
    2b64:	0e12      	lsrs	r2, r2, #24
    2b66:	0fc3      	lsrs	r3, r0, #31
    2b68:	0a6d      	lsrs	r5, r5, #9
    2b6a:	0e24      	lsrs	r4, r4, #24
    2b6c:	0fc9      	lsrs	r1, r1, #31
    2b6e:	2aff      	cmp	r2, #255	; 0xff
    2b70:	d016      	beq.n	2ba0 <.LLST7+0x1e>
    2b72:	2cff      	cmp	r4, #255	; 0xff
    2b74:	d018      	beq.n	2ba8 <.LLST8+0x6>
    2b76:	2a00      	cmp	r2, #0
    2b78:	d10a      	bne.n	2b90 <.LLST7+0xe>
    2b7a:	4270      	negs	r0, r6
    2b7c:	4170      	adcs	r0, r6
    2b7e:	b2c0      	uxtb	r0, r0
    2b80:	2c00      	cmp	r4, #0
    2b82:	d015      	beq.n	2bb0 <.LLST8+0xe>
    2b84:	2800      	cmp	r0, #0
    2b86:	d005      	beq.n	2b94 <.LLST7+0x12>
    2b88:	2001      	movs	r0, #1
    2b8a:	3901      	subs	r1, #1
    2b8c:	4308      	orrs	r0, r1
    2b8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2b90:	2c00      	cmp	r4, #0
    2b92:	d013      	beq.n	2bbc <.LLST8+0x1a>
    2b94:	4299      	cmp	r1, r3
    2b96:	d014      	beq.n	2bc2 <.LLST8+0x20>
    2b98:	2001      	movs	r0, #1
    2b9a:	425b      	negs	r3, r3
    2b9c:	4318      	orrs	r0, r3
    2b9e:	e7f6      	b.n	2b8e <.LLST7+0xc>
    2ba0:	2002      	movs	r0, #2
    2ba2:	2e00      	cmp	r6, #0
    2ba4:	d1f3      	bne.n	2b8e <.LLST7+0xc>
    2ba6:	e7e4      	b.n	2b72 <.LLST0+0x11>
    2ba8:	2002      	movs	r0, #2
    2baa:	2d00      	cmp	r5, #0
    2bac:	d1ef      	bne.n	2b8e <.LLST7+0xc>
    2bae:	e7e2      	b.n	2b76 <.LLST0+0x15>
    2bb0:	2d00      	cmp	r5, #0
    2bb2:	d1e7      	bne.n	2b84 <.LLST7+0x2>
    2bb4:	2000      	movs	r0, #0
    2bb6:	2e00      	cmp	r6, #0
    2bb8:	d0e9      	beq.n	2b8e <.LLST7+0xc>
    2bba:	e7ed      	b.n	2b98 <.LLST7+0x16>
    2bbc:	2d00      	cmp	r5, #0
    2bbe:	d1e9      	bne.n	2b94 <.LLST7+0x12>
    2bc0:	e7ea      	b.n	2b98 <.LLST7+0x16>
    2bc2:	42a2      	cmp	r2, r4
    2bc4:	dc06      	bgt.n	2bd4 <.LLST8+0x32>
    2bc6:	dbdf      	blt.n	2b88 <.LLST7+0x6>
    2bc8:	42ae      	cmp	r6, r5
    2bca:	d803      	bhi.n	2bd4 <.LLST8+0x32>
    2bcc:	2000      	movs	r0, #0
    2bce:	42ae      	cmp	r6, r5
    2bd0:	d3da      	bcc.n	2b88 <.LLST7+0x6>
    2bd2:	e7dc      	b.n	2b8e <.LLST7+0xc>
    2bd4:	2001      	movs	r0, #1
    2bd6:	4249      	negs	r1, r1
    2bd8:	4308      	orrs	r0, r1
    2bda:	e7d8      	b.n	2b8e <.LLST7+0xc>

00002bdc <__gesf2>:
    2bdc:	b5f0      	push	{r4, r5, r6, r7, lr}
    2bde:	0042      	lsls	r2, r0, #1
    2be0:	0245      	lsls	r5, r0, #9
    2be2:	024c      	lsls	r4, r1, #9
    2be4:	0fc3      	lsrs	r3, r0, #31
    2be6:	0048      	lsls	r0, r1, #1
    2be8:	0a6d      	lsrs	r5, r5, #9
    2bea:	0e12      	lsrs	r2, r2, #24
    2bec:	0a64      	lsrs	r4, r4, #9
    2bee:	0e00      	lsrs	r0, r0, #24
    2bf0:	0fc9      	lsrs	r1, r1, #31
    2bf2:	2aff      	cmp	r2, #255	; 0xff
    2bf4:	d01e      	beq.n	2c34 <.Ldebug_abbrev0+0x13>
    2bf6:	28ff      	cmp	r0, #255	; 0xff
    2bf8:	d021      	beq.n	2c3e <.Ldebug_abbrev0+0x1d>
    2bfa:	2a00      	cmp	r2, #0
    2bfc:	d10a      	bne.n	2c14 <.LLST10>
    2bfe:	426e      	negs	r6, r5
    2c00:	416e      	adcs	r6, r5
    2c02:	b2f6      	uxtb	r6, r6
    2c04:	2800      	cmp	r0, #0
    2c06:	d10f      	bne.n	2c28 <.Ldebug_abbrev0+0x7>
    2c08:	2c00      	cmp	r4, #0
    2c0a:	d10d      	bne.n	2c28 <.Ldebug_abbrev0+0x7>
    2c0c:	2000      	movs	r0, #0
    2c0e:	2d00      	cmp	r5, #0
    2c10:	d009      	beq.n	2c26 <.Ldebug_abbrev0+0x5>
    2c12:	e005      	b.n	2c20 <.LLST10+0xc>
    2c14:	2800      	cmp	r0, #0
    2c16:	d101      	bne.n	2c1c <.LLST10+0x8>
    2c18:	2c00      	cmp	r4, #0
    2c1a:	d001      	beq.n	2c20 <.LLST10+0xc>
    2c1c:	428b      	cmp	r3, r1
    2c1e:	d011      	beq.n	2c44 <.Ldebug_abbrev0+0x23>
    2c20:	2101      	movs	r1, #1
    2c22:	4258      	negs	r0, r3
    2c24:	4308      	orrs	r0, r1
    2c26:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2c28:	2e00      	cmp	r6, #0
    2c2a:	d0f7      	beq.n	2c1c <.LLST10+0x8>
    2c2c:	2001      	movs	r0, #1
    2c2e:	3901      	subs	r1, #1
    2c30:	4308      	orrs	r0, r1
    2c32:	e7f8      	b.n	2c26 <.Ldebug_abbrev0+0x5>
    2c34:	2d00      	cmp	r5, #0
    2c36:	d0de      	beq.n	2bf6 <.LLST9+0x1>
    2c38:	2002      	movs	r0, #2
    2c3a:	4240      	negs	r0, r0
    2c3c:	e7f3      	b.n	2c26 <.Ldebug_abbrev0+0x5>
    2c3e:	2c00      	cmp	r4, #0
    2c40:	d0db      	beq.n	2bfa <.LLST9+0x5>
    2c42:	e7f9      	b.n	2c38 <.Ldebug_abbrev0+0x17>
    2c44:	4282      	cmp	r2, r0
    2c46:	dceb      	bgt.n	2c20 <.LLST10+0xc>
    2c48:	db04      	blt.n	2c54 <.LLST30+0xa>
    2c4a:	42a5      	cmp	r5, r4
    2c4c:	d8e8      	bhi.n	2c20 <.LLST10+0xc>
    2c4e:	2000      	movs	r0, #0
    2c50:	42a5      	cmp	r5, r4
    2c52:	d2e8      	bcs.n	2c26 <.Ldebug_abbrev0+0x5>
    2c54:	2101      	movs	r1, #1
    2c56:	1e58      	subs	r0, r3, #1
    2c58:	4308      	orrs	r0, r1
    2c5a:	e7e4      	b.n	2c26 <.Ldebug_abbrev0+0x5>

00002c5c <__aeabi_cdrcmple>:
    2c5c:	4684      	mov	ip, r0
    2c5e:	1c10      	adds	r0, r2, #0
    2c60:	4662      	mov	r2, ip
    2c62:	468c      	mov	ip, r1
    2c64:	1c19      	adds	r1, r3, #0
    2c66:	4663      	mov	r3, ip
    2c68:	e000      	b.n	2c6c <__aeabi_cdcmpeq>
    2c6a:	46c0      	nop			; (mov r8, r8)

00002c6c <__aeabi_cdcmpeq>:
    2c6c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    2c6e:	f7ff fe3b 	bl	28e8 <__ledf2>
    2c72:	2800      	cmp	r0, #0
    2c74:	d401      	bmi.n	2c7a <__aeabi_cdcmpeq+0xe>
    2c76:	2100      	movs	r1, #0
    2c78:	42c8      	cmn	r0, r1
    2c7a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00002c7c <__aeabi_dcmpeq>:
    2c7c:	b510      	push	{r4, lr}
    2c7e:	f000 f89f 	bl	2dc0 <__eqdf2>
    2c82:	4240      	negs	r0, r0
    2c84:	3001      	adds	r0, #1
    2c86:	bd10      	pop	{r4, pc}

00002c88 <__aeabi_dcmplt>:
    2c88:	b510      	push	{r4, lr}
    2c8a:	f7ff fe2d 	bl	28e8 <__ledf2>
    2c8e:	2800      	cmp	r0, #0
    2c90:	db01      	blt.n	2c96 <__aeabi_dcmplt+0xe>
    2c92:	2000      	movs	r0, #0
    2c94:	bd10      	pop	{r4, pc}
    2c96:	2001      	movs	r0, #1
    2c98:	bd10      	pop	{r4, pc}
    2c9a:	46c0      	nop			; (mov r8, r8)

00002c9c <__aeabi_dcmple>:
    2c9c:	b510      	push	{r4, lr}
    2c9e:	f7ff fe23 	bl	28e8 <__ledf2>
    2ca2:	2800      	cmp	r0, #0
    2ca4:	dd01      	ble.n	2caa <.LLST2+0xb>
    2ca6:	2000      	movs	r0, #0
    2ca8:	bd10      	pop	{r4, pc}
    2caa:	2001      	movs	r0, #1
    2cac:	bd10      	pop	{r4, pc}
    2cae:	46c0      	nop			; (mov r8, r8)

00002cb0 <__aeabi_dcmpgt>:
    2cb0:	b510      	push	{r4, lr}
    2cb2:	f7ff fdb5 	bl	2820 <.LFE0>
    2cb6:	2800      	cmp	r0, #0
    2cb8:	dc01      	bgt.n	2cbe <__aeabi_dcmpgt+0xe>
    2cba:	2000      	movs	r0, #0
    2cbc:	bd10      	pop	{r4, pc}
    2cbe:	2001      	movs	r0, #1
    2cc0:	bd10      	pop	{r4, pc}
    2cc2:	46c0      	nop			; (mov r8, r8)

00002cc4 <__aeabi_dcmpge>:
    2cc4:	b510      	push	{r4, lr}
    2cc6:	f7ff fdab 	bl	2820 <.LFE0>
    2cca:	2800      	cmp	r0, #0
    2ccc:	da01      	bge.n	2cd2 <__aeabi_dcmpge+0xe>
    2cce:	2000      	movs	r0, #0
    2cd0:	bd10      	pop	{r4, pc}
    2cd2:	2001      	movs	r0, #1
    2cd4:	bd10      	pop	{r4, pc}

00002cd6 <L0>:
    2cd6:	46c0      	nop			; (mov r8, r8)

Disassembly of section .text.SERCOM3_USART_Read%38:

00002cd8 <SERCOM3_USART_Read>:

    SERCOM3_REGS->USART_INT.SERCOM_DATA = data;
}

bool SERCOM3_USART_Read( void *buffer, const size_t size )
{
    2cd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

00002cda <.LCFI2>:
    2cda:	46ce      	mov	lr, r9
    2cdc:	4647      	mov	r7, r8
    2cde:	b580      	push	{r7, lr}

00002ce0 <.LCFI3>:
    2ce0:	4680      	mov	r8, r0
    2ce2:	000f      	movs	r7, r1

00002ce4 <.LVL51>:
    uint8_t *pu8Data       = (uint8_t*)buffer;
    uint8_t u8dummyData    = 0;
    uint32_t u32Length     = size;
    uint32_t processedSize = 0;

    if(pu8Data != NULL)
    2ce4:	2800      	cmp	r0, #0
    2ce6:	d02a      	beq.n	2d3e <.LVL63>
    {
        /* Checks for error before receiving */
        if(SERCOM3_USART_ErrorGet() != USART_ERROR_NONE)
    2ce8:	4b16      	ldr	r3, [pc, #88]	; (2d44 <.LVL64+0x4>)
    2cea:	4798      	blx	r3

00002cec <.LVL52>:
    2cec:	2800      	cmp	r0, #0
    2cee:	d00d      	beq.n	2d0c <.LVL53+0x8>
        {
            /* Clear all error flags */
            SERCOM3_REGS->USART_INT.SERCOM_INTFLAG = SERCOM_USART_INT_INTFLAG_ERROR_Msk;
    2cf0:	4b15      	ldr	r3, [pc, #84]	; (2d48 <.LVL64+0x8>)
    2cf2:	2280      	movs	r2, #128	; 0x80
    2cf4:	761a      	strb	r2, [r3, #24]

            /* Clear error statuses */
            SERCOM3_REGS->USART_INT.SERCOM_STATUS = SERCOM_USART_INT_STATUS_Msk;
    2cf6:	3a01      	subs	r2, #1
    2cf8:	835a      	strh	r2, [r3, #26]

            /* Flush existing error bytes from the RX FIFO */
            while((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_RXC_Msk) == SERCOM_USART_INT_INTFLAG_RXC_Msk)
    2cfa:	7e1b      	ldrb	r3, [r3, #24]
    2cfc:	075b      	lsls	r3, r3, #29
    2cfe:	d505      	bpl.n	2d0c <.LVL53+0x8>
            {
                u8dummyData = SERCOM3_REGS->USART_INT.SERCOM_DATA;
    2d00:	4b11      	ldr	r3, [pc, #68]	; (2d48 <.LVL64+0x8>)
            while((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_RXC_Msk) == SERCOM_USART_INT_INTFLAG_RXC_Msk)
    2d02:	2104      	movs	r1, #4

00002d04 <.LVL53>:
                u8dummyData = SERCOM3_REGS->USART_INT.SERCOM_DATA;
    2d04:	8d1a      	ldrh	r2, [r3, #40]	; 0x28
            while((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_RXC_Msk) == SERCOM_USART_INT_INTFLAG_RXC_Msk)
    2d06:	7e1a      	ldrb	r2, [r3, #24]
    2d08:	420a      	tst	r2, r1
    2d0a:	d1fb      	bne.n	2d04 <.LVL53>
{
    2d0c:	2600      	movs	r6, #0
        }

        while(u32Length--)
        {
            /* Check if USART has new data */
            while((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_RXC_Msk) != SERCOM_USART_INT_INTFLAG_RXC_Msk);
    2d0e:	4c0e      	ldr	r4, [pc, #56]	; (2d48 <.LVL64+0x8>)
    2d10:	2504      	movs	r5, #4

            /* Read data from USART module */
            *pu8Data++ = SERCOM3_REGS->USART_INT.SERCOM_DATA;
            processedSize++;

            if(SERCOM3_USART_ErrorGet() != USART_ERROR_NONE)
    2d12:	4b0c      	ldr	r3, [pc, #48]	; (2d44 <.LVL64+0x4>)
    2d14:	4699      	mov	r9, r3

00002d16 <.LVL54>:
        while(u32Length--)
    2d16:	42be      	cmp	r6, r7
    2d18:	d009      	beq.n	2d2e <.LVL58>
            while((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_RXC_Msk) != SERCOM_USART_INT_INTFLAG_RXC_Msk);
    2d1a:	7e23      	ldrb	r3, [r4, #24]
    2d1c:	422b      	tst	r3, r5
    2d1e:	d0fc      	beq.n	2d1a <.LVL54+0x4>

00002d20 <.LVL55>:
            *pu8Data++ = SERCOM3_REGS->USART_INT.SERCOM_DATA;
    2d20:	8d23      	ldrh	r3, [r4, #40]	; 0x28
    2d22:	4642      	mov	r2, r8
    2d24:	5593      	strb	r3, [r2, r6]
            processedSize++;
    2d26:	3601      	adds	r6, #1

00002d28 <.LVL56>:
            if(SERCOM3_USART_ErrorGet() != USART_ERROR_NONE)
    2d28:	47c8      	blx	r9

00002d2a <.LVL57>:
    2d2a:	2800      	cmp	r0, #0
    2d2c:	d0f3      	beq.n	2d16 <.LVL54>

00002d2e <.LVL58>:
            {
                break;
            }
        }

        if(size == processedSize)
    2d2e:	1bf6      	subs	r6, r6, r7

00002d30 <.LVL59>:
    2d30:	4270      	negs	r0, r6
    2d32:	4170      	adcs	r0, r6
    2d34:	b2c0      	uxtb	r0, r0

00002d36 <.LVL60>:
            readStatus = true;
        }
    }

    return readStatus;
}
    2d36:	bc0c      	pop	{r2, r3}
    2d38:	4690      	mov	r8, r2
    2d3a:	4699      	mov	r9, r3
    2d3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00002d3e <.LVL63>:
    bool readStatus        = false;
    2d3e:	2000      	movs	r0, #0

00002d40 <.LVL64>:
    2d40:	e7f9      	b.n	2d36 <.LVL60>
    2d42:	46c0      	nop			; (mov r8, r8)
    2d44:	0000370d 	.word	0x0000370d
    2d48:	42001000 	.word	0x42001000

Disassembly of section .text%39:

00002d4c <__aeabi_cfrcmple>:
    2d4c:	4684      	mov	ip, r0
    2d4e:	1c08      	adds	r0, r1, #0
    2d50:	4661      	mov	r1, ip
    2d52:	e7ff      	b.n	2d54 <__aeabi_cfcmpeq>

00002d54 <__aeabi_cfcmpeq>:
    2d54:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    2d56:	f7ff feff 	bl	2b58 <__lesf2>
    2d5a:	2800      	cmp	r0, #0
    2d5c:	d401      	bmi.n	2d62 <__aeabi_cfcmpeq+0xe>
    2d5e:	2100      	movs	r1, #0
    2d60:	42c8      	cmn	r0, r1
    2d62:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00002d64 <__aeabi_fcmpeq>:
    2d64:	b510      	push	{r4, lr}
    2d66:	f000 fa57 	bl	3218 <__eqsf2>
    2d6a:	4240      	negs	r0, r0
    2d6c:	3001      	adds	r0, #1
    2d6e:	bd10      	pop	{r4, pc}

00002d70 <__aeabi_fcmplt>:
    2d70:	b510      	push	{r4, lr}
    2d72:	f7ff fef1 	bl	2b58 <__lesf2>
    2d76:	2800      	cmp	r0, #0
    2d78:	db01      	blt.n	2d7e <__aeabi_fcmplt+0xe>
    2d7a:	2000      	movs	r0, #0
    2d7c:	bd10      	pop	{r4, pc}
    2d7e:	2001      	movs	r0, #1
    2d80:	bd10      	pop	{r4, pc}
    2d82:	46c0      	nop			; (mov r8, r8)

00002d84 <__aeabi_fcmple>:
    2d84:	b510      	push	{r4, lr}
    2d86:	f7ff fee7 	bl	2b58 <__lesf2>
    2d8a:	2800      	cmp	r0, #0
    2d8c:	dd01      	ble.n	2d92 <.LLST16+0xd>
    2d8e:	2000      	movs	r0, #0
    2d90:	bd10      	pop	{r4, pc}
    2d92:	2001      	movs	r0, #1
    2d94:	bd10      	pop	{r4, pc}
    2d96:	46c0      	nop			; (mov r8, r8)

00002d98 <__aeabi_fcmpgt>:
    2d98:	b510      	push	{r4, lr}
    2d9a:	f7ff ff1f 	bl	2bdc <__gesf2>
    2d9e:	2800      	cmp	r0, #0
    2da0:	dc01      	bgt.n	2da6 <__aeabi_fcmpgt+0xe>
    2da2:	2000      	movs	r0, #0
    2da4:	bd10      	pop	{r4, pc}
    2da6:	2001      	movs	r0, #1
    2da8:	bd10      	pop	{r4, pc}
    2daa:	46c0      	nop			; (mov r8, r8)

00002dac <__aeabi_fcmpge>:
    2dac:	b510      	push	{r4, lr}
    2dae:	f7ff ff15 	bl	2bdc <__gesf2>
    2db2:	2800      	cmp	r0, #0
    2db4:	da01      	bge.n	2dba <.LLST17+0x1>
    2db6:	2000      	movs	r0, #0
    2db8:	bd10      	pop	{r4, pc}
    2dba:	2001      	movs	r0, #1
    2dbc:	bd10      	pop	{r4, pc}

00002dbe <L0>:
    2dbe:	46c0      	nop			; (mov r8, r8)

00002dc0 <__eqdf2>:
    2dc0:	b5f0      	push	{r4, r5, r6, r7, lr}
    2dc2:	464f      	mov	r7, r9
    2dc4:	4646      	mov	r6, r8
    2dc6:	46d6      	mov	lr, sl
    2dc8:	005c      	lsls	r4, r3, #1
    2dca:	b5c0      	push	{r6, r7, lr}
    2dcc:	031f      	lsls	r7, r3, #12
    2dce:	0fdb      	lsrs	r3, r3, #31
    2dd0:	469a      	mov	sl, r3
    2dd2:	4b17      	ldr	r3, [pc, #92]	; (2e30 <.LLST19+0x13>)
    2dd4:	030e      	lsls	r6, r1, #12
    2dd6:	004d      	lsls	r5, r1, #1
    2dd8:	4684      	mov	ip, r0
    2dda:	4680      	mov	r8, r0
    2ddc:	0b36      	lsrs	r6, r6, #12
    2dde:	0d6d      	lsrs	r5, r5, #21
    2de0:	0fc9      	lsrs	r1, r1, #31
    2de2:	4691      	mov	r9, r2
    2de4:	0b3f      	lsrs	r7, r7, #12
    2de6:	0d64      	lsrs	r4, r4, #21
    2de8:	2001      	movs	r0, #1
    2dea:	429d      	cmp	r5, r3
    2dec:	d008      	beq.n	2e00 <.LLST18+0x29>
    2dee:	429c      	cmp	r4, r3
    2df0:	d001      	beq.n	2df6 <.LLST18+0x1f>
    2df2:	42a5      	cmp	r5, r4
    2df4:	d00b      	beq.n	2e0e <.LLST18+0x37>
    2df6:	bc1c      	pop	{r2, r3, r4}
    2df8:	4690      	mov	r8, r2
    2dfa:	4699      	mov	r9, r3
    2dfc:	46a2      	mov	sl, r4
    2dfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2e00:	4663      	mov	r3, ip
    2e02:	4333      	orrs	r3, r6
    2e04:	d1f7      	bne.n	2df6 <.LLST18+0x1f>
    2e06:	42ac      	cmp	r4, r5
    2e08:	d1f5      	bne.n	2df6 <.LLST18+0x1f>
    2e0a:	433a      	orrs	r2, r7
    2e0c:	d1f3      	bne.n	2df6 <.LLST18+0x1f>
    2e0e:	2001      	movs	r0, #1
    2e10:	42be      	cmp	r6, r7
    2e12:	d1f0      	bne.n	2df6 <.LLST18+0x1f>
    2e14:	45c8      	cmp	r8, r9
    2e16:	d1ee      	bne.n	2df6 <.LLST18+0x1f>
    2e18:	4551      	cmp	r1, sl
    2e1a:	d007      	beq.n	2e2c <.LLST19+0xf>
    2e1c:	2d00      	cmp	r5, #0
    2e1e:	d1ea      	bne.n	2df6 <.LLST18+0x1f>
    2e20:	4663      	mov	r3, ip
    2e22:	431e      	orrs	r6, r3
    2e24:	0030      	movs	r0, r6
    2e26:	1e46      	subs	r6, r0, #1
    2e28:	41b0      	sbcs	r0, r6
    2e2a:	e7e4      	b.n	2df6 <.LLST18+0x1f>
    2e2c:	2000      	movs	r0, #0
    2e2e:	e7e2      	b.n	2df6 <.LLST18+0x1f>
    2e30:	000007ff 	.word	0x000007ff

Disassembly of section .text.motorcontrol_vars_init%41:

00002e34 <motorcontrol_vars_init>:
{
    2e34:	b510      	push	{r4, lr}

00002e36 <.LCFI0>:
  state_run = 0;
    2e36:	2300      	movs	r3, #0
    2e38:	4a0d      	ldr	r2, [pc, #52]	; (2e70 <.LLST20+0x1d>)
    2e3a:	7013      	strb	r3, [r2, #0]
  state_halt = 1;
    2e3c:	2201      	movs	r2, #1
    2e3e:	490d      	ldr	r1, [pc, #52]	; (2e74 <.LLST20+0x21>)
    2e40:	700a      	strb	r2, [r1, #0]
  ext_speed_ref_rpm = 0;
    2e42:	2100      	movs	r1, #0
    2e44:	480c      	ldr	r0, [pc, #48]	; (2e78 <.Ldebug_abbrev0>)
    2e46:	8003      	strh	r3, [r0, #0]
  set_speed = START_SPEED_DEFAULT;
    2e48:	24c8      	movs	r4, #200	; 0xc8
    2e4a:	480c      	ldr	r0, [pc, #48]	; (2e7c <.Ldebug_abbrev0+0x4>)
    2e4c:	8004      	strh	r4, [r0, #0]
  direction_changed = 0;
    2e4e:	480c      	ldr	r0, [pc, #48]	; (2e80 <.LLST21+0x1>)
    2e50:	7001      	strb	r1, [r0, #0]
  direction = 0;
    2e52:	480c      	ldr	r0, [pc, #48]	; (2e84 <.LLST21+0x5>)
    2e54:	2400      	movs	r4, #0
    2e56:	7004      	strb	r4, [r0, #0]
  ref_abs = 0;  
    2e58:	480b      	ldr	r0, [pc, #44]	; (2e88 <.LLST21+0x9>)
    2e5a:	8003      	strh	r3, [r0, #0]
  sysph.ang = 0; 
    2e5c:	480b      	ldr	r0, [pc, #44]	; (2e8c <.LLST21+0xd>)
    2e5e:	8003      	strh	r3, [r0, #0]
  switch_state = 0;
    2e60:	4b0b      	ldr	r3, [pc, #44]	; (2e90 <.LLST21+0x11>)
    2e62:	7019      	strb	r1, [r3, #0]
  acc_ramp = ACC_RAMP;
    2e64:	4b0b      	ldr	r3, [pc, #44]	; (2e94 <.LLST21+0x15>)
    2e66:	801a      	strh	r2, [r3, #0]
  dec_ramp = DEC_RAMP;
    2e68:	4b0b      	ldr	r3, [pc, #44]	; (2e98 <.LLST21+0x19>)
    2e6a:	801a      	strh	r2, [r3, #0]
}
    2e6c:	bd10      	pop	{r4, pc}
    2e6e:	46c0      	nop			; (mov r8, r8)
    2e70:	2000000b 	.word	0x2000000b
    2e74:	20000010 	.word	0x20000010
    2e78:	2000000c 	.word	0x2000000c
    2e7c:	20007ffc 	.word	0x20007ffc
    2e80:	2000000a 	.word	0x2000000a
    2e84:	20007eb2 	.word	0x20007eb2
    2e88:	20000006 	.word	0x20000006
    2e8c:	20007df0 	.word	0x20007df0
    2e90:	20007eb1 	.word	0x20007eb1
    2e94:	20000004 	.word	0x20000004
    2e98:	2000000e 	.word	0x2000000e

Disassembly of section .text.main%42:

00002e9c <main>:
// Section: Main Entry Point
// *****************************************************************************
// *****************************************************************************

int main ( void )
{
    2e9c:	b510      	push	{r4, lr}

00002e9e <.LCFI1>:
    /* Initialize all modules */
    SYS_Initialize ( NULL );
    2e9e:	2000      	movs	r0, #0
    2ea0:	4b0c      	ldr	r3, [pc, #48]	; (2ed4 <.LLST23>)
    2ea2:	4798      	blx	r3

00002ea4 <.LVL5>:
    ADC1_CallbackRegister((ADC_CALLBACK) ADC_ISR, (uintptr_t)NULL);
    2ea4:	2100      	movs	r1, #0
    2ea6:	480c      	ldr	r0, [pc, #48]	; (2ed8 <.LLST23+0x4>)
    2ea8:	4b0c      	ldr	r3, [pc, #48]	; (2edc <.LLST23+0x8>)
    2eaa:	4798      	blx	r3

00002eac <.LVL6>:
    EIC_CallbackRegister ((EIC_PIN)EIC_PIN_2, (EIC_CALLBACK) OC_FAULT_ISR,(uintptr_t)NULL);
    2eac:	2200      	movs	r2, #0
    2eae:	490c      	ldr	r1, [pc, #48]	; (2ee0 <.LLST23+0xc>)
    2eb0:	2002      	movs	r0, #2
    2eb2:	4c0c      	ldr	r4, [pc, #48]	; (2ee4 <.LLST23+0x10>)
    2eb4:	47a0      	blx	r4

00002eb6 <.LVL7>:
    EIC_CallbackRegister ((EIC_PIN)EIC_PIN_11, (EIC_CALLBACK) motor_start_stop,(uintptr_t)NULL);
    2eb6:	2200      	movs	r2, #0
    2eb8:	490b      	ldr	r1, [pc, #44]	; (2ee8 <.LLST23+0x14>)
    2eba:	200b      	movs	r0, #11
    2ebc:	47a0      	blx	r4

00002ebe <.LVL8>:
    motorcontrol_vars_init();
    2ebe:	4b0b      	ldr	r3, [pc, #44]	; (2eec <.LLST23+0x18>)
    2ec0:	4798      	blx	r3

00002ec2 <.LVL9>:
    ADC1_Enable();
    2ec2:	4b0b      	ldr	r3, [pc, #44]	; (2ef0 <.LLST23+0x1c>)
    2ec4:	4798      	blx	r3

00002ec6 <.LVL10>:
    X2CScope_Init();
    2ec6:	4b0b      	ldr	r3, [pc, #44]	; (2ef4 <.LLST23+0x20>)
    2ec8:	4798      	blx	r3

00002eca <.LVL11>:
    TCC0_PWMStart();     
    2eca:	4b0b      	ldr	r3, [pc, #44]	; (2ef8 <.Ldebug_line0+0x3>)
    2ecc:	4798      	blx	r3

00002ece <.LVL12>:
    {
        
        
        /* Maintain state machines of all polled MPLAB Harmony modules. */
        SYS_Tasks ( );
        X2CScope_Communicate();
    2ece:	4c0b      	ldr	r4, [pc, #44]	; (2efc <.Ldebug_line0+0x7>)
    2ed0:	47a0      	blx	r4

00002ed2 <.LVL13>:
    2ed2:	e7fd      	b.n	2ed0 <.LVL12+0x2>
    2ed4:	00003135 	.word	0x00003135
    2ed8:	00003501 	.word	0x00003501
    2edc:	00003789 	.word	0x00003789
    2ee0:	00003605 	.word	0x00003605
    2ee4:	000035b9 	.word	0x000035b9
    2ee8:	00003025 	.word	0x00003025
    2eec:	00002e35 	.word	0x00002e35
    2ef0:	000036c5 	.word	0x000036c5
    2ef4:	00003561 	.word	0x00003561
    2ef8:	000036a9 	.word	0x000036a9
    2efc:	0000252d 	.word	0x0000252d

Disassembly of section .text.PORT_Initialize%43:

00002f00 <PORT_Initialize>:
  Remarks:
    Refer plib_port.h file for more information.
*/

void PORT_Initialize(void)
{
    2f00:	b510      	push	{r4, lr}

00002f02 <.LCFI0>:
   /************************** GROUP 0 Initialization *************************/
   PORT_REGS->GROUP[0].PORT_PINCFG[5] = 0x1;
    2f02:	2382      	movs	r3, #130	; 0x82
    2f04:	05db      	lsls	r3, r3, #23
    2f06:	2201      	movs	r2, #1
    2f08:	2145      	movs	r1, #69	; 0x45
    2f0a:	545a      	strb	r2, [r3, r1]
   PORT_REGS->GROUP[0].PORT_PINCFG[10] = 0x1;
    2f0c:	3105      	adds	r1, #5
    2f0e:	545a      	strb	r2, [r3, r1]
   PORT_REGS->GROUP[0].PORT_PINCFG[11] = 0x1;
    2f10:	3101      	adds	r1, #1
    2f12:	545a      	strb	r2, [r3, r1]
   PORT_REGS->GROUP[0].PORT_PINCFG[14] = 0x1;
    2f14:	3103      	adds	r1, #3
    2f16:	545a      	strb	r2, [r3, r1]
   PORT_REGS->GROUP[0].PORT_PINCFG[15] = 0x1;
    2f18:	3101      	adds	r1, #1
    2f1a:	545a      	strb	r2, [r3, r1]
   PORT_REGS->GROUP[0].PORT_PINCFG[16] = 0x1;
    2f1c:	3101      	adds	r1, #1
    2f1e:	545a      	strb	r2, [r3, r1]
   PORT_REGS->GROUP[0].PORT_PINCFG[18] = 0x1;
    2f20:	3102      	adds	r1, #2
    2f22:	545a      	strb	r2, [r3, r1]
   PORT_REGS->GROUP[0].PORT_PINCFG[22] = 0x1;
    2f24:	3104      	adds	r1, #4
    2f26:	545a      	strb	r2, [r3, r1]
   PORT_REGS->GROUP[0].PORT_PINCFG[23] = 0x1;
    2f28:	3101      	adds	r1, #1
    2f2a:	545a      	strb	r2, [r3, r1]

   PORT_REGS->GROUP[0].PORT_PMUX[2] = 0x40;
    2f2c:	2040      	movs	r0, #64	; 0x40
    2f2e:	3925      	subs	r1, #37	; 0x25
    2f30:	5458      	strb	r0, [r3, r1]
   PORT_REGS->GROUP[0].PORT_PMUX[5] = 0x5;
    2f32:	392d      	subs	r1, #45	; 0x2d
    2f34:	380b      	subs	r0, #11
    2f36:	5419      	strb	r1, [r3, r0]
   PORT_REGS->GROUP[0].PORT_PMUX[7] = 0x55;
    2f38:	2455      	movs	r4, #85	; 0x55
    2f3a:	3002      	adds	r0, #2
    2f3c:	541c      	strb	r4, [r3, r0]
   PORT_REGS->GROUP[0].PORT_PMUX[8] = 0x5;
    2f3e:	3001      	adds	r0, #1
    2f40:	5419      	strb	r1, [r3, r0]
   PORT_REGS->GROUP[0].PORT_PMUX[11] = 0x22;
    2f42:	3816      	subs	r0, #22
    2f44:	3136      	adds	r1, #54	; 0x36
    2f46:	5458      	strb	r0, [r3, r1]
   /************************** GROUP 1 Initialization *************************/
   PORT_REGS->GROUP[1].PORT_DIR = 0x3000;
    2f48:	20c0      	movs	r0, #192	; 0xc0
    2f4a:	0180      	lsls	r0, r0, #6
    2f4c:	3145      	adds	r1, #69	; 0x45
    2f4e:	5058      	str	r0, [r3, r1]
   PORT_REGS->GROUP[1].PORT_PINCFG[0] = 0x1;
    2f50:	3140      	adds	r1, #64	; 0x40
    2f52:	545a      	strb	r2, [r3, r1]
   PORT_REGS->GROUP[1].PORT_PINCFG[30] = 0x1;
    2f54:	311e      	adds	r1, #30
    2f56:	545a      	strb	r2, [r3, r1]

   PORT_REGS->GROUP[1].PORT_PMUX[0] = 0x1;
    2f58:	392e      	subs	r1, #46	; 0x2e
    2f5a:	545a      	strb	r2, [r3, r1]
   PORT_REGS->GROUP[1].PORT_PMUX[15] = 0x4;
    2f5c:	39ac      	subs	r1, #172	; 0xac
    2f5e:	32be      	adds	r2, #190	; 0xbe
    2f60:	5499      	strb	r1, [r3, r2]
}
    2f62:	bd10      	pop	{r4, pc}

Disassembly of section .text%44:

00002f64 <__do_global_dtors_aux>:
    2f64:	b510      	push	{r4, lr}
    2f66:	4c06      	ldr	r4, [pc, #24]	; (2f80 <.LLST25+0x14>)
    2f68:	7823      	ldrb	r3, [r4, #0]
    2f6a:	2b00      	cmp	r3, #0
    2f6c:	d107      	bne.n	2f7e <.LLST25+0x12>
    2f6e:	4b05      	ldr	r3, [pc, #20]	; (2f84 <.LLST25+0x18>)
    2f70:	2b00      	cmp	r3, #0
    2f72:	d002      	beq.n	2f7a <.LLST25+0xe>
    2f74:	4804      	ldr	r0, [pc, #16]	; (2f88 <.LLST25+0x1c>)
    2f76:	e000      	b.n	2f7a <.LLST25+0xe>
    2f78:	bf00      	nop
    2f7a:	2301      	movs	r3, #1
    2f7c:	7023      	strb	r3, [r4, #0]
    2f7e:	bd10      	pop	{r4, pc}
    2f80:	20007e24 	.word	0x20007e24
	...

00002f8c <frame_dummy>:
    2f8c:	4b08      	ldr	r3, [pc, #32]	; (2fb0 <.LLST26+0x5>)
    2f8e:	b510      	push	{r4, lr}
    2f90:	2b00      	cmp	r3, #0
    2f92:	d003      	beq.n	2f9c <frame_dummy+0x10>
    2f94:	4907      	ldr	r1, [pc, #28]	; (2fb4 <.LLST26+0x9>)
    2f96:	4808      	ldr	r0, [pc, #32]	; (2fb8 <.LLST26+0xd>)
    2f98:	e000      	b.n	2f9c <frame_dummy+0x10>
    2f9a:	bf00      	nop
    2f9c:	4807      	ldr	r0, [pc, #28]	; (2fbc <.LLST26+0x11>)
    2f9e:	6803      	ldr	r3, [r0, #0]
    2fa0:	2b00      	cmp	r3, #0
    2fa2:	d100      	bne.n	2fa6 <.Ldebug_abbrev0+0x6>
    2fa4:	bd10      	pop	{r4, pc}
    2fa6:	4b06      	ldr	r3, [pc, #24]	; (2fc0 <.LLST26+0x15>)
    2fa8:	2b00      	cmp	r3, #0
    2faa:	d0fb      	beq.n	2fa4 <.Ldebug_abbrev0+0x4>
    2fac:	4798      	blx	r3
    2fae:	e7f9      	b.n	2fa4 <.Ldebug_abbrev0+0x4>
    2fb0:	00000000 	.word	0x00000000
    2fb4:	20007e28 	.word	0x20007e28
	...

Disassembly of section .text.TCC0_PWMInitialize%45:

00002fc4 <TCC0_PWMInitialize>:

/* Initialize TCC module */
void TCC0_PWMInitialize(void)
{
    /* Reset TCC */
    TCC0_REGS->TCC_CTRLA = TCC_CTRLA_SWRST_Msk;
    2fc4:	2201      	movs	r2, #1
    2fc6:	4b12      	ldr	r3, [pc, #72]	; (3010 <.LLST28>)
    2fc8:	601a      	str	r2, [r3, #0]
    while (TCC0_REGS->TCC_SYNCBUSY & (TCC_SYNCBUSY_SWRST_Msk))
    2fca:	0019      	movs	r1, r3
    2fcc:	688b      	ldr	r3, [r1, #8]
    2fce:	421a      	tst	r2, r3
    2fd0:	d1fc      	bne.n	2fcc <.LLST27+0x1>
    {
        /* Wait for sync */
    }
    /* Clock prescaler */
    TCC0_REGS->TCC_CTRLA = TCC_CTRLA_PRESCALER_DIV1 ;
    2fd2:	4b0f      	ldr	r3, [pc, #60]	; (3010 <.LLST28>)
    2fd4:	2200      	movs	r2, #0
    2fd6:	601a      	str	r2, [r3, #0]
    TCC0_REGS->TCC_WEXCTRL = TCC_WEXCTRL_OTMX(0U);
    2fd8:	615a      	str	r2, [r3, #20]
    /* Dead time configurations */
    TCC0_REGS->TCC_WEXCTRL |= TCC_WEXCTRL_DTIEN0_Msk | TCC_WEXCTRL_DTIEN1_Msk | TCC_WEXCTRL_DTIEN2_Msk | TCC_WEXCTRL_DTIEN3_Msk
    2fda:	6958      	ldr	r0, [r3, #20]
    2fdc:	490d      	ldr	r1, [pc, #52]	; (3014 <.LLST28+0x4>)
    2fde:	4301      	orrs	r1, r0
    2fe0:	6159      	str	r1, [r3, #20]
 	 	 | TCC_WEXCTRL_DTLS(48U) | TCC_WEXCTRL_DTHS(48U);

    TCC0_REGS->TCC_WAVE = TCC_WAVE_WAVEGEN_DSBOTTOM;
    2fe2:	2105      	movs	r1, #5
    2fe4:	63d9      	str	r1, [r3, #60]	; 0x3c

    /* Configure duty cycle values */
    TCC0_REGS->TCC_CC[0] = 0U;
    2fe6:	645a      	str	r2, [r3, #68]	; 0x44
    TCC0_REGS->TCC_CC[1] = 0U;
    2fe8:	649a      	str	r2, [r3, #72]	; 0x48
    TCC0_REGS->TCC_CC[2] = 0U;
    2fea:	64da      	str	r2, [r3, #76]	; 0x4c
    TCC0_REGS->TCC_CC[3] = 0U;
    2fec:	651a      	str	r2, [r3, #80]	; 0x50
    TCC0_REGS->TCC_PER = 1199U;
    2fee:	4a0a      	ldr	r2, [pc, #40]	; (3018 <.LLST28+0x8>)
    2ff0:	641a      	str	r2, [r3, #64]	; 0x40

    /* Fault configurations */
    TCC0_REGS->TCC_EVCTRL = TCC_EVCTRL_TCEI0_Msk | TCC_EVCTRL_EVACT0_FAULT;
    2ff2:	4a0a      	ldr	r2, [pc, #40]	; (301c <.LLST28+0xc>)
    2ff4:	621a      	str	r2, [r3, #32]
    TCC0_REGS->TCC_DRVCTRL = TCC_DRVCTRL_FILTERVAL0(5U) | TCC_DRVCTRL_NRE0_Msk
    2ff6:	4a0a      	ldr	r2, [pc, #40]	; (3020 <.LLST28+0x10>)
    2ff8:	619a      	str	r2, [r3, #24]
		 | TCC_DRVCTRL_NRE5_Msk
		 | TCC_DRVCTRL_NRE6_Msk;



    TCC0_REGS->TCC_EVCTRL |= TCC_EVCTRL_OVFEO_Msk;
    2ffa:	6a19      	ldr	r1, [r3, #32]
    2ffc:	2280      	movs	r2, #128	; 0x80
    2ffe:	0052      	lsls	r2, r2, #1
    3000:	430a      	orrs	r2, r1
    3002:	621a      	str	r2, [r3, #32]
    while (TCC0_REGS->TCC_SYNCBUSY)
    3004:	001a      	movs	r2, r3
    3006:	6893      	ldr	r3, [r2, #8]
    3008:	2b00      	cmp	r3, #0
    300a:	d1fc      	bne.n	3006 <.LLST27+0x3b>
    {
        /* Wait for sync */
    }
}
    300c:	4770      	bx	lr
    300e:	46c0      	nop			; (mov r8, r8)
    3010:	42002400 	.word	0x42002400
    3014:	30300f00 	.word	0x30300f00
    3018:	000004af 	.word	0x000004af
    301c:	00004007 	.word	0x00004007
    3020:	05000077 	.word	0x05000077

Disassembly of section .text.motor_start_stop%46:

00003024 <motor_start_stop>:
    return;
}

void motor_start_stop(void)
{
    switch_state ^= 1;         // Calling this function starts/stops motor
    3024:	490f      	ldr	r1, [pc, #60]	; (3064 <.LLST11+0x1f>)
    3026:	780a      	ldrb	r2, [r1, #0]
    3028:	2301      	movs	r3, #1
    302a:	4053      	eors	r3, r2
    302c:	700b      	strb	r3, [r1, #0]
		
	if(1U == switch_state)
    302e:	2a00      	cmp	r2, #0
    3030:	d007      	beq.n	3042 <.Ldebug_line0+0xa>
		direction = 0;
        speed_ref_filter = speed_ref_pot;
	}
	else
	{
		state_run = 0;
    3032:	2300      	movs	r3, #0
    3034:	4a0c      	ldr	r2, [pc, #48]	; (3068 <.LLST12+0x3>)
    3036:	7013      	strb	r3, [r2, #0]
		ref_abs = 0;
    3038:	4a0c      	ldr	r2, [pc, #48]	; (306c <.LLST12+0x7>)
    303a:	8013      	strh	r3, [r2, #0]
		ext_speed_ref_rpm = 0;
    303c:	4a0c      	ldr	r2, [pc, #48]	; (3070 <.LLST12+0xb>)
    303e:	8013      	strh	r3, [r2, #0]
	}	

}
    3040:	4770      	bx	lr
		state_run = 1;
    3042:	3201      	adds	r2, #1
    3044:	4b08      	ldr	r3, [pc, #32]	; (3068 <.LLST12+0x3>)
    3046:	701a      	strb	r2, [r3, #0]
		state_halt = 0;	
    3048:	2300      	movs	r3, #0
    304a:	4a0a      	ldr	r2, [pc, #40]	; (3074 <.LLST12+0xf>)
    304c:	7013      	strb	r3, [r2, #0]
		ref_abs = 0;
    304e:	4a07      	ldr	r2, [pc, #28]	; (306c <.LLST12+0x7>)
    3050:	8013      	strh	r3, [r2, #0]
		direction = 0;
    3052:	4b09      	ldr	r3, [pc, #36]	; (3078 <.LLST12+0x13>)
    3054:	2200      	movs	r2, #0
    3056:	701a      	strb	r2, [r3, #0]
        speed_ref_filter = speed_ref_pot;
    3058:	4b08      	ldr	r3, [pc, #32]	; (307c <.LLST12+0x17>)
    305a:	881a      	ldrh	r2, [r3, #0]
    305c:	4b08      	ldr	r3, [pc, #32]	; (3080 <.LLST12+0x1b>)
    305e:	801a      	strh	r2, [r3, #0]
    3060:	e7ee      	b.n	3040 <.Ldebug_line0+0x8>
    3062:	46c0      	nop			; (mov r8, r8)
    3064:	20007eb1 	.word	0x20007eb1
    3068:	2000000b 	.word	0x2000000b
    306c:	20000006 	.word	0x20000006
    3070:	2000000c 	.word	0x2000000c
    3074:	20000010 	.word	0x20000010
    3078:	20007eb2 	.word	0x20007eb2
    307c:	20000014 	.word	0x20000014
    3080:	20000008 	.word	0x20000008

Disassembly of section .text.Reset_Handler%47:

00003084 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void __attribute__((optimize("-O1"), section(".text.Reset_Handler"), long_call)) Reset_Handler(void)
{
    3084:	b510      	push	{r4, lr}

00003086 <.LCFI0>:
    uint32_t *pSrc;

    /* Call the optional application-provided _on_reset() function. */
    if (_on_reset)
    3086:	4b0e      	ldr	r3, [pc, #56]	; (30c0 <.LVL6+0x4>)
    3088:	2b00      	cmp	r3, #0
    308a:	d000      	beq.n	308e <.LVL0>
    {
        _on_reset();
    308c:	4798      	blx	r3

0000308e <.LVL0>:
    }

    /* Reserved for use by MPLAB XC32. */
    if (__xc32_on_reset)
    308e:	4b0d      	ldr	r3, [pc, #52]	; (30c4 <.LVL6+0x8>)
    3090:	2b00      	cmp	r3, #0
    3092:	d000      	beq.n	3096 <.LVL1>
        __xc32_on_reset();
    3094:	4798      	blx	r3

00003096 <.LVL1>:



    /* Initialize data after TCM is enabled.
     * Data initialization from the XC32 .dinit template */
    __pic32c_data_initialization();
    3096:	4b0c      	ldr	r3, [pc, #48]	; (30c8 <.LLST1+0x1>)
    3098:	4798      	blx	r3

0000309a <.LVL2>:


#  ifdef SCB_VTOR_TBLOFF_Msk
    /*  Set the vector-table base address in FLASH */
    pSrc = (uint32_t *) & __svectors;
    SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    309a:	4a0c      	ldr	r2, [pc, #48]	; (30cc <.Ldebug_abbrev0+0x2>)
    309c:	21ff      	movs	r1, #255	; 0xff
    309e:	4b0c      	ldr	r3, [pc, #48]	; (30d0 <.Ldebug_abbrev0+0x6>)
    30a0:	438b      	bics	r3, r1
    30a2:	6093      	str	r3, [r2, #8]
#  endif /* SCB_VTOR_TBLOFF_Msk */

    /* Initialize the C library */
    __libc_init_array();
    30a4:	4b0b      	ldr	r3, [pc, #44]	; (30d4 <.Ldebug_abbrev0+0xa>)
    30a6:	4798      	blx	r3

000030a8 <.LVL3>:




    /* Call the optional application-provided _on_bootstrap() function. */
    if (_on_bootstrap)
    30a8:	4b0b      	ldr	r3, [pc, #44]	; (30d8 <.Ldebug_abbrev0+0xe>)
    30aa:	2b00      	cmp	r3, #0
    30ac:	d000      	beq.n	30b0 <.LVL4>
    {
        _on_bootstrap();
    30ae:	4798      	blx	r3

000030b0 <.LVL4>:
    }

    /* Reserved for use by MPLAB XC32. */
    if (__xc32_on_bootstrap)
    30b0:	4b0a      	ldr	r3, [pc, #40]	; (30dc <.Ldebug_abbrev0+0x12>)
    30b2:	2b00      	cmp	r3, #0
    30b4:	d000      	beq.n	30b8 <.LVL5>
    {
        __xc32_on_bootstrap();
    30b6:	4798      	blx	r3

000030b8 <.LVL5>:
    }

    /* Branch to application's main function */
    main();
    30b8:	4b09      	ldr	r3, [pc, #36]	; (30e0 <.Ldebug_abbrev0+0x16>)
    30ba:	4798      	blx	r3

000030bc <.LVL6>:
    30bc:	e7fe      	b.n	30bc <.LVL6>
    30be:	46c0      	nop			; (mov r8, r8)
	...
    30c8:	00002a3d 	.word	0x00002a3d
    30cc:	e000ed00 	.word	0xe000ed00
    30d0:	00000000 	.word	0x00000000
    30d4:	000032ad 	.word	0x000032ad
	...
    30e0:	00002e9d 	.word	0x00002e9d

Disassembly of section .text.ADC1_Initialize%48:

000030e4 <ADC1_Initialize>:
// *****************************************************************************
/* Initialize ADC module */
void ADC1_Initialize( void )
{
    /* Reset ADC */
    ADC1_REGS->ADC_CTRLA = ADC_CTRLA_SWRST_Msk;
    30e4:	2201      	movs	r2, #1
    30e6:	4b11      	ldr	r3, [pc, #68]	; (312c <.LLST1+0x18>)
    30e8:	701a      	strb	r2, [r3, #0]

    while((ADC1_REGS->ADC_SYNCBUSY & ADC_SYNCBUSY_SWRST_Msk) == ADC_SYNCBUSY_SWRST_Msk)
    30ea:	0019      	movs	r1, r3
    30ec:	8c0b      	ldrh	r3, [r1, #32]
    30ee:	4213      	tst	r3, r2
    30f0:	d1fc      	bne.n	30ec <.LLST0+0x4>
        /* Wait for Synchronization */
    }

    /* Write linearity calibration in BIASREFBUF and bias calibration in BIASCOMP */
    ADC1_REGS->ADC_CALIB = (uint32_t)(ADC_CALIB_BIASREFBUF(((*(uint64_t*)OTP5_ADDR) & ADC1_LINEARITY_Msk))) \
        | ADC_CALIB_BIASCOMP((((*(uint64_t*)OTP5_ADDR) & ADC1_BIASCAL_Msk) >> ADC1_BIASCAL_POS));
    30f2:	4b0f      	ldr	r3, [pc, #60]	; (3130 <.LLST1+0x1c>)
    30f4:	681a      	ldr	r2, [r3, #0]
    30f6:	0512      	lsls	r2, r2, #20
    30f8:	0f52      	lsrs	r2, r2, #29
    ADC1_REGS->ADC_CALIB = (uint32_t)(ADC_CALIB_BIASREFBUF(((*(uint64_t*)OTP5_ADDR) & ADC1_LINEARITY_Msk))) \
    30fa:	4b0c      	ldr	r3, [pc, #48]	; (312c <.LLST1+0x18>)
    30fc:	859a      	strh	r2, [r3, #44]	; 0x2c

    /* prescaler */
    ADC1_REGS->ADC_CTRLB = ADC_CTRLB_PRESCALER_DIV4;
    30fe:	2201      	movs	r2, #1
    3100:	705a      	strb	r2, [r3, #1]
    /* Sampling length */
    ADC1_REGS->ADC_SAMPCTRL = ADC_SAMPCTRL_SAMPLEN(3U);
    3102:	2103      	movs	r1, #3
    3104:	7359      	strb	r1, [r3, #13]

    /* reference */
    ADC1_REGS->ADC_REFCTRL = ADC_REFCTRL_REFSEL_INTVCC2;
    3106:	3102      	adds	r1, #2
    3108:	7099      	strb	r1, [r3, #2]

    /* positive and negative input pins */
    ADC1_REGS->ADC_INPUTCTRL = ADC_POSINPUT_AIN0 | ADC_NEGINPUT_GND;
    310a:	21c0      	movs	r1, #192	; 0xc0
    310c:	0149      	lsls	r1, r1, #5
    310e:	8119      	strh	r1, [r3, #8]

    /* Resolution & Operation Mode */
    ADC1_REGS->ADC_CTRLC = ADC_CTRLC_RESSEL_12BIT | ADC_CTRLC_WINMODE(0) ;
    3110:	2100      	movs	r1, #0
    3112:	8159      	strh	r1, [r3, #10]


    /* Clear all interrupt flags */
    ADC1_REGS->ADC_INTFLAG = ADC_INTFLAG_Msk;
    3114:	2107      	movs	r1, #7
    3116:	7199      	strb	r1, [r3, #6]
    /* Enable interrupts */
    ADC1_REGS->ADC_INTENSET = ADC_INTENSET_RESRDY_Msk;
    3118:	715a      	strb	r2, [r3, #5]
    /* Events configuration  */
    ADC1_REGS->ADC_EVCTRL = ADC_EVCTRL_STARTEI_Msk;
    311a:	3201      	adds	r2, #1
    311c:	70da      	strb	r2, [r3, #3]

    while(ADC1_REGS->ADC_SYNCBUSY)
    311e:	001a      	movs	r2, r3
    3120:	8c13      	ldrh	r3, [r2, #32]
    3122:	b29b      	uxth	r3, r3
    3124:	2b00      	cmp	r3, #0
    3126:	d1fb      	bne.n	3120 <.LLST1+0xc>
    {
        /* Wait for Synchronization */
    }
}
    3128:	4770      	bx	lr
    312a:	46c0      	nop			; (mov r8, r8)
    312c:	42004800 	.word	0x42004800
    3130:	00806020 	.word	0x00806020

Disassembly of section .text.SYS_Initialize%49:

00003134 <SYS_Initialize>:

  Remarks:
 */

void SYS_Initialize ( void* data )
{
    3134:	b510      	push	{r4, lr}

00003136 <.LCFI0>:
  
    PORT_Initialize();
    3136:	4b09      	ldr	r3, [pc, #36]	; (315c <.LVL9+0x2>)
    3138:	4798      	blx	r3

0000313a <.LVL1>:

    CLOCK_Initialize();
    313a:	4b09      	ldr	r3, [pc, #36]	; (3160 <.LVL9+0x6>)
    313c:	4798      	blx	r3

0000313e <.LVL2>:



    SERCOM3_USART_Initialize();
    313e:	4b09      	ldr	r3, [pc, #36]	; (3164 <.LVL9+0xa>)
    3140:	4798      	blx	r3

00003142 <.LVL3>:

    EVSYS_Initialize();
    3142:	4b09      	ldr	r3, [pc, #36]	; (3168 <.LVL9+0xe>)
    3144:	4798      	blx	r3

00003146 <.LVL4>:

    TCC0_PWMInitialize();
    3146:	4b09      	ldr	r3, [pc, #36]	; (316c <.LVL9+0x12>)
    3148:	4798      	blx	r3

0000314a <.LVL5>:

    ADC1_Initialize();
    314a:	4b09      	ldr	r3, [pc, #36]	; (3170 <.LVL9+0x16>)
    314c:	4798      	blx	r3

0000314e <.LVL6>:
    EIC_Initialize();
    314e:	4b09      	ldr	r3, [pc, #36]	; (3174 <.LLST44>)
    3150:	4798      	blx	r3

00003152 <.LVL7>:

	DIVAS_Initialize();
    3152:	4b09      	ldr	r3, [pc, #36]	; (3178 <.LLST44+0x4>)
    3154:	4798      	blx	r3

00003156 <.LVL8>:





    NVIC_Initialize();
    3156:	4b09      	ldr	r3, [pc, #36]	; (317c <.LLST44+0x8>)
    3158:	4798      	blx	r3

0000315a <.LVL9>:

}
    315a:	bd10      	pop	{r4, pc}
    315c:	00002f01 	.word	0x00002f01
    3160:	00002581 	.word	0x00002581
    3164:	00003429 	.word	0x00003429
    3168:	0000364d 	.word	0x0000364d
    316c:	00002fc5 	.word	0x00002fc5
    3170:	000030e5 	.word	0x000030e5
    3174:	000029ad 	.word	0x000029ad
    3178:	000037a9 	.word	0x000037a9
    317c:	000032f5 	.word	0x000032f5

Disassembly of section .text%50:

00003180 <sendSerial>:
    3180:	4770      	bx	lr

00003182 <receiveSerial>:
    3182:	2000      	movs	r0, #0
    3184:	4770      	bx	lr

00003186 <isReceiveDataAvailable>:
    3186:	2000      	movs	r0, #0
    3188:	4770      	bx	lr

0000318a <isSendReady>:
    318a:	2000      	movs	r0, #0
    318c:	4770      	bx	lr

0000318e <getTxFifoFree>:
    318e:	2000      	movs	r0, #0
    3190:	4770      	bx	lr

00003192 <flush>:
    3192:	4770      	bx	lr

00003194 <initSerialGeneric>:
    3194:	4b06      	ldr	r3, [pc, #24]	; (31b0 <initSerialGeneric+0x1c>)
    3196:	6003      	str	r3, [r0, #0]
    3198:	4b06      	ldr	r3, [pc, #24]	; (31b4 <initSerialGeneric+0x20>)
    319a:	6043      	str	r3, [r0, #4]
    319c:	4b06      	ldr	r3, [pc, #24]	; (31b8 <initSerialGeneric+0x24>)
    319e:	6083      	str	r3, [r0, #8]
    31a0:	4b06      	ldr	r3, [pc, #24]	; (31bc <initSerialGeneric+0x28>)
    31a2:	60c3      	str	r3, [r0, #12]
    31a4:	4b06      	ldr	r3, [pc, #24]	; (31c0 <initSerialGeneric+0x2c>)
    31a6:	6103      	str	r3, [r0, #16]
    31a8:	4b06      	ldr	r3, [pc, #24]	; (31c4 <initSerialGeneric+0x30>)
    31aa:	6143      	str	r3, [r0, #20]
    31ac:	4770      	bx	lr
    31ae:	46c0      	nop			; (mov r8, r8)
    31b0:	00003181 	.word	0x00003181
    31b4:	00003183 	.word	0x00003183
    31b8:	00003187 	.word	0x00003187
    31bc:	0000318b 	.word	0x0000318b
    31c0:	0000318f 	.word	0x0000318f
    31c4:	00003193 	.word	0x00003193

000031c8 <linkSerial>:
    31c8:	6141      	str	r1, [r0, #20]
    31ca:	4770      	bx	lr

000031cc <initTableStruct>:
    31cc:	4a08      	ldr	r2, [pc, #32]	; (31f0 <.LLST45+0x10>)
    31ce:	6811      	ldr	r1, [r2, #0]
    31d0:	2300      	movs	r3, #0
    31d2:	600b      	str	r3, [r1, #0]
    31d4:	6812      	ldr	r2, [r2, #0]
    31d6:	6053      	str	r3, [r2, #4]
    31d8:	6093      	str	r3, [r2, #8]
    31da:	7313      	strb	r3, [r2, #12]
    31dc:	81d3      	strh	r3, [r2, #14]
    31de:	6113      	str	r3, [r2, #16]
    31e0:	8293      	strh	r3, [r2, #20]
    31e2:	6193      	str	r3, [r2, #24]
    31e4:	61d3      	str	r3, [r2, #28]
    31e6:	8413      	strh	r3, [r2, #32]
    31e8:	6253      	str	r3, [r2, #36]	; 0x24
    31ea:	6293      	str	r3, [r2, #40]	; 0x28
    31ec:	62d3      	str	r3, [r2, #44]	; 0x2c
    31ee:	4770      	bx	lr
    31f0:	20007dd8 	.word	0x20007dd8

000031f4 <addTableStructProtocol>:
    31f4:	4b07      	ldr	r3, [pc, #28]	; (3214 <.Ldebug_abbrev0+0x1>)
    31f6:	681a      	ldr	r2, [r3, #0]
    31f8:	8a93      	ldrh	r3, [r2, #20]
    31fa:	b29b      	uxth	r3, r3
    31fc:	2b01      	cmp	r3, #1
    31fe:	d900      	bls.n	3202 <addTableStructProtocol+0xe>
    3200:	4770      	bx	lr
    3202:	8a93      	ldrh	r3, [r2, #20]
    3204:	b29b      	uxth	r3, r3
    3206:	1c59      	adds	r1, r3, #1
    3208:	b289      	uxth	r1, r1
    320a:	8291      	strh	r1, [r2, #20]
    320c:	3306      	adds	r3, #6
    320e:	009b      	lsls	r3, r3, #2
    3210:	5098      	str	r0, [r3, r2]
    3212:	e7f5      	b.n	3200 <addTableStructProtocol+0xc>
    3214:	20007dd8 	.word	0x20007dd8

00003218 <__eqsf2>:
    3218:	b570      	push	{r4, r5, r6, lr}
    321a:	0042      	lsls	r2, r0, #1
    321c:	0245      	lsls	r5, r0, #9
    321e:	024e      	lsls	r6, r1, #9
    3220:	004c      	lsls	r4, r1, #1
    3222:	0fc3      	lsrs	r3, r0, #31
    3224:	0a6d      	lsrs	r5, r5, #9
    3226:	0e12      	lsrs	r2, r2, #24
    3228:	0a76      	lsrs	r6, r6, #9
    322a:	0e24      	lsrs	r4, r4, #24
    322c:	0fc9      	lsrs	r1, r1, #31
    322e:	2001      	movs	r0, #1
    3230:	2aff      	cmp	r2, #255	; 0xff
    3232:	d006      	beq.n	3242 <.LLST41>
    3234:	2cff      	cmp	r4, #255	; 0xff
    3236:	d003      	beq.n	3240 <.LLST40+0x1e>
    3238:	42a2      	cmp	r2, r4
    323a:	d101      	bne.n	3240 <.LLST40+0x1e>
    323c:	42b5      	cmp	r5, r6
    323e:	d006      	beq.n	324e <.LLST41+0xc>
    3240:	bd70      	pop	{r4, r5, r6, pc}
    3242:	2d00      	cmp	r5, #0
    3244:	d1fc      	bne.n	3240 <.LLST40+0x1e>
    3246:	2cff      	cmp	r4, #255	; 0xff
    3248:	d1fa      	bne.n	3240 <.LLST40+0x1e>
    324a:	2e00      	cmp	r6, #0
    324c:	d1f8      	bne.n	3240 <.LLST40+0x1e>
    324e:	428b      	cmp	r3, r1
    3250:	d006      	beq.n	3260 <.LLST41+0x1e>
    3252:	2001      	movs	r0, #1
    3254:	2a00      	cmp	r2, #0
    3256:	d1f3      	bne.n	3240 <.LLST40+0x1e>
    3258:	0028      	movs	r0, r5
    325a:	1e45      	subs	r5, r0, #1
    325c:	41a8      	sbcs	r0, r5
    325e:	e7ef      	b.n	3240 <.LLST40+0x1e>
    3260:	2000      	movs	r0, #0
    3262:	e7ed      	b.n	3240 <.LLST40+0x1e>

Disassembly of section .text.EIC_InterruptHandler%53:

00003264 <EIC_InterruptHandler>:
        eicCallbackObject[pin].context  = context;
    }
}

void EIC_InterruptHandler(void)
{
    3264:	b5f0      	push	{r4, r5, r6, r7, lr}

00003266 <.LCFI2>:
    3266:	46c6      	mov	lr, r8
    3268:	b500      	push	{lr}

0000326a <.LCFI3>:
    326a:	4d0e      	ldr	r5, [pc, #56]	; (32a4 <.LVL14+0x6>)
    326c:	2400      	movs	r4, #0
    {
        /* Verify if the EXTINT x Interrupt Pin is enabled */
        if ((eicCallbackObject[currentChannel].eicPinNo == currentChannel))
        {
            /* Read the interrupt flag status */
            eicIntFlagStatus = EIC_REGS->EIC_INTFLAG & (1UL << currentChannel);
    326e:	4f0e      	ldr	r7, [pc, #56]	; (32a8 <.LVL14+0xa>)
    3270:	2301      	movs	r3, #1
    3272:	4698      	mov	r8, r3
    3274:	e004      	b.n	3280 <.LVL10>

00003276 <.LVL7>:
                {
                    eicCallbackObject[currentChannel].callback(eicCallbackObject[currentChannel].context);
                }

                /* Clear interrupt flag */
                EIC_REGS->EIC_INTFLAG = (1UL << currentChannel);
    3276:	617e      	str	r6, [r7, #20]

00003278 <.LVL8>:
    3278:	3401      	adds	r4, #1

0000327a <.LVL9>:
    327a:	350c      	adds	r5, #12
    for (currentChannel = 0; currentChannel < EXTINT_COUNT; currentChannel++)
    327c:	2c10      	cmp	r4, #16
    327e:	d00e      	beq.n	329e <.LVL14>

00003280 <.LVL10>:
        if ((eicCallbackObject[currentChannel].eicPinNo == currentChannel))
    3280:	7a2a      	ldrb	r2, [r5, #8]
    3282:	b2e3      	uxtb	r3, r4
    3284:	429a      	cmp	r2, r3
    3286:	d1f7      	bne.n	3278 <.LVL8>
            eicIntFlagStatus = EIC_REGS->EIC_INTFLAG & (1UL << currentChannel);
    3288:	697b      	ldr	r3, [r7, #20]
    328a:	4646      	mov	r6, r8
    328c:	40a6      	lsls	r6, r4

0000328e <.LVL11>:
            if (eicIntFlagStatus)
    328e:	421e      	tst	r6, r3
    3290:	d0f2      	beq.n	3278 <.LVL8>
                if ((eicCallbackObject[currentChannel].callback != NULL))
    3292:	682b      	ldr	r3, [r5, #0]

00003294 <.LVL12>:
    3294:	2b00      	cmp	r3, #0
    3296:	d0ee      	beq.n	3276 <.LVL7>
                    eicCallbackObject[currentChannel].callback(eicCallbackObject[currentChannel].context);
    3298:	6868      	ldr	r0, [r5, #4]
    329a:	4798      	blx	r3
    329c:	e7eb      	b.n	3276 <.LVL7>

0000329e <.LVL14>:
            }
        }
    }
}
    329e:	bc04      	pop	{r2}
    32a0:	4690      	mov	r8, r2
    32a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    32a4:	20000020 	.word	0x20000020
    32a8:	40002800 	.word	0x40002800

Disassembly of section .text.__libc_init_array%54:

000032ac <__libc_init_array>:
    32ac:	b570      	push	{r4, r5, r6, lr}

000032ae <.LCFI0>:
    32ae:	4e0d      	ldr	r6, [pc, #52]	; (32e4 <.LVL11+0x2>)
    32b0:	4d0d      	ldr	r5, [pc, #52]	; (32e8 <.LVL11+0x6>)
    32b2:	2400      	movs	r4, #0
    32b4:	1bad      	subs	r5, r5, r6
    32b6:	10ad      	asrs	r5, r5, #2

000032b8 <.LVL0>:
    32b8:	d005      	beq.n	32c6 <.LVL4>

000032ba <.LVL1>:
    32ba:	00a3      	lsls	r3, r4, #2
    32bc:	58f3      	ldr	r3, [r6, r3]
    32be:	3401      	adds	r4, #1

000032c0 <.LVL2>:
    32c0:	4798      	blx	r3

000032c2 <.LVL3>:
    32c2:	42a5      	cmp	r5, r4
    32c4:	d1f9      	bne.n	32ba <.LVL1>

000032c6 <.LVL4>:
    32c6:	f7fc fef9 	bl	bc <_init>

000032ca <.LVL5>:
    32ca:	4e08      	ldr	r6, [pc, #32]	; (32ec <.LVL11+0xa>)
    32cc:	4d08      	ldr	r5, [pc, #32]	; (32f0 <.LVL11+0xe>)

000032ce <.LVL6>:
    32ce:	2400      	movs	r4, #0
    32d0:	1bad      	subs	r5, r5, r6
    32d2:	10ad      	asrs	r5, r5, #2

000032d4 <.LVL7>:
    32d4:	d005      	beq.n	32e2 <.LVL11>

000032d6 <.LVL8>:
    32d6:	00a3      	lsls	r3, r4, #2
    32d8:	58f3      	ldr	r3, [r6, r3]
    32da:	3401      	adds	r4, #1

000032dc <.LVL9>:
    32dc:	4798      	blx	r3

000032de <.LVL10>:
    32de:	42a5      	cmp	r5, r4
    32e0:	d1f9      	bne.n	32d6 <.LVL8>

000032e2 <.LVL11>:
    32e2:	bd70      	pop	{r4, r5, r6, pc}
    32e4:	000000c8 	.word	0x000000c8
    32e8:	000000c8 	.word	0x000000c8
    32ec:	000000c8 	.word	0x000000c8
    32f0:	000000d0 	.word	0x000000d0

Disassembly of section .text.NVIC_Initialize%55:

000032f4 <NVIC_Initialize>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
    32f4:	f3bf 8f5f 	dmb	sy

000032f8 <.LBB20>:
  __ASM volatile ("cpsie i" : : : "memory");
    32f8:	b662      	cpsie	i

000032fa <.LBB22>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    32fa:	4b0c      	ldr	r3, [pc, #48]	; (332c <.LBE28+0x4>)
    32fc:	20c0      	movs	r0, #192	; 0xc0
    32fe:	0080      	lsls	r0, r0, #2
    3300:	581a      	ldr	r2, [r3, r0]
    3302:	0212      	lsls	r2, r2, #8
    3304:	0a12      	lsrs	r2, r2, #8
    3306:	2180      	movs	r1, #128	; 0x80
    3308:	0609      	lsls	r1, r1, #24
    330a:	430a      	orrs	r2, r1
    330c:	501a      	str	r2, [r3, r0]

0000330e <.LBB24>:
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    330e:	2208      	movs	r2, #8
    3310:	601a      	str	r2, [r3, #0]

00003312 <.LBB26>:
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    3312:	3018      	adds	r0, #24
    3314:	581a      	ldr	r2, [r3, r0]
    3316:	4906      	ldr	r1, [pc, #24]	; (3330 <.LBE28+0x8>)
    3318:	4011      	ands	r1, r2
    331a:	2280      	movs	r2, #128	; 0x80
    331c:	03d2      	lsls	r2, r2, #15
    331e:	430a      	orrs	r2, r1
    3320:	501a      	str	r2, [r3, r0]

00003322 <.LBB28>:
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    3322:	2280      	movs	r2, #128	; 0x80
    3324:	04d2      	lsls	r2, r2, #19
    3326:	601a      	str	r2, [r3, #0]

00003328 <.LBE28>:
    NVIC_EnableIRQ(ADC1_IRQn);



    return;
}
    3328:	4770      	bx	lr
    332a:	46c0      	nop			; (mov r8, r8)
    332c:	e000e100 	.word	0xe000e100
    3330:	ff00ffff 	.word	0xff00ffff

Disassembly of section .rodata%56:

00003334 <parameterIdTable>:
    3334:	00000001 20000110 00000000 00000000     ....... ........

00003344 <blockFunctionTable>:
    3344:	0000ffff 0000054d 000004cf 0000074d     ....M.......M...
    3354:	00000805 00000cb5 00000000 00000000     ................
	...

Disassembly of section .text.__aeabi_idivmod%57:

00003374 <__aeabi_idivmod>:
    return res;
}

/* Do signed division, return result and remainder */
uint64_t __aeabi_idivmod(int32_t numerator, int32_t denominator)
{
    3374:	b510      	push	{r4, lr}

00003376 <.LCFI4>:
    3376:	b082      	sub	sp, #8

00003378 <.LBB91>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    3378:	f3ef 8310 	mrs	r3, PRIMASK

0000337c <.LBE92>:
    uint64_t res;
    _DIVAS_CRITICAL_ENTER();
    337c:	9301      	str	r3, [sp, #4]

0000337e <.LBB94>:
  __ASM volatile ("cpsid i" : : : "memory");
    337e:	b672      	cpsid	i

00003380 <.LBB96>:
    DIVAS_REGS->DIVAS_CTRLA = (DIVAS_REGS->DIVAS_CTRLA & ~DIVAS_CTRLA_SIGNED_Msk) | sign ;
    3380:	2290      	movs	r2, #144	; 0x90
    3382:	05d2      	lsls	r2, r2, #23
    3384:	7813      	ldrb	r3, [r2, #0]
    3386:	2401      	movs	r4, #1
    3388:	43a3      	bics	r3, r4
    338a:	4323      	orrs	r3, r4
    338c:	7013      	strb	r3, [r2, #0]
    DIVAS_REGS->DIVAS_DIVIDEND = dividend;
    338e:	6090      	str	r0, [r2, #8]
    DIVAS_REGS->DIVAS_DIVISOR  = divisor;
    3390:	60d1      	str	r1, [r2, #12]
    while((DIVAS_REGS->DIVAS_STATUS & DIVAS_STATUS_BUSY_Msk) == DIVAS_STATUS_BUSY_Msk)
    3392:	0011      	movs	r1, r2

00003394 <.LVL16>:
    3394:	2201      	movs	r2, #1
    3396:	790b      	ldrb	r3, [r1, #4]
    3398:	4213      	tst	r3, r2
    339a:	d1fc      	bne.n	3396 <.LVL16+0x2>

0000339c <.LBE96>:
    _divas_div(1, numerator, denominator);
    res = _divas_result64();
    339c:	4b03      	ldr	r3, [pc, #12]	; (33ac <.LBE91+0x4>)
    339e:	6818      	ldr	r0, [r3, #0]
    33a0:	6859      	ldr	r1, [r3, #4]

000033a2 <.LVL18>:
    _DIVAS_CRITICAL_LEAVE();
    33a2:	9b01      	ldr	r3, [sp, #4]

000033a4 <.LBB98>:
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    33a4:	f383 8810 	msr	PRIMASK, r3

000033a8 <.LBE91>:
    return res;
}
    33a8:	b002      	add	sp, #8
    33aa:	bd10      	pop	{r4, pc}
    33ac:	48000010 	.word	0x48000010

Disassembly of section .text.__aeabi_uidivmod%58:

000033b0 <__aeabi_uidivmod>:

/* Do unsigned division, return result and remainder */
uint64_t __aeabi_uidivmod(uint32_t numerator, uint32_t denominator)
{
    33b0:	b510      	push	{r4, lr}

000033b2 <.LCFI6>:
    33b2:	b082      	sub	sp, #8

000033b4 <.LBB100>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    33b4:	f3ef 8310 	mrs	r3, PRIMASK

000033b8 <.LBE101>:
    uint64_t res;
    _DIVAS_CRITICAL_ENTER();
    33b8:	9301      	str	r3, [sp, #4]

000033ba <.LBB103>:
  __ASM volatile ("cpsid i" : : : "memory");
    33ba:	b672      	cpsid	i

000033bc <.LBB105>:
    DIVAS_REGS->DIVAS_CTRLA = (DIVAS_REGS->DIVAS_CTRLA & ~DIVAS_CTRLA_SIGNED_Msk) | sign ;
    33bc:	2390      	movs	r3, #144	; 0x90
    33be:	05db      	lsls	r3, r3, #23
    33c0:	781a      	ldrb	r2, [r3, #0]
    33c2:	2401      	movs	r4, #1
    33c4:	43a2      	bics	r2, r4
    33c6:	701a      	strb	r2, [r3, #0]
    DIVAS_REGS->DIVAS_DIVIDEND = dividend;
    33c8:	6098      	str	r0, [r3, #8]
    DIVAS_REGS->DIVAS_DIVISOR  = divisor;
    33ca:	60d9      	str	r1, [r3, #12]
    while((DIVAS_REGS->DIVAS_STATUS & DIVAS_STATUS_BUSY_Msk) == DIVAS_STATUS_BUSY_Msk)
    33cc:	0019      	movs	r1, r3

000033ce <.LVL23>:
    33ce:	2201      	movs	r2, #1
    33d0:	790b      	ldrb	r3, [r1, #4]
    33d2:	4213      	tst	r3, r2
    33d4:	d1fc      	bne.n	33d0 <.LVL23+0x2>

000033d6 <.LBE105>:
    _divas_div(0, numerator, denominator);
    res = _divas_result64();
    33d6:	4b04      	ldr	r3, [pc, #16]	; (33e8 <.LBE100+0x6>)
    33d8:	6818      	ldr	r0, [r3, #0]
    33da:	6859      	ldr	r1, [r3, #4]

000033dc <.LVL25>:
    _DIVAS_CRITICAL_LEAVE();
    33dc:	9b01      	ldr	r3, [sp, #4]

000033de <.LBB107>:
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    33de:	f383 8810 	msr	PRIMASK, r3

000033e2 <.LBE100>:
    return res;
}
    33e2:	b002      	add	sp, #8
    33e4:	bd10      	pop	{r4, pc}
    33e6:	46c0      	nop			; (mov r8, r8)
    33e8:	48000010 	.word	0x48000010

Disassembly of section .text%59:

000033ec <__clzsi2>:
    33ec:	211c      	movs	r1, #28
    33ee:	2301      	movs	r3, #1
    33f0:	041b      	lsls	r3, r3, #16
    33f2:	4298      	cmp	r0, r3
    33f4:	d301      	bcc.n	33fa <__clzsi2+0xe>
    33f6:	0c00      	lsrs	r0, r0, #16
    33f8:	3910      	subs	r1, #16
    33fa:	0a1b      	lsrs	r3, r3, #8
    33fc:	4298      	cmp	r0, r3
    33fe:	d301      	bcc.n	3404 <__clzsi2+0x18>
    3400:	0a00      	lsrs	r0, r0, #8
    3402:	3908      	subs	r1, #8
    3404:	091b      	lsrs	r3, r3, #4
    3406:	4298      	cmp	r0, r3
    3408:	d301      	bcc.n	340e <__clzsi2+0x22>
    340a:	0900      	lsrs	r0, r0, #4
    340c:	3904      	subs	r1, #4
    340e:	a202      	add	r2, pc, #8	; (adr r2, 3418 <.LFE52+0x2c>)
    3410:	5c10      	ldrb	r0, [r2, r0]
    3412:	1840      	adds	r0, r0, r1
    3414:	4770      	bx	lr
    3416:	46c0      	nop			; (mov r8, r8)
    3418:	02020304 	.word	0x02020304
    341c:	01010101 	.word	0x01010101
	...

Disassembly of section .text.SERCOM3_USART_Initialize%60:

00003428 <SERCOM3_USART_Initialize>:
    SERCOM3_REGS->USART_INT.SERCOM_CTRLA = SERCOM_USART_INT_CTRLA_MODE_USART_INT_CLK | SERCOM_USART_INT_CTRLA_RXPO_PAD1 | SERCOM_USART_INT_CTRLA_TXPO_PAD0 | SERCOM_USART_INT_CTRLA_DORD_Msk | SERCOM_USART_INT_CTRLA_IBON_Msk | SERCOM_USART_INT_CTRLA_FORM(0x0) | SERCOM_USART_INT_CTRLA_SAMPR(0) ;
    3428:	4b0a      	ldr	r3, [pc, #40]	; (3454 <.LLST1+0x4>)
    342a:	4a0b      	ldr	r2, [pc, #44]	; (3458 <.LLST1+0x8>)
    342c:	601a      	str	r2, [r3, #0]
    SERCOM3_REGS->USART_INT.SERCOM_BAUD = SERCOM_USART_INT_BAUD_BAUD(SERCOM3_USART_INT_BAUD_VALUE);
    342e:	4a0b      	ldr	r2, [pc, #44]	; (345c <.LLST1+0xc>)
    3430:	819a      	strh	r2, [r3, #12]
    SERCOM3_REGS->USART_INT.SERCOM_CTRLB = SERCOM_USART_INT_CTRLB_CHSIZE_8_BIT | SERCOM_USART_INT_CTRLB_SBMODE_1_BIT | SERCOM_USART_INT_CTRLB_RXEN_Msk | SERCOM_USART_INT_CTRLB_TXEN_Msk;
    3432:	22c0      	movs	r2, #192	; 0xc0
    3434:	0292      	lsls	r2, r2, #10
    3436:	605a      	str	r2, [r3, #4]
    while(SERCOM3_REGS->USART_INT.SERCOM_SYNCBUSY);
    3438:	001a      	movs	r2, r3
    343a:	69d3      	ldr	r3, [r2, #28]
    343c:	2b00      	cmp	r3, #0
    343e:	d1fc      	bne.n	343a <.Ldebug_abbrev0+0xe>
    SERCOM3_REGS->USART_INT.SERCOM_CTRLA |= SERCOM_USART_INT_CTRLA_ENABLE_Msk;
    3440:	4a04      	ldr	r2, [pc, #16]	; (3454 <.LLST1+0x4>)
    3442:	6813      	ldr	r3, [r2, #0]
    3444:	2102      	movs	r1, #2
    3446:	430b      	orrs	r3, r1
    3448:	6013      	str	r3, [r2, #0]
    while(SERCOM3_REGS->USART_INT.SERCOM_SYNCBUSY);
    344a:	69d3      	ldr	r3, [r2, #28]
    344c:	2b00      	cmp	r3, #0
    344e:	d1fc      	bne.n	344a <.Ldebug_abbrev0+0x1e>
}
    3450:	4770      	bx	lr
    3452:	46c0      	nop			; (mov r8, r8)
    3454:	42001000 	.word	0x42001000
    3458:	40100104 	.word	0x40100104
    345c:	fffff62b 	.word	0xfffff62b

Disassembly of section .text.__aeabi_uidiv%61:

00003460 <__aeabi_uidiv>:
{
    3460:	b510      	push	{r4, lr}

00003462 <.LCFI2>:
    3462:	b082      	sub	sp, #8

00003464 <.LBB82>:
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
    3464:	f3ef 8310 	mrs	r3, PRIMASK

00003468 <.LBE83>:
    _DIVAS_CRITICAL_ENTER();
    3468:	9301      	str	r3, [sp, #4]

0000346a <.LBB85>:
  __ASM volatile ("cpsid i" : : : "memory");
    346a:	b672      	cpsid	i

0000346c <.LBB87>:
    DIVAS_REGS->DIVAS_CTRLA = (DIVAS_REGS->DIVAS_CTRLA & ~DIVAS_CTRLA_SIGNED_Msk) | sign ;
    346c:	2390      	movs	r3, #144	; 0x90
    346e:	05db      	lsls	r3, r3, #23
    3470:	781a      	ldrb	r2, [r3, #0]
    3472:	2401      	movs	r4, #1
    3474:	43a2      	bics	r2, r4
    3476:	701a      	strb	r2, [r3, #0]
    DIVAS_REGS->DIVAS_DIVIDEND = dividend;
    3478:	6098      	str	r0, [r3, #8]
    DIVAS_REGS->DIVAS_DIVISOR  = divisor;
    347a:	60d9      	str	r1, [r3, #12]
    while((DIVAS_REGS->DIVAS_STATUS & DIVAS_STATUS_BUSY_Msk) == DIVAS_STATUS_BUSY_Msk)
    347c:	0019      	movs	r1, r3

0000347e <.LVL9>:
    347e:	2201      	movs	r2, #1
    3480:	790b      	ldrb	r3, [r1, #4]
    3482:	4213      	tst	r3, r2
    3484:	d1fc      	bne.n	3480 <.LVL9+0x2>

00003486 <.LBE87>:
    res = _divas_result32();
    3486:	2390      	movs	r3, #144	; 0x90
    3488:	05db      	lsls	r3, r3, #23
    348a:	6918      	ldr	r0, [r3, #16]

0000348c <.LVL11>:
    _DIVAS_CRITICAL_LEAVE();
    348c:	9b01      	ldr	r3, [sp, #4]

0000348e <.LBB89>:
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
    348e:	f383 8810 	msr	PRIMASK, r3

00003492 <.LBE82>:
}
    3492:	b002      	add	sp, #8
    3494:	bd10      	pop	{r4, pc}

Disassembly of section .text.SERCOM3_USART_Write%62:

00003498 <SERCOM3_USART_Write>:
{
    3498:	b530      	push	{r4, r5, lr}

0000349a <.LCFI1>:
    if(pu8Data != NULL)
    349a:	2800      	cmp	r0, #0
    349c:	d00f      	beq.n	34be <.LVL35>

0000349e <.LVL28>:
        while(u32Length--)
    349e:	2900      	cmp	r1, #0
    34a0:	d00f      	beq.n	34c2 <.LVL37>
    34a2:	0005      	movs	r5, r0
    34a4:	1841      	adds	r1, r0, r1

000034a6 <.LVL29>:
            while((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_DRE_Msk) != SERCOM_USART_INT_INTFLAG_DRE_Msk);
    34a6:	4a08      	ldr	r2, [pc, #32]	; (34c8 <.LVL38+0x4>)
    34a8:	2401      	movs	r4, #1

000034aa <.LVL30>:
    34aa:	7e13      	ldrb	r3, [r2, #24]
    34ac:	4223      	tst	r3, r4
    34ae:	d0fc      	beq.n	34aa <.LVL30>

000034b0 <.LVL31>:
            SERCOM3_REGS->USART_INT.SERCOM_DATA = *pu8Data++;
    34b0:	782b      	ldrb	r3, [r5, #0]
    34b2:	8513      	strh	r3, [r2, #40]	; 0x28

000034b4 <.LVL32>:
    34b4:	3501      	adds	r5, #1

000034b6 <.LVL33>:
        while(u32Length--)
    34b6:	42a9      	cmp	r1, r5
    34b8:	d1f7      	bne.n	34aa <.LVL30>
        writeStatus = true;
    34ba:	2001      	movs	r0, #1

000034bc <.LVL34>:
}
    34bc:	bd30      	pop	{r4, r5, pc}

000034be <.LVL35>:
    bool writeStatus      = false;
    34be:	2000      	movs	r0, #0

000034c0 <.LVL36>:
    34c0:	e7fc      	b.n	34bc <.LVL34>

000034c2 <.LVL37>:
        writeStatus = true;
    34c2:	2001      	movs	r0, #1

000034c4 <.LVL38>:
    34c4:	e7fa      	b.n	34bc <.LVL34>
    34c6:	46c0      	nop			; (mov r8, r8)
    34c8:	42001000 	.word	0x42001000

Disassembly of section .text.__libc_fini_array%63:

000034cc <__libc_fini_array>:
    34cc:	b570      	push	{r4, r5, r6, lr}

000034ce <.LCFI0>:
    34ce:	4b09      	ldr	r3, [pc, #36]	; (34f4 <.LVL4+0x4>)
    34d0:	4c09      	ldr	r4, [pc, #36]	; (34f8 <.LVL4+0x8>)
    34d2:	1ae4      	subs	r4, r4, r3
    34d4:	10a4      	asrs	r4, r4, #2

000034d6 <.LVL0>:
    34d6:	d009      	beq.n	34ec <.LVL3+0x6>
    34d8:	4a08      	ldr	r2, [pc, #32]	; (34fc <.LVL4+0xc>)
    34da:	18a5      	adds	r5, r4, r2
    34dc:	00ad      	lsls	r5, r5, #2
    34de:	18ed      	adds	r5, r5, r3

000034e0 <.LVL1>:
    34e0:	682b      	ldr	r3, [r5, #0]
    34e2:	3c01      	subs	r4, #1

000034e4 <.LVL2>:
    34e4:	4798      	blx	r3

000034e6 <.LVL3>:
    34e6:	3d04      	subs	r5, #4
    34e8:	2c00      	cmp	r4, #0
    34ea:	d1f9      	bne.n	34e0 <.LVL1>
    34ec:	f7fc fdf0 	bl	d0 <_fini>

000034f0 <.LVL4>:
    34f0:	bd70      	pop	{r4, r5, r6, pc}
    34f2:	46c0      	nop			; (mov r8, r8)
    34f4:	000000dc 	.word	0x000000dc
    34f8:	000000e0 	.word	0x000000e0
    34fc:	3fffffff 	.word	0x3fffffff

Disassembly of section .text.ADC_ISR%64:

00003500 <ADC_ISR>:
{
    3500:	b510      	push	{r4, lr}

00003502 <.LCFI0>:
 	speed_ref_pot = ADC1_ConversionResultGet();
    3502:	4b06      	ldr	r3, [pc, #24]	; (351c <.LVL4+0x4>)
    3504:	4798      	blx	r3

00003506 <.LVL2>:
    3506:	4b06      	ldr	r3, [pc, #24]	; (3520 <.LVL4+0x8>)
    3508:	8018      	strh	r0, [r3, #0]
    X2CScope_Update();
    350a:	4b06      	ldr	r3, [pc, #24]	; (3524 <.LVL4+0xc>)
    350c:	4798      	blx	r3

0000350e <.LVL3>:
    ADC1_REGS->ADC_INTFLAG = ADC_INTFLAG_Msk;
    350e:	2207      	movs	r2, #7
    3510:	4b05      	ldr	r3, [pc, #20]	; (3528 <.LVL4+0x10>)
    3512:	719a      	strb	r2, [r3, #6]
	motorcontrol();     
    3514:	4b05      	ldr	r3, [pc, #20]	; (352c <.LVL4+0x14>)
    3516:	4798      	blx	r3

00003518 <.LVL4>:
}
    3518:	bd10      	pop	{r4, pc}
    351a:	46c0      	nop			; (mov r8, r8)
    351c:	0000377d 	.word	0x0000377d
    3520:	20000014 	.word	0x20000014
    3524:	00002541 	.word	0x00002541
    3528:	42004800 	.word	0x42004800
    352c:	20007001 	.word	0x20007001

Disassembly of section .rodata%65:

00003530 <.rodata%65>:
    3530:	00001bb0 	.word	0x00001bb0
    3534:	00001bde 	.word	0x00001bde
    3538:	00001bfc 	.word	0x00001bfc
    353c:	00001c1a 	.word	0x00001c1a
    3540:	00001c66 	.word	0x00001c66
    3544:	00001c76 	.word	0x00001c76
    3548:	00001ca4 	.word	0x00001ca4
    354c:	00001cb4 	.word	0x00001cb4
    3550:	00001cf4 	.word	0x00001cf4
    3554:	00001d16 	.word	0x00001d16
    3558:	00001d50 	.word	0x00001d50
    355c:	00001d94 	.word	0x00001d94

Disassembly of section .text.X2CScope_Init%66:

00003560 <X2CScope_Init>:
 */
#include "X2CScopeCommunication.h"
#include "X2CScope.h"

void X2CScope_Init(void)
{
    3560:	b510      	push	{r4, lr}

00003562 <.LCFI0>:
    X2CScope_HookUARTFunctions(sendSerial, receiveSerial, isReceiveDataAvailable, isSendReady);
    3562:	4b04      	ldr	r3, [pc, #16]	; (3574 <.LVL1+0x2>)
    3564:	4a04      	ldr	r2, [pc, #16]	; (3578 <.LVL1+0x6>)
    3566:	4905      	ldr	r1, [pc, #20]	; (357c <.LVL1+0xa>)
    3568:	4805      	ldr	r0, [pc, #20]	; (3580 <.LVL1+0xe>)
    356a:	4c06      	ldr	r4, [pc, #24]	; (3584 <.LVL1+0x12>)
    356c:	47a0      	blx	r4

0000356e <.LVL0>:
    X2CScope_Initialise();
    356e:	4b06      	ldr	r3, [pc, #24]	; (3588 <.LVL1+0x16>)
    3570:	4798      	blx	r3

00003572 <.LVL1>:
}
    3572:	bd10      	pop	{r4, pc}
    3574:	00003771 	.word	0x00003771
    3578:	00003765 	.word	0x00003765
    357c:	000035e1 	.word	0x000035e1
    3580:	0000368d 	.word	0x0000368d
    3584:	00002549 	.word	0x00002549
    3588:	0000248d 	.word	0x0000248d

Disassembly of section .text.ADC1_InterruptHandler%67:

0000358c <ADC1_InterruptHandler>:
    ADC1_CallbackObject.context = context;
}


void ADC1_InterruptHandler( void )
{
    358c:	b500      	push	{lr}

0000358e <.LCFI0>:
    358e:	b083      	sub	sp, #12

00003590 <.LCFI1>:
    volatile ADC_STATUS status;
    status = ADC1_REGS->ADC_INTFLAG;
    3590:	4a07      	ldr	r2, [pc, #28]	; (35b0 <.LCFI1+0x20>)
    3592:	7993      	ldrb	r3, [r2, #6]
    3594:	b2db      	uxtb	r3, r3
    3596:	9301      	str	r3, [sp, #4]
    /* Clear interrupt flag */
    ADC1_REGS->ADC_INTFLAG = ADC_INTENSET_RESRDY_Msk;
    3598:	2301      	movs	r3, #1
    359a:	7193      	strb	r3, [r2, #6]
    if (ADC1_CallbackObject.callback != NULL)
    359c:	4b05      	ldr	r3, [pc, #20]	; (35b4 <.LCFI1+0x24>)
    359e:	681b      	ldr	r3, [r3, #0]
    35a0:	2b00      	cmp	r3, #0
    35a2:	d003      	beq.n	35ac <.LCFI1+0x1c>
    {
        ADC1_CallbackObject.callback(status, ADC1_CallbackObject.context);
    35a4:	9801      	ldr	r0, [sp, #4]
    35a6:	4a03      	ldr	r2, [pc, #12]	; (35b4 <.LCFI1+0x24>)
    35a8:	6851      	ldr	r1, [r2, #4]
    35aa:	4798      	blx	r3
    }
}
    35ac:	b003      	add	sp, #12
    35ae:	bd00      	pop	{pc}
    35b0:	42004800 	.word	0x42004800
    35b4:	20000018 	.word	0x20000018

Disassembly of section .text.EIC_CallbackRegister%68:

000035b8 <EIC_CallbackRegister>:
{
    35b8:	b530      	push	{r4, r5, lr}

000035ba <.LCFI1>:
    if (eicCallbackObject[pin].eicPinNo == pin)
    35ba:	0043      	lsls	r3, r0, #1
    35bc:	181b      	adds	r3, r3, r0
    35be:	009b      	lsls	r3, r3, #2
    35c0:	4c06      	ldr	r4, [pc, #24]	; (35dc <.LVL5+0x6>)
    35c2:	18e3      	adds	r3, r4, r3
    35c4:	7a1b      	ldrb	r3, [r3, #8]
    35c6:	4283      	cmp	r3, r0
    35c8:	d000      	beq.n	35cc <.LVL4>

000035ca <.LVL3>:
}
    35ca:	bd30      	pop	{r4, r5, pc}

000035cc <.LVL4>:
        eicCallbackObject[pin].callback = callback;
    35cc:	0043      	lsls	r3, r0, #1
    35ce:	181d      	adds	r5, r3, r0
    35d0:	00ad      	lsls	r5, r5, #2
    35d2:	5129      	str	r1, [r5, r4]
        eicCallbackObject[pin].context  = context;
    35d4:	1960      	adds	r0, r4, r5

000035d6 <.LVL5>:
    35d6:	6042      	str	r2, [r0, #4]
}
    35d8:	e7f7      	b.n	35ca <.LVL3>
    35da:	46c0      	nop			; (mov r8, r8)
    35dc:	20000020 	.word	0x20000020

Disassembly of section .text.receiveSerial%69:

000035e0 <receiveSerial>:
{
    SERCOM3_USART_Write(&data,1);
}

uint8_t receiveSerial()
{
    35e0:	b500      	push	{lr}

000035e2 <.LCFI2>:
    35e2:	b083      	sub	sp, #12

000035e4 <.LCFI3>:
    uint8_t data;
    bool status = false;
    status = SERCOM3_USART_Read(&data, 1);
    35e4:	2101      	movs	r1, #1
    35e6:	466b      	mov	r3, sp
    35e8:	1dd8      	adds	r0, r3, #7
    35ea:	4b05      	ldr	r3, [pc, #20]	; (3600 <.LVL5+0x4>)
    35ec:	4798      	blx	r3

000035ee <.LVL4>:
    {
      return data;  
    }
    else
    {
      return (uint8_t)(0);
    35ee:	2300      	movs	r3, #0
    if(status == true)
    35f0:	2800      	cmp	r0, #0
    35f2:	d002      	beq.n	35fa <.LVL4+0xc>
      return data;  
    35f4:	466b      	mov	r3, sp
    35f6:	3307      	adds	r3, #7
    35f8:	781b      	ldrb	r3, [r3, #0]
    }
}
    35fa:	0018      	movs	r0, r3

000035fc <.LVL5>:
    35fc:	b003      	add	sp, #12
    35fe:	bd00      	pop	{pc}
    3600:	00002cd9 	.word	0x00002cd9

Disassembly of section .text.OC_FAULT_ISR%70:

00003604 <OC_FAULT_ISR>:
    motor_stop_source = OC_FAULT_STOP;
    3604:	2208      	movs	r2, #8
    3606:	4b06      	ldr	r3, [pc, #24]	; (3620 <.LFE57+0x1c>)
    3608:	701a      	strb	r2, [r3, #0]
    state_run=0;
    360a:	2200      	movs	r2, #0
    360c:	4b05      	ldr	r3, [pc, #20]	; (3624 <.LFE57+0x20>)
    360e:	701a      	strb	r2, [r3, #0]
    LED1_OC_FAULT_Set();
    3610:	2180      	movs	r1, #128	; 0x80
    3612:	0189      	lsls	r1, r1, #6
    3614:	2398      	movs	r3, #152	; 0x98
    3616:	2282      	movs	r2, #130	; 0x82
    3618:	05d2      	lsls	r2, r2, #23
    361a:	50d1      	str	r1, [r2, r3]
    361c:	e7fe      	b.n	361c <OC_FAULT_ISR+0x18>
    361e:	46c0      	nop			; (mov r8, r8)
    3620:	20007eb3 	.word	0x20007eb3
    3624:	2000000b 	.word	0x2000000b

Disassembly of section .rodata%71:

00003628 <.rodata%71>:
    3628:	00000570 	.word	0x00000570
    362c:	000005d4 	.word	0x000005d4
    3630:	00000572 	.word	0x00000572
    3634:	00000570 	.word	0x00000570
    3638:	00000560 	.word	0x00000560
    363c:	000005b0 	.word	0x000005b0
    3640:	000005b0 	.word	0x000005b0
    3644:	000006f4 	.word	0x000006f4
    3648:	000006c2 	.word	0x000006c2

Disassembly of section .text.EVSYS_Initialize%72:

0000364c <EVSYS_Initialize>:
#include "plib_evsys.h"


void EVSYS_Initialize( void )
{	/*Event Channel User Configuration*/
	EVSYS_REGS->EVSYS_USER[9] = EVSYS_USER_CHANNEL(0x2);
    364c:	2384      	movs	r3, #132	; 0x84
    364e:	05db      	lsls	r3, r3, #23
    3650:	2102      	movs	r1, #2
    3652:	22a4      	movs	r2, #164	; 0xa4
    3654:	5099      	str	r1, [r3, r2]
	EVSYS_REGS->EVSYS_USER[30] = EVSYS_USER_CHANNEL(0x1);
    3656:	3901      	subs	r1, #1
    3658:	3254      	adds	r2, #84	; 0x54
    365a:	5099      	str	r1, [r3, r2]

	/* Event Channel 0 Configuration */
	EVSYS_REGS->EVSYS_CHANNEL[0] = EVSYS_CHANNEL_EVGEN(35) | EVSYS_CHANNEL_PATH(2) | EVSYS_CHANNEL_EDGSEL(1) \
    365c:	4a02      	ldr	r2, [pc, #8]	; (3668 <EVSYS_Initialize+0x1c>)
    365e:	621a      	str	r2, [r3, #32]
									 ;
	/* Event Channel 1 Configuration */
	EVSYS_REGS->EVSYS_CHANNEL[1] = EVSYS_CHANNEL_EVGEN(16) | EVSYS_CHANNEL_PATH(2) | EVSYS_CHANNEL_EDGSEL(1) \
    3660:	3a13      	subs	r2, #19
    3662:	625a      	str	r2, [r3, #36]	; 0x24
									 ;

}
    3664:	4770      	bx	lr
    3666:	46c0      	nop			; (mov r8, r8)
    3668:	00000623 	.word	0x00000623

Disassembly of section .text%73:

0000366c <X2C_Init>:
    366c:	b510      	push	{r4, lr}
    366e:	4802      	ldr	r0, [pc, #8]	; (3678 <.LVL0+0x4>)
    3670:	f7fc ff2d 	bl	4ce <.LASF14>

00003674 <.LVL0>:
    3674:	bd10      	pop	{r4, pc}
    3676:	46c0      	nop			; (mov r8, r8)
    3678:	20000110 	.word	0x20000110

0000367c <X2C_Update>:
    367c:	b510      	push	{r4, lr}
    367e:	4802      	ldr	r0, [pc, #8]	; (3688 <.LVL1+0x4>)
    3680:	f7fc ff64 	bl	54c <.Ldebug_line0>

00003684 <.LVL1>:
    3684:	bd10      	pop	{r4, pc}
    3686:	46c0      	nop			; (mov r8, r8)
    3688:	20000110 	.word	0x20000110

Disassembly of section .text.sendSerial%74:

0000368c <sendSerial>:
{
    368c:	b500      	push	{lr}

0000368e <.LCFI0>:
    368e:	b083      	sub	sp, #12

00003690 <.LCFI1>:
    3690:	466b      	mov	r3, sp
    3692:	71d8      	strb	r0, [r3, #7]
    3694:	3307      	adds	r3, #7
    SERCOM3_USART_Write(&data,1);
    3696:	2101      	movs	r1, #1
    3698:	0018      	movs	r0, r3

0000369a <.LVL1>:
    369a:	4b02      	ldr	r3, [pc, #8]	; (36a4 <.LVL2+0x6>)
    369c:	4798      	blx	r3

0000369e <.LVL2>:
}
    369e:	b003      	add	sp, #12
    36a0:	bd00      	pop	{pc}
    36a2:	46c0      	nop			; (mov r8, r8)
    36a4:	00003499 	.word	0x00003499

Disassembly of section .text.TCC0_PWMStart%75:

000036a8 <TCC0_PWMStart>:


/* Start the PWM generation */
void TCC0_PWMStart(void)
{
    TCC0_REGS->TCC_CTRLA |= TCC_CTRLA_ENABLE_Msk;
    36a8:	4a05      	ldr	r2, [pc, #20]	; (36c0 <.LFE56+0x18>)
    36aa:	6813      	ldr	r3, [r2, #0]
    36ac:	2102      	movs	r1, #2
    36ae:	430b      	orrs	r3, r1
    36b0:	6013      	str	r3, [r2, #0]
    while (TCC0_REGS->TCC_SYNCBUSY & (TCC_SYNCBUSY_ENABLE_Msk))
    36b2:	0011      	movs	r1, r2
    36b4:	2202      	movs	r2, #2
    36b6:	688b      	ldr	r3, [r1, #8]
    36b8:	421a      	tst	r2, r3
    36ba:	d1fc      	bne.n	36b6 <TCC0_PWMStart+0xe>
    {
        /* Wait for sync */
    }
}
    36bc:	4770      	bx	lr
    36be:	46c0      	nop			; (mov r8, r8)
    36c0:	42002400 	.word	0x42002400

Disassembly of section .text.ADC1_Enable%76:

000036c4 <ADC1_Enable>:
    ADC1_REGS->ADC_CTRLA |= ADC_CTRLA_ENABLE_Msk;
    36c4:	4a04      	ldr	r2, [pc, #16]	; (36d8 <.LFE49+0x14>)
    36c6:	7813      	ldrb	r3, [r2, #0]
    36c8:	2102      	movs	r1, #2
    36ca:	430b      	orrs	r3, r1
    36cc:	7013      	strb	r3, [r2, #0]
    while(ADC1_REGS->ADC_SYNCBUSY)
    36ce:	8c13      	ldrh	r3, [r2, #32]
    36d0:	b29b      	uxth	r3, r3
    36d2:	2b00      	cmp	r3, #0
    36d4:	d1fb      	bne.n	36ce <ADC1_Enable+0xa>
}
    36d6:	4770      	bx	lr
    36d8:	42004800 	.word	0x42004800

Disassembly of section .rodata%77:

000036dc <.rodata%77>:
    36dc:	000016fc 	.word	0x000016fc
    36e0:	00001712 	.word	0x00001712
    36e4:	0000171e 	.word	0x0000171e
    36e8:	0000172a 	.word	0x0000172a
    36ec:	00001736 	.word	0x00001736
    36f0:	00001742 	.word	0x00001742

Disassembly of section .text.register_fini%78:

000036f4 <register_fini>:
    36f4:	4b03      	ldr	r3, [pc, #12]	; (3704 <.LBE2+0x2>)
    36f6:	b510      	push	{r4, lr}

000036f8 <.LCFI0>:
    36f8:	2b00      	cmp	r3, #0
    36fa:	d002      	beq.n	3702 <.LBE2>

000036fc <.LBB2>:
    36fc:	4802      	ldr	r0, [pc, #8]	; (3708 <.LBE2+0x6>)
    36fe:	f000 f829 	bl	3754 <.LFE54>

00003702 <.LBE2>:
    3702:	bd10      	pop	{r4, pc}
    3704:	00000000 	.word	0x00000000
    3708:	000034cd 	.word	0x000034cd

Disassembly of section .text.SERCOM3_USART_ErrorGet%79:

0000370c <SERCOM3_USART_ErrorGet>:

USART_ERROR SERCOM3_USART_ErrorGet( void )
{
    USART_ERROR errorStatus = USART_ERROR_NONE;

    errorStatus = SERCOM3_REGS->USART_INT.SERCOM_STATUS & (SERCOM_USART_INT_STATUS_PERR_Msk | SERCOM_USART_INT_STATUS_FERR_Msk | SERCOM_USART_INT_STATUS_BUFOVF_Msk);
    370c:	4b03      	ldr	r3, [pc, #12]	; (371c <.LVL49+0x4>)
    370e:	8b58      	ldrh	r0, [r3, #26]

00003710 <.LVL48>:

    /* Clear Errors */
    SERCOM3_REGS->USART_INT.SERCOM_STATUS = SERCOM_USART_INT_STATUS_PERR_Msk | SERCOM_USART_INT_STATUS_FERR_Msk | SERCOM_USART_INT_STATUS_BUFOVF_Msk;
    3710:	2207      	movs	r2, #7
    3712:	835a      	strh	r2, [r3, #26]

    return errorStatus;
    3714:	2307      	movs	r3, #7
    3716:	4018      	ands	r0, r3

00003718 <.LVL49>:
}
    3718:	4770      	bx	lr
    371a:	46c0      	nop			; (mov r8, r8)
    371c:	42001000 	.word	0x42001000

Disassembly of section .rodata%80:

00003720 <compilationDate>:
    3720:	206e614a 32203320 30393130 38343a30     Jan  3 201900:48
    3730:	0032353a                                :52.

Disassembly of section .text.SERCOM3_USART_TransmitterIsReady%81:

00003734 <SERCOM3_USART_TransmitterIsReady>:
    if((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_DRE_Msk) == SERCOM_USART_INT_INTFLAG_DRE_Msk)
    3734:	4b02      	ldr	r3, [pc, #8]	; (3740 <.LVL41+0x4>)
    3736:	7e18      	ldrb	r0, [r3, #24]

00003738 <.LVL40>:
    return transmitterStatus;
    3738:	2301      	movs	r3, #1
    373a:	4018      	ands	r0, r3

0000373c <.LVL41>:
}
    373c:	4770      	bx	lr
    373e:	46c0      	nop			; (mov r8, r8)
    3740:	42001000 	.word	0x42001000

Disassembly of section .text.SERCOM3_USART_ReceiverIsReady%82:

00003744 <SERCOM3_USART_ReceiverIsReady>:
    if((SERCOM3_REGS->USART_INT.SERCOM_INTFLAG & SERCOM_USART_INT_INTFLAG_RXC_Msk) == SERCOM_USART_INT_INTFLAG_RXC_Msk)
    3744:	4b02      	ldr	r3, [pc, #8]	; (3750 <.LLST3+0x6>)
    3746:	7e18      	ldrb	r0, [r3, #24]

00003748 <.LVL45>:
    3748:	0740      	lsls	r0, r0, #29

0000374a <.LVL46>:
    return receiverStatus;
    374a:	0fc0      	lsrs	r0, r0, #31
}
    374c:	4770      	bx	lr
    374e:	46c0      	nop			; (mov r8, r8)
    3750:	42001000 	.word	0x42001000

Disassembly of section .text.atexit%83:

00003754 <atexit>:
    3754:	b510      	push	{r4, lr}

00003756 <.LCFI0>:
    3756:	0001      	movs	r1, r0
    3758:	2300      	movs	r3, #0
    375a:	2200      	movs	r2, #0
    375c:	2000      	movs	r0, #0

0000375e <.LVL1>:
    375e:	f7fe fff5 	bl	274c <__register_exitproc>

00003762 <.LVL2>:
    3762:	bd10      	pop	{r4, pc}

Disassembly of section .text.isReceiveDataAvailable%84:

00003764 <isReceiveDataAvailable>:

uint8_t isReceiveDataAvailable()
{
    3764:	b510      	push	{r4, lr}

00003766 <.LCFI4>:
    return (SERCOM3_USART_ReceiverIsReady());
    3766:	4b01      	ldr	r3, [pc, #4]	; (376c <.LVL6+0x2>)
    3768:	4798      	blx	r3

0000376a <.LVL6>:

}
    376a:	bd10      	pop	{r4, pc}
    376c:	00003745 	.word	0x00003745

Disassembly of section .text.isSendReady%85:

00003770 <isSendReady>:

uint8_t isSendReady()
{
    3770:	b510      	push	{r4, lr}

00003772 <.LCFI5>:
    return (SERCOM3_USART_TransmitterIsReady());
    3772:	4b01      	ldr	r3, [pc, #4]	; (3778 <.LVL7+0x2>)
    3774:	4798      	blx	r3

00003776 <.LVL7>:
}
    3776:	bd10      	pop	{r4, pc}
    3778:	00003735 	.word	0x00003735

Disassembly of section .text.ADC1_ConversionResultGet%86:

0000377c <ADC1_ConversionResultGet>:
    return (uint16_t)ADC1_REGS->ADC_RESULT;
    377c:	4b01      	ldr	r3, [pc, #4]	; (3784 <.LFE59+0x8>)
    377e:	8c98      	ldrh	r0, [r3, #36]	; 0x24
    3780:	b280      	uxth	r0, r0
}
    3782:	4770      	bx	lr
    3784:	42004800 	.word	0x42004800

Disassembly of section .text.ADC1_CallbackRegister%87:

00003788 <ADC1_CallbackRegister>:
    ADC1_CallbackObject.callback = callback;
    3788:	4b01      	ldr	r3, [pc, #4]	; (3790 <.LFE53+0x8>)
    378a:	6018      	str	r0, [r3, #0]
    ADC1_CallbackObject.context = context;
    378c:	6059      	str	r1, [r3, #4]
}
    378e:	4770      	bx	lr
    3790:	20000018 	.word	0x20000018

Disassembly of section .text%88:

00003794 <initVersionInfo>:
    3794:	8401      	strh	r1, [r0, #32]
    3796:	4b01      	ldr	r3, [pc, #4]	; (379c <.LFE54+0x8>)
    3798:	6243      	str	r3, [r0, #36]	; 0x24
    379a:	4770      	bx	lr
    379c:	00003720 	.word	0x00003720

Disassembly of section .rodata._global_impure_ptr%89:

000037a0 <_global_impure_ptr>:
    37a0:	20002188                                .!. 

Disassembly of section .text.Dummy_Handler%90:

00003496 <Dummy_Handler>:

extern uint32_t _stack;

/* Brief default interrupt handler for unused IRQs.*/
void __attribute__((optimize("-O1"),section(".text.Dummy_Handler"),long_call))Dummy_Handler(void)
{
    3496:	e7fe      	b.n	3496 <Dummy_Handler>

Disassembly of section .text.NonMaskableInt_Handler%91:

000037a4 <NonMaskableInt_Handler>:
// *****************************************************************************

/* Brief default interrupt handlers for core IRQs.*/

void NonMaskableInt_Handler(void)
{
    37a4:	e7fe      	b.n	37a4 <NonMaskableInt_Handler>

Disassembly of section .text.HardFault_Handler%92:

000037a6 <HardFault_Handler>:
    {
    }
}

void HardFault_Handler(void)
{
    37a6:	e7fe      	b.n	37a6 <HardFault_Handler>

Disassembly of section .text.DIVAS_Initialize%93:

000037a8 <DIVAS_Initialize>:
}
    37a8:	4770      	bx	lr
